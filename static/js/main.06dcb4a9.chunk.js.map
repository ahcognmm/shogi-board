{"version":3,"sources":["model/shogi/Piece.ts","lib/game-handler/piece.ts","model/shogi/Turn.ts","lib/game-handler/captures.ts","lib/game-handler/position.ts","model/kif/History.ts","lib/kif-handler/changeIndex.ts","lib/strings.ts","lib/kif-handler/genKifString.ts","lib/kif-handler/pushMove.ts","lib/validatior/utils/getEmpties.ts","lib/validatior/utils/getFromNexts.ts","lib/validatior/utils/algorithm.ts","lib/validatior/utils/getWithDiff.ts","lib/validatior/pieces/hisha.ts","lib/validatior/pieces/kaku.ts","lib/validatior/getTargets.ts","lib/validatior/pieces/fu.ts","lib/validatior/pieces/kyou.ts","lib/validatior/pieces/kei.ts","lib/validatior/pieces/gin.ts","lib/validatior/pieces/kin.ts","lib/validatior/pieces/gyoku.ts","lib/validatior/pieces/uma.ts","lib/validatior/pieces/ryu.ts","lib/validatior/utils/getGyokuPoint.ts","lib/validatior/utils/isPointed.ts","model/kif/Kif.ts","model/shogi/PositionInit.ts","store/GameStateStore.ts","lib/validatior/utils/filterTargets.ts","lib/kif-handler/getCurrent.ts","components/shogi/Cell.tsx","components/shogi/Board.tsx","lib/kif-handler/getAsString.ts","components/shogi/Buttons.tsx","components/shogi/Captures.tsx","components/shogi/LeftSide.tsx","components/shogi/Kif.tsx","lib/dom-handler/intoView.ts","components/shogi/RightSide.tsx","components/shogi/BoardArea.tsx","components/App.tsx","index.tsx"],"names":["Empty","Fu0","Kyou0","Kei0","Gin0","Kin0","Kaku0","Hisha0","Gyoku0","To0","NariKyou0","NariKei0","NariGin0","Uma0","Ryu0","Fu1","Kyou1","Kei1","Gin1","Kin1","Kaku1","Hisha1","Gyoku1","To1","NariKyou1","NariKei1","NariGin1","Uma1","Ryu1","promote","p","demote","Math","abs","Sente","Gote","handle","cap","f","Error","map","count","index","v","move","handleCaptures","turn","pos","slice","d","dest","row","column","i","increaseCaptures","source","decreaseCaptures","piece","updatedCap0","cap0","updatedCap1","cap1","moveOnBoard","moveCount","moveBoardOnly","line","r","c","isBranch","m","changeHistory","h","x","y","lastIndex","moves","length","last","init","xPassesIfBranch","concat","b","undefined","branches","changeBranch","rows","columns","rowString","columnString","genKifString","pc","pieceString","dr","dc","sr","sc","pushToHistory","lastIsCurrent","pushToBranch","nextIndex","next","moveEquals","tail","toHistory","createBranch","recursive","indexOfNewMove","findIndex","a","getEmpties","invalidRows","invalidColumns","points","includes","push","getFromNexts","nexts","comp","find","pts","l","getWithDiff","rowDiff","columnDiff","target","hisha","diffList","sort","kaku","getTargets","point","columnsOfContainingFu","col","invalidRow","nextRow","fu","diff","reverse","kyou","invalidRow1","invalidRow2","kei","gin","kin","gyoku","kakuPoint","kakuTargets","targets","uma","hishaPoint","hishaTargets","ryu","getGyokuPoint","isPointed","attacker","ignoreCheckLeaving","newKif","initPos","meta","version","player","sente","gote","handicap","history","str","GameStateStore","this","indexes","_this","sel","selected","currentMove","confirm","isPiece","clicked","cp","selectedAgain","t","ownerIsTurn","filtered","filter","gp","moved","isFu","isFromCapture","enemyGyoku","fuIsPointed","filteredEnemyGyokuTargets","filterTargets","moveTargets","moveAndUpdateState","old","moveProps","kifStr","moveForKif","kif","props","sourceRow","isPromotable","isInEnemyArea","destRow","canPromote","mp","mustPromote","promoted","preserved","branchIndex","k","moveOrBranch","getCurrent","observable","computed","action","Cell","inject","observer","getPiece","inRange","store","_this2","className","rowInRange","colInRange","isLeft","rv","isTop","isStar","isSelected","rvp","pieceImg","pieceTurn","isTurn","pieceSelected","left","top","edgeText","star","trim","getClassName","react_default","createElement","onClick","click","renderConfirm","renderEdgeTextRow","renderEdgeTextColumn","cf","_this3","isReversed","isGote","Number","clickPiece","Component","n","Board","idx","Cell_Cell","key","getAsString","getRec","kc","join","Buttons","clickKif","data-clipboard-text","Captures","isLeftSide","cells","captures","name","pieceId","children","Array","from","keys","selectedClass","getSelectedClass","isTurnClass","sideNumber","captureClass","LeftSide","caps","Captures_Captures","Buttons_Buttons","Kif","renderKif","nested","renderBranch","renderMove","prototype","apply","main","_main$moves","Object","toArray","head","rest","otherHeadsDom","_loop","restDom","curNum","id","current","document","getElementById","scrollIntoView","intoView","RightSide","Kif_Kif","BoardArea","LeftSide_LeftSide","Board_Board","RightSide_RightSide","App","index_module","BoardArea_BoardArea","ReactDOM","render","App_App","ClipboardJS"],"mappings":"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","file":"static/js/main.06dcb4a9.chunk.js","sourcesContent":["export type Piece = number\n\nexport const Empty: Piece = 0\n\nexport const Fu0: Piece = 1\nexport const Kyou0: Piece = 2\nexport const Kei0: Piece = 3\nexport const Gin0: Piece = 4\nexport const Kin0: Piece = 5\nexport const Kaku0: Piece = 6\nexport const Hisha0: Piece = 7\nexport const Gyoku0: Piece = 8\nexport const To0: Piece = 11\nexport const NariKyou0: Piece = 12\nexport const NariKei0: Piece = 13\nexport const NariGin0: Piece = 14\nexport const Uma0: Piece = 16\nexport const Ryu0: Piece = 17\n\nexport const Fu1: Piece = -Fu0\nexport const Kyou1: Piece = -Kyou0\nexport const Kei1: Piece = -Kei0\nexport const Gin1: Piece = -Gin0\nexport const Kin1: Piece = -Kin0\nexport const Kaku1: Piece = -Kaku0\nexport const Hisha1: Piece = -Hisha0\nexport const Gyoku1: Piece = -Gyoku0\nexport const To1: Piece = -To0\nexport const NariKyou1: Piece = -NariKyou0\nexport const NariKei1: Piece = -NariKei0\nexport const NariGin1: Piece = -NariGin0\nexport const Uma1: Piece = -Uma0\nexport const Ryu1: Piece = -Ryu0\n","import {\n  Piece,\n  Empty,\n  Hisha0,\n  Kin0,\n  Fu0,\n  Fu1,\n  Kyou0,\n  Kyou1,\n  Kei0,\n  Kei1,\n} from '../../model/shogi/Piece'\n\n/**\n * 駒を成る\n * canPromote を通っている前提\n * @param p Piece 成る前の駒\n */\nexport function promote(p: Piece): Piece {\n  if (p > 0) return p + 10\n  return p - 10\n}\n\n/**\n * 駒を成る前の駒にする\n * @param p Piece 成駒\n */\nexport function demote(p: Piece): Piece {\n  if (Math.abs(p) < 10) return p\n\n  if (p < 0) return p + 10\n  return p - 10\n}\n\nexport interface CanPromoteProps {\n  // 移動前の行\n  sourceRow: number\n\n  // 移動後の行\n  destRow: number\n\n  // 移動する駒\n  piece: Piece\n}\n\n/**\n * 成・不成の選択ができるかどうか\n * 選択可能: true\n * 選択不可: false\n * @param props CanPromoteProps\n * @returns boolean\n *          成れる駒 && sourceRow か destRow が敵陣なら true\n *          成れない駒(金とか、既に成駒の場合)なら false\n */\nexport function canPromote(props: CanPromoteProps): boolean {\n  // 持ち駒\n  if (props.sourceRow === -1) return false\n\n  const isPromotable: boolean =\n    props.piece !== Empty &&\n    Math.abs(props.piece) !== Kin0 &&\n    Math.abs(props.piece) <= Hisha0\n\n  const rows: number[] = props.piece > 0 ? [0, 1, 2] : [6, 7, 8]\n  const isInEnemyArea: boolean =\n    rows.includes(props.sourceRow) || rows.includes(props.destRow)\n\n  return isPromotable && isInEnemyArea\n}\n\n/**\n * 移動後に、必ず成る必要があるか\n * 歩・香・桂が不成の場合に次に動けないとき true\n * @param p Piece 動かす駒\n * @param row 移動後の行\n * @returns boolean\n *          成必要がある場合 true\n */\nexport function mustPromote(p: Piece, row: number): boolean {\n  return (\n    ((p === Fu0 || p === Kyou0) && row === 0) ||\n    ((p === Fu1 || p === Kyou1) && row === 8) ||\n    (p === Kei0 && (row === 0 || row === 1)) ||\n    (p === Kei1 && (row === 8 || row === 7))\n  )\n}\n","// 手番\n//  1: 先手\n// -1: 後手\nexport type Turn = 1 | -1\n\nexport const Sente: Turn = 1\nexport const Gote: Turn = -1\n","import { Gyoku0, Gyoku1, Piece } from '../../model/shogi/Piece'\n\n/**\n * 持ち駒を1つ増やす\n * @param cap number[] 持ち駒を表す配列。詳細は Position.ts\n * @param p Piece 増やしたい駒\n */\nexport function increaseCaptures(cap: number[], p: Piece): number[] {\n  return handle(cap, Math.abs(p), i => i + 1)\n}\n\n/**\n * 持ち駒を1つ減らす\n * @param cap number[] 持ち駒を表す配列。詳細は Position.ts\n * @param p Piece 減らしたい駒\n */\nexport function decreaseCaptures(cap: number[], p: Piece): number[] {\n  return handle(cap, Math.abs(p), i => i - 1)\n}\n\nfunction handle(cap: number[], p: Piece, f: (i: number) => number): number[] {\n  if (p === Gyoku0 || p === Gyoku1 || p > 10)\n    throw new Error('Piece ID of Captures must not be Gyoku or over 10.')\n\n  return cap.map((count, index) => {\n    // 駒IDが一致しなければそのまま\n    // p は Math.abs() を通っている\n    if (index !== p - 1) return count\n\n    const v = f(count)\n    if (v < 0)\n      throw new Error(\n        'Invalid function call. Captures must not contain negative value.'\n      )\n\n    return v\n  })\n}\n","import MoveProps from '../../model/events/MoveProps'\nimport { Empty, Piece } from '../../model/shogi/Piece'\nimport Position from '../../model/shogi/Position'\nimport { Gote, Sente, Turn } from '../../model/shogi/Turn'\nimport { decreaseCaptures, increaseCaptures } from './captures'\nimport { demote } from './piece'\n\nexport function move(p: MoveProps): Position {\n  // 持ち駒を更新する\n  type CaptureHandler = (cap: number[], turn: Turn) => number[]\n  const handleCaptures: CaptureHandler = (cap: number[], turn: Turn) => {\n    // 手番ではない場合、何もしない\n    if (p.pos.turn !== turn) return cap.slice()\n\n    // 移動先が相手の駒なら持ち駒を増やす\n    const d: Piece = p.pos.pos[p.dest.row][p.dest.column]\n    if (d * turn < 0) return increaseCaptures(cap, demote(d))\n\n    // 移動元が持ち駒なら減らす\n    if (p.source.row === -1 && p.source.column === -1)\n      return decreaseCaptures(cap, p.piece)\n\n    return cap.slice()\n  }\n\n  const updatedCap0: number[] = handleCaptures(p.pos.cap0, Sente)\n  const updatedCap1: number[] = handleCaptures(p.pos.cap1, Gote)\n\n  return {\n    pos: moveOnBoard(p),\n    cap0: updatedCap0,\n    cap1: updatedCap1,\n    turn: <Turn>-p.pos.turn,\n    moveCount: p.pos.moveCount + 1,\n  }\n}\n\nexport function moveBoardOnly(p: MoveProps): Position {\n  return {\n    pos: moveOnBoard(p),\n    cap0: p.pos.cap0.slice(),\n    cap1: p.pos.cap1.slice(),\n    turn: <Turn>-p.pos.turn,\n    moveCount: p.pos.moveCount + 1,\n  }\n}\n\nfunction moveOnBoard(p: MoveProps): number[][] {\n  return p.pos.pos.map((line, r) =>\n    line.map((piece, c) => {\n      // 移動前の位置なら空マスに\n      if (p.source.row === r && p.source.column === c) return Empty\n\n      // 移動先の位置なら更新\n      if (p.dest.row === r && p.dest.column === c) return p.piece\n\n      return piece\n    })\n  )\n}\n","import Branch from './Branch'\nimport Move from './Move'\n\nexport type KifComponent = Move | Branch\n\n// TODO: もうちょい持ち方考える\n// 理想は\n// {\n//   head: Move,\n//   next: History,\n//   isCurrent: boolean\n// }\n// だが、JSON互換的に苦しい感じ\nexport default interface History {\n  moves: KifComponent[]\n\n  // history のインデックス\n  // ブラウザで表示するときに現在局面がどこか探せるように\n  index: number\n}\n\nexport function isBranch(m: KifComponent): m is Branch {\n  return 'branches' in m\n}\n","import Branch from '../../model/kif/Branch'\nimport History, { isBranch, KifComponent } from '../../model/kif/History'\nimport Kif from '../../model/kif/Kif'\n\n/**\n * 現在局面を更新した新しい棋譜を返す\n * @param k Kif 更新したい棋譜\n * @param x number 現在局面にしたい手数\n * @param y number | undefined 分岐を切り替える場合のみ、分岐のインデックス\n */\nexport function changeIndex(k: Kif, x: number, y?: number): Kif {\n  return {\n    meta: k.meta,\n    history: changeHistory(k.history, x, y),\n  }\n}\n\n// TODO: Move にインデックスを入れたので、少しシンプルにできる\nfunction changeHistory(h: History, x: number, y?: number): History {\n  const lastIndex: number = h.moves.length - 1\n  const last: KifComponent = h.moves[lastIndex]\n  const init: KifComponent[] = h.moves.slice(0, lastIndex)\n\n  const xPassesIfBranch: number = x <= lastIndex ? 0 : x - lastIndex\n\n  const moves: KifComponent[] = isBranch(last)\n    ? init.concat(changeBranch(last, xPassesIfBranch, y))\n    : h.moves.slice()\n\n  const index: number = x <= lastIndex ? x : lastIndex\n\n  return { moves, index }\n}\n\nfunction changeBranch(b: Branch, x: number, y?: number): Branch {\n  const index = x === 0 && y !== undefined ? y : b.index\n\n  if (x === 0)\n    return {\n      branches: b.branches.map(h => changeHistory(h, 0)),\n      index,\n    }\n\n  const branches = b.branches.map((h: History, i: number) =>\n    i === b.index ? changeHistory(h, x, y) : h\n  )\n\n  return { branches, index }\n}\n","import {\n  Fu0,\n  Gin0,\n  Gyoku0,\n  Hisha0,\n  Kaku0,\n  Kei0,\n  Kin0,\n  Kyou0,\n  NariGin0,\n  NariKei0,\n  NariKyou0,\n  Piece,\n  Ryu0,\n  To0,\n  Uma0,\n} from '../model/shogi/Piece'\n\nconst rows = ['一', '二', '三', '四', '五', '六', '七', '八', '九']\nconst columns = ['１', '２', '３', '４', '５', '６', '７', '８', '９']\n\nexport function rowString(r: number): string {\n  return rows[r]\n}\n\nexport function columnString(c: number): string {\n  return columns[c]\n}\n\nexport function pieceString(piece: Piece): string {\n  const p = Math.abs(piece)\n\n  if (p === Fu0) return '歩'\n  if (p === Kyou0) return '香'\n  if (p === Kei0) return '桂'\n  if (p === Gin0) return '銀'\n  if (p === Kin0) return '金'\n  if (p === Kaku0) return '角'\n  if (p === Hisha0) return '飛'\n  if (p === Gyoku0) return '玉'\n  if (p === To0) return 'と'\n  if (p === NariKyou0) return '成香'\n  if (p === NariKei0) return '成桂'\n  if (p === NariGin0) return '成銀'\n  if (p === Uma0) return '馬'\n  if (p === Ryu0) return '龍'\n\n  throw new Error('Failed to ident piece name. received: ' + piece)\n}\n","import MoveProps from '../../model/events/MoveProps'\nimport { demote } from '../game-handler/piece'\nimport { columnString, pieceString, rowString } from '../strings'\n\n/**\n * 棋譜の文字列を生成する\n * @param p MoveProps\n */\nexport function genKifString(p: MoveProps): string {\n  const pc: string = pieceString(p.promote ? demote(p.piece) : p.piece)\n  const dr: string = rowString(p.dest.row)\n  const dc: string = columnString(p.dest.column)\n\n  if (p.source.row === -1) return `${dc}${dr}${pc}打`\n\n  const sr: number = p.source.row + 1\n  const sc: number = p.source.column + 1\n  const promote: string =\n    p.promote === undefined ? '' : p.promote ? '成' : '不成'\n\n  return `${dc}${dr}${pc}${promote}(${sc}${sr})`\n}\n","import Branch from '../../model/kif/Branch'\nimport History, { isBranch, KifComponent } from '../../model/kif/History'\nimport Kif from '../../model/kif/Kif'\nimport Move from '../../model/kif/Move'\n\n/**\n * 棋譜に新しいMoveを追加する\n * @param old Kif\n * @param m Move 追加する一手\n */\nexport default function(old: Kif, m: Move): Kif {\n  return {\n    meta: old.meta,\n    history: pushToHistory(old.history, m),\n  }\n}\n\nfunction pushToHistory(h: History, m: Move): History {\n  const lastIsCurrent: boolean = h.index === h.moves.length - 1\n  const last: KifComponent = h.moves[h.index]\n\n  if (lastIsCurrent && isBranch(last))\n    return {\n      moves: h.moves\n        .slice(0, h.moves.length - 1)\n        .concat(pushToBranch(last, m, true)),\n      index: h.index,\n    }\n\n  const nextIndex: number = h.index + 1\n\n  if (lastIsCurrent)\n    return {\n      moves: h.moves.concat(m),\n      index: nextIndex,\n    }\n\n  const next: KifComponent = h.moves[nextIndex]\n  const init: KifComponent[] = h.moves.slice(0, nextIndex)\n\n  if (isBranch(next))\n    return {\n      moves: init.concat(pushToBranch(next, m, false)),\n      index: nextIndex,\n    }\n\n  // 追加しようとしてる Move が次と一緒ならインデックスだけ更新\n  if (moveEquals(m, next))\n    return {\n      moves: h.moves.slice(),\n      index: nextIndex,\n    }\n\n  const tail: KifComponent[] = h.moves.slice(nextIndex, h.moves.length)\n  return {\n    moves: init.concat(createBranch(tail, m)),\n    index: nextIndex,\n  }\n}\n\nfunction pushToBranch(b: Branch, m: Move, recursive: boolean): Branch {\n  // 分岐の先頭は現在表示局面ではないので、再帰的に更新する\n  if (recursive)\n    return {\n      branches: b.branches.map((h: History, i: number) => {\n        if (i === b.index) return pushToHistory(h, m)\n        return h\n      }),\n      index: b.index,\n    }\n\n  const indexOfNewMove: number = b.branches.findIndex(h =>\n    moveEquals(<Move>h.moves[0], m)\n  )\n\n  // 追加しようとしてる Move がすでに分岐の先頭にある\n  if (indexOfNewMove !== -1)\n    return {\n      branches: b.branches.slice(),\n      index: indexOfNewMove,\n    }\n\n  return {\n    branches: b.branches.concat(toHistory([m])),\n    index: b.branches.length,\n  }\n}\n\nfunction createBranch(tail: KifComponent[], m: Move): Branch {\n  return {\n    branches: [toHistory(tail), toHistory([m])],\n    index: 1,\n  }\n}\n\nfunction toHistory(c: KifComponent[]): History {\n  return { moves: c, index: 0 }\n}\n\nfunction moveEquals(a: Move, b: Move): boolean {\n  return (\n    a.index === b.index &&\n    a.source.row === b.source.row &&\n    a.source.column === b.source.column &&\n    a.dest.row === b.dest.row &&\n    a.dest.column === b.dest.column &&\n    a.piece === b.piece &&\n    a.promote === b.promote\n  )\n}\n","import { Piece, Empty } from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\n\nexport default function(\n  pos: Piece[][],\n  invalidRows?: number[],\n  invalidColumns?: number[]\n): Point[] {\n  const points: Point[] = []\n\n  for (let r = 0; r < 9; r++) {\n    if (invalidRows && invalidRows.includes(r)) continue\n\n    for (let c = 0; c < 9; c++) {\n      const columnIsInvalid = invalidColumns && invalidColumns.includes(c)\n      if (columnIsInvalid || pos[r][c] !== Empty) continue\n      points.push({ row: r, column: c })\n    }\n  }\n\n  return points\n}\n","import { Piece } from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\n\nexport default function(pos: Piece[][], nexts: number[][], p: Piece): Point[] {\n  const points: Point[] = []\n\n  for (let i = 0; i < nexts.length; i++) {\n    const row = nexts[i][0]\n    const column = nexts[i][1]\n    if (\n      row >= 0 &&\n      row <= 8 &&\n      column >= 0 &&\n      column <= 8 &&\n      pos[row][column] * p <= 0\n    )\n      points.push({ row, column })\n  }\n\n  return points\n}\n","import Point from '../../../model/shogi/Point'\n\nexport function comp(a: Point, b: Point): number {\n  return a.row - b.row || a.column - b.column\n}\n\nexport function find(pts: Point[], p: Point): number {\n  let i = pts.length >> 1\n  let l = 0\n  let r = pts.length - 1\n\n  while (l <= r) {\n    if (pts[i].row === p.row && pts[i].column === p.column) return i\n    if (pts[i].row < p.row) l = i + 1\n    else if (pts[i].row > p.row) r = i - 1\n    else if (pts[i].column < p.column) l = i + 1\n    else r = i - 1\n    i = l + ((r - l) >> 1)\n  }\n\n  return -1\n}\n","import { Piece } from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\n\nexport default function(\n  pos: Piece[][],\n  row: number,\n  column: number,\n  piece: Piece,\n  points: Point[],\n  rowDiff: number,\n  columnDiff: number\n): void {\n  while (0 <= row && row <= 8 && 0 <= column && column <= 8) {\n    const target: Piece = pos[row][column]\n    if (target * piece > 0) break\n    points.push({ row, column })\n    if (target * piece < 0) break\n    row += rowDiff\n    column += columnDiff\n  }\n}\n","import { Hisha0, Hisha1 } from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\nimport Position from '../../../model/shogi/Position'\nimport { comp } from '../utils/algorithm'\nimport getEmpties from '../utils/getEmpties'\nimport getWithDiff from '../utils/getWithDiff'\n\nexport default function(pos: Position, p: Point): Point[] {\n  if (!p.piece || (p.piece !== Hisha0 && p.piece !== Hisha1))\n    throw new Error('Called validation for hisha, but piece id was not hisha.')\n\n  if (p.row === -1 && p.column === -1) return getEmpties(pos.pos)\n\n  const diffList = [[-1, 0], [0, -1], [0, 1], [1, 0]]\n  const points: Point[] = []\n\n  for (let i = 0; i < diffList.length; i++) {\n    getWithDiff(\n      pos.pos,\n      p.row + diffList[i][0],\n      p.column + diffList[i][1],\n      p.piece,\n      points,\n      diffList[i][0],\n      diffList[i][1]\n    )\n  }\n\n  points.sort(comp)\n  return points\n}\n","import { Kaku0, Kaku1 } from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\nimport Position from '../../../model/shogi/Position'\nimport { comp } from '../utils/algorithm'\nimport getEmpties from '../utils/getEmpties'\nimport getWithDiff from '../utils/getWithDiff'\n\nexport default function(pos: Position, p: Point): Point[] {\n  if (!p.piece || (p.piece !== Kaku0 && p.piece !== Kaku1))\n    throw new Error('Called validation for kaku, but piece id was not kaku.')\n\n  if (p.row === -1 && p.column === -1) return getEmpties(pos.pos)\n\n  const diffList = [[-1, -1], [-1, 1], [1, -1], [1, 1]]\n  const points: Point[] = []\n\n  for (let i = 0; i < diffList.length; i++) {\n    getWithDiff(\n      pos.pos,\n      p.row + diffList[i][0],\n      p.column + diffList[i][1],\n      p.piece,\n      points,\n      diffList[i][0],\n      diffList[i][1]\n    )\n  }\n\n  points.sort(comp)\n  return points\n}\n","import {\n  Empty,\n  Fu0,\n  Fu1,\n  Gin0,\n  Gin1,\n  Gyoku0,\n  Gyoku1,\n  Hisha0,\n  Hisha1,\n  Kaku0,\n  Kaku1,\n  Kei0,\n  Kei1,\n  Kin0,\n  Kin1,\n  Kyou0,\n  Kyou1,\n  NariGin0,\n  NariGin1,\n  NariKei0,\n  NariKei1,\n  NariKyou0,\n  NariKyou1,\n  Ryu0,\n  Ryu1,\n  To0,\n  To1,\n  Uma0,\n  Uma1,\n} from '../../model/shogi/Piece'\nimport Point from '../../model/shogi/Point'\nimport Position from '../../model/shogi/Position'\nimport fu from './pieces/fu'\nimport gin from './pieces/gin'\nimport gyoku from './pieces/gyoku'\nimport hisha from './pieces/hisha'\nimport kaku from './pieces/kaku'\nimport kei from './pieces/kei'\nimport kin from './pieces/kin'\nimport kyou from './pieces/kyou'\nimport ryu from './pieces/ryu'\nimport uma from './pieces/uma'\n\n/**\n * 駒を動かせる場所を取得する\n * @param pos Position 駒の配置\n * @param point Point 動ける場所を取得したい駒の位置\n */\nexport default function(pos: Position, point: Point): Point[] {\n  const piece = point.piece\n\n  if (piece === Empty)\n    throw new Error('Cannot get targets to move for empty cell.')\n  if (piece === Fu0 || piece === Fu1) return fu(pos, point)\n  if (piece === Kyou0 || piece === Kyou1) return kyou(pos, point)\n  if (piece === Kei0 || piece === Kei1) return kei(pos, point)\n  if (piece === Gin0 || piece === Gin1) return gin(pos, point)\n  if (\n    piece === Kin0 ||\n    piece === Kin1 ||\n    piece === To0 ||\n    piece === To1 ||\n    piece === NariKyou0 ||\n    piece === NariKyou1 ||\n    piece === NariKei0 ||\n    piece === NariKei1 ||\n    piece === NariGin0 ||\n    piece === NariGin1\n  )\n    return kin(pos, point)\n  if (piece === Kaku0 || piece === Kaku1) return kaku(pos, point)\n  if (piece === Hisha0 || piece === Hisha1) return hisha(pos, point)\n  if (piece === Gyoku0 || piece === Gyoku1) return gyoku(pos, point)\n  if (piece === Uma0 || piece === Uma1) return uma(pos, point)\n  if (piece === Ryu0 || piece === Ryu1) return ryu(pos, point)\n\n  throw new Error('Could not get targets to move. Got invalid piece ID')\n}\n","import { Fu0, Fu1, Piece } from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\nimport Position from '../../../model/shogi/Position'\nimport getEmpties from '../utils/getEmpties'\n\nexport default function(pos: Position, p: Point): Point[] {\n  if (!p.piece || (p.piece !== Fu0 && p.piece !== Fu1))\n    throw new Error('Called validation for fu, but piece id was not fu.')\n\n  // 二歩チェックのため、すでに歩がある列を入れておく\n  const columnsOfContainingFu: number[] = []\n  for (let col = 0; col < 9; col++) {\n    for (let row = 0; row < 9; row++) {\n      if (pos.pos[row][col] === p.piece) {\n        columnsOfContainingFu.push(col)\n        break\n      }\n    }\n  }\n\n  if (p.row === -1 && p.column === -1) {\n    const invalidRow: number = p.piece > 0 ? 0 : 8\n    return getEmpties(pos.pos, [invalidRow], columnsOfContainingFu)\n  }\n\n  const nextRow: number = p.piece > 0 ? p.row - 1 : p.row + 1\n\n  // 盤外か味方の駒ならなし\n  if (nextRow < 0 || nextRow > 8 || pos.pos[nextRow][p.column] * p.piece > 0)\n    return []\n\n  // 空マスか、相手の駒ならOK\n  return [{ row: nextRow, column: p.column }]\n}\n","import { Kyou0, Kyou1 } from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\nimport Position from '../../../model/shogi/Position'\nimport getEmpties from '../utils/getEmpties'\nimport getWithDiff from '../utils/getWithDiff'\n\nexport default function(pos: Position, p: Point): Point[] {\n  if (!p.piece || (p.piece !== Kyou0 && p.piece !== Kyou1))\n    throw new Error('Called validation for kyou, but piece id was not kyou.')\n\n  if (p.row === -1 && p.column === -1) {\n    const invalidRow: number = p.piece > 0 ? 0 : 8\n    return getEmpties(pos.pos, [invalidRow])\n  }\n\n  const diff = p.piece > 0 ? -1 : 1\n  const points: Point[] = []\n  getWithDiff(pos.pos, p.row + diff, p.column, p.piece, points, diff, 0)\n  if (p.piece > 0) points.reverse()\n  return points\n}\n","import { Kei0, Kei1 } from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\nimport Position from '../../../model/shogi/Position'\nimport getEmpties from '../utils/getEmpties'\nimport getFromNexts from '../utils/getFromNexts'\n\nexport default function(pos: Position, p: Point): Point[] {\n  if (!p.piece || (p.piece !== Kei0 && p.piece !== Kei1))\n    throw new Error('Called validation for kei, but piece id was not kei.')\n\n  if (p.row === -1 && p.column === -1) {\n    const invalidRow1: number = p.piece > 0 ? 0 : 8\n    const invalidRow2: number = p.piece > 0 ? invalidRow1 + 1 : invalidRow1 - 1\n    return getEmpties(pos.pos, [invalidRow1, invalidRow2])\n  }\n\n  const nextRow: number = p.piece > 0 ? p.row - 2 : p.row + 2\n  if (nextRow < 0 || nextRow > 8) return []\n  const nexts: number[][] = [[nextRow, p.column - 1], [nextRow, p.column + 1]]\n  return getFromNexts(pos.pos, nexts, p.piece)\n}\n","import { Gin0, Gin1, Piece } from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\nimport Position from '../../../model/shogi/Position'\nimport getEmpties from '../utils/getEmpties'\nimport getFromNexts from '../utils/getFromNexts'\n\nexport default function(pos: Position, p: Point): Point[] {\n  if (!p.piece || (p.piece !== Gin0 && p.piece !== Gin1))\n    throw new Error('Called validation for gin, but piece id was not gin.')\n\n  if (p.row === -1 && p.column === -1) return getEmpties(pos.pos)\n\n  const nexts: number[][] =\n    p.piece > 0\n      ? [\n          [p.row - 1, p.column - 1],\n          [p.row - 1, p.column],\n          [p.row - 1, p.column + 1],\n          [p.row + 1, p.column - 1],\n          [p.row + 1, p.column + 1],\n        ]\n      : [\n          [p.row - 1, p.column - 1],\n          [p.row - 1, p.column + 1],\n          [p.row + 1, p.column - 1],\n          [p.row + 1, p.column],\n          [p.row + 1, p.column + 1],\n        ]\n\n  return getFromNexts(pos.pos, nexts, p.piece)\n}\n","import {\n  Kin0,\n  Kin1,\n  NariGin0,\n  NariGin1,\n  NariKei0,\n  NariKei1,\n  NariKyou0,\n  NariKyou1,\n  To0,\n  To1,\n} from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\nimport Position from '../../../model/shogi/Position'\nimport getEmpties from '../utils/getEmpties'\nimport getFromNexts from '../utils/getFromNexts'\n\nexport default function(pos: Position, p: Point): Point[] {\n  if (\n    !p.piece ||\n    (p.piece !== Kin0 &&\n      p.piece !== Kin1 &&\n      p.piece !== To0 &&\n      p.piece !== To1 &&\n      p.piece !== NariKyou0 &&\n      p.piece !== NariKyou1 &&\n      p.piece !== NariKei0 &&\n      p.piece !== NariKei1 &&\n      p.piece !== NariGin0 &&\n      p.piece !== NariGin1)\n  )\n    throw new Error(\n      'Called validation for kin(or promoted piece moves as same as kin), but piece id was not as expected.'\n    )\n\n  if (p.row === -1 && p.column === -1) return getEmpties(pos.pos)\n\n  const nexts: number[][] =\n    p.piece > 0\n      ? [\n          [p.row - 1, p.column - 1],\n          [p.row - 1, p.column],\n          [p.row - 1, p.column + 1],\n          [p.row, p.column - 1],\n          [p.row, p.column + 1],\n          [p.row + 1, p.column],\n        ]\n      : [\n          [p.row - 1, p.column],\n          [p.row, p.column - 1],\n          [p.row, p.column + 1],\n          [p.row + 1, p.column - 1],\n          [p.row + 1, p.column],\n          [p.row + 1, p.column + 1],\n        ]\n\n  return getFromNexts(pos.pos, nexts, p.piece)\n}\n","import { Gyoku0, Gyoku1 } from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\nimport Position from '../../../model/shogi/Position'\nimport getFromNexts from '../utils/getFromNexts'\n\nexport default function(pos: Position, p: Point): Point[] {\n  if (!p.piece || (p.piece !== Gyoku0 && p.piece !== Gyoku1))\n    throw new Error('Called validation for gyoku, but piece id was not gyoku.')\n\n  if (p.row === -1 && p.column === -1)\n    throw new Error('Gyoku must not be captured')\n\n  const nexts: number[][] = [\n    [p.row - 1, p.column - 1],\n    [p.row - 1, p.column],\n    [p.row - 1, p.column + 1],\n    [p.row, p.column - 1],\n    [p.row, p.column + 1],\n    [p.row + 1, p.column - 1],\n    [p.row + 1, p.column],\n    [p.row + 1, p.column + 1],\n  ]\n\n  return getFromNexts(pos.pos, nexts, p.piece)\n}\n","import { Uma0, Uma1 } from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\nimport Position from '../../../model/shogi/Position'\nimport { demote } from '../../game-handler/piece'\nimport { comp } from '../utils/algorithm'\nimport getFromNexts from '../utils/getFromNexts'\nimport kaku from './kaku'\n\nexport default function(pos: Position, p: Point): Point[] {\n  if (!p.piece || (p.piece !== Uma0 && p.piece !== Uma1))\n    throw new Error('Called validation for uma, but piece id was not uma.')\n\n  if (p.row === -1 || p.column === -1)\n    throw new Error('Uma must not be captured')\n\n  const nexts = [\n    [p.row - 1, p.column],\n    [p.row, p.column - 1],\n    [p.row, p.column + 1],\n    [p.row + 1, p.column],\n  ]\n\n  const kakuPoint = { row: p.row, column: p.column, piece: demote(p.piece) }\n  const kakuTargets = kaku(pos, kakuPoint)\n  const targets = getFromNexts(pos.pos, nexts, p.piece).concat(kakuTargets)\n  targets.sort(comp)\n  return targets\n}\n","import { Ryu0, Ryu1 } from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\nimport Position from '../../../model/shogi/Position'\nimport { demote } from '../../game-handler/piece'\nimport { comp } from '../utils/algorithm'\nimport getFromNexts from '../utils/getFromNexts'\nimport hisha from './hisha'\n\nexport default function(pos: Position, p: Point): Point[] {\n  if (!p.piece || (p.piece !== Ryu0 && p.piece !== Ryu1))\n    throw new Error('Called validation for ryu, but piece id was not ryu.')\n\n  if (p.row === -1 || p.column === -1)\n    throw new Error('Ryu must not be captured')\n\n  const nexts = [\n    [p.row - 1, p.column - 1],\n    [p.row - 1, p.column + 1],\n    [p.row + 1, p.column - 1],\n    [p.row + 1, p.column + 1],\n  ]\n\n  const hishaPoint = { row: p.row, column: p.column, piece: demote(p.piece) }\n  const hishaTargets = hisha(pos, hishaPoint)\n  const targets = getFromNexts(pos.pos, nexts, p.piece).concat(hishaTargets)\n  targets.sort(comp)\n  return targets\n}\n","import { Gyoku0, Piece } from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\nimport { Turn } from '../../../model/shogi/Turn'\n\n/**\n * 玉の位置を探す\n * @param pos number[][] 盤上の配置\n * @param turn Turn どっちの玉を探すか。先手玉を探したいときは Sente を渡す\n * @returns 見つかった場合 Point\n *          見つからなかった場合 undefined\n */\nexport default function(pos: number[][], turn: Turn): Point | undefined {\n  for (let r = 0; r < pos.length; r++) {\n    for (let c = 0; c < pos.length; c++) {\n      const piece: Piece = pos[r][c]\n      const isGyoku: boolean = Math.abs(piece) === Gyoku0\n      const isOwnersTurn: boolean = piece * turn > 0\n      if (isGyoku && isOwnersTurn) return { row: r, column: c, piece }\n    }\n  }\n}\n","import { Gyoku0, Piece } from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\nimport Position from '../../../model/shogi/Position'\nimport { Turn } from '../../../model/shogi/Turn'\nimport { moveBoardOnly } from '../../game-handler/position'\nimport getTargets from '../getTargets'\nimport { find } from './algorithm'\n\n/**\n * points が attacker の駒の効きに入っているか\n * 王手放置・打ち歩詰めチェックに使用する\n * 入っている: true\n * 入っていない: false\n *\n * 例. 初期局面で先手の59玉に、後手の駒の効きがあるかを調べるとき\n * pos は初期局面\n * point は、{ row: 8, column: 4 }\n * attacker は Gote(-1)\n * を渡し、false が返る\n *\n * @param pos Position 配置\n * @param point Point 調べたい位置\n * @param attacker Turn 攻め手番\n * @param ignoreCheckLeaving boolean | undefined 王手放置チェックを無視するか\n *                           無視する(チェックしない): true\n *                           無視しない(チェックする): false | undefined\n *                           基本的に外から呼ぶ時は undefined で\n */\nexport default function isPointed(\n  pos: Position,\n  point: Point,\n  attacker: Turn,\n  ignoreCheckLeaving?: boolean\n): boolean {\n  for (let row = 0; row < pos.pos.length; row++) {\n    for (let column = 0; column < pos.pos.length; column++) {\n      const piece: Piece = pos.pos[row][column]\n      // 受け側の駒か、空マスならスキップ\n      if (piece * attacker <= 0) continue\n\n      // 攻め側の駒の targets に point が含まれていなかったらスキップ\n      const targets: Point[] = getTargets(pos, { row, column, piece })\n      const foundIndex: number = find(targets, point)\n      if (foundIndex === -1) continue\n\n      // 王手放置チェックをしないとき、\n      // 攻め側の駒が玉じゃないとき、\n      // 受け側の駒が玉の時は\n      // 次に動けるので true\n      if (\n        ignoreCheckLeaving ||\n        Math.abs(piece) !== Gyoku0 ||\n        (point.piece && Math.abs(point.piece) === Gyoku0)\n      )\n        return true\n\n      // 攻め側の駒が玉なので動かした結果、攻め側の玉が王手放置にならないか調べる\n      const moved = moveBoardOnly({\n        pos,\n        source: { row, column },\n        dest: { row: point.row, column: point.column },\n        piece,\n      })\n      if (isPointed(moved, point, <Turn>-attacker, true)) continue\n      return true\n    }\n  }\n\n  return false\n}\n","import Position from '../shogi/Position'\nimport { hirate } from '../shogi/PositionInit'\nimport History from './History'\nimport Meta from './Meta'\n\nexport default interface Kif {\n  // 対局者などの対局情報\n  meta: Meta\n\n  // 棋譜\n  history: History\n}\n\nexport function newKif(): Kif {\n  const initPos: Position = hirate()\n  return {\n    meta: {\n      version: '1',\n      player: { sente: '', gote: '' },\n      handicap: '平手',\n      initPos,\n    },\n    history: {\n      // TODO: 持ち方考える\n      moves: [\n        {\n          index: 0,\n          str: '開始局面',\n          pos: initPos,\n          source: { row: 0, column: 0 },\n          dest: { row: 0, column: 0 },\n          piece: 0,\n        },\n      ],\n      index: 0,\n    },\n  }\n}\n","import {\n  Empty,\n  Fu0,\n  Fu1,\n  Gin0,\n  Gin1,\n  Gyoku0,\n  Gyoku1,\n  Hisha0,\n  Hisha1,\n  Kaku0,\n  Kaku1,\n  Kei0,\n  Kei1,\n  Kin0,\n  Kin1,\n  Kyou0,\n  Kyou1,\n} from './Piece'\nimport Position from './Position'\nimport { Sente } from './Turn'\n\n/**\n * 初期局を返す\n * column は reverse() されているので、\n * 飛車と角の位置が逆に見える\n * 棋譜との互換性を保つため。\n * ３三角 → pos[2][2]、\n * ３四飛 → pos[3][2]、\n * ７六歩 → pos[5][6] という感じで変換が楽\n */\nexport function hirate(): Position {\n  return {\n    pos: [\n      [Kyou1, Kei1, Gin1, Kin1, Gyoku1, Kin1, Gin1, Kei1, Kyou1],\n      [Empty, Kaku1, Empty, Empty, Empty, Empty, Empty, Hisha1, Empty],\n      [Fu1, Fu1, Fu1, Fu1, Fu1, Fu1, Fu1, Fu1, Fu1],\n      [Empty, Empty, Empty, Empty, Empty, Empty, Empty, Empty, Empty],\n      [Empty, Empty, Empty, Empty, Empty, Empty, Empty, Empty, Empty],\n      [Empty, Empty, Empty, Empty, Empty, Empty, Empty, Empty, Empty],\n      [Fu0, Fu0, Fu0, Fu0, Fu0, Fu0, Fu0, Fu0, Fu0],\n      [Empty, Hisha0, Empty, Empty, Empty, Empty, Empty, Kaku0, Empty],\n      [Kyou0, Kei0, Gin0, Kin0, Gyoku0, Kin0, Gin0, Kei0, Kyou0],\n    ],\n    cap0: [0, 0, 0, 0, 0, 0, 0],\n    cap1: [0, 0, 0, 0, 0, 0, 0],\n    turn: Sente,\n    moveCount: 0,\n  }\n}\n","import { action, computed, observable } from 'mobx'\nimport { canPromote, mustPromote, promote } from '../lib/game-handler/piece'\nimport { move } from '../lib/game-handler/position'\nimport { changeIndex } from '../lib/kif-handler/changeIndex'\nimport { genKifString } from '../lib/kif-handler/genKifString'\nimport getCurrent from '../lib/kif-handler/getCurrent'\nimport pushMove from '../lib/kif-handler/pushMove'\nimport getTargets from '../lib/validatior/getTargets'\nimport { find } from '../lib/validatior/utils/algorithm'\nimport filterTargets from '../lib/validatior/utils/filterTargets'\nimport { ClickProps } from '../model/events/ClickProps'\nimport MoveProps from '../model/events/MoveProps'\nimport Kif, { newKif } from '../model/kif/Kif'\nimport Move from '../model/kif/Move'\nimport Confirm from '../model/shogi/Confirm'\nimport GameState from '../model/shogi/GameState'\nimport { Piece } from '../model/shogi/Piece'\nimport Point from '../model/shogi/Point'\nimport Position from '../model/shogi/Position'\nimport { Turn } from '../model/shogi/Turn'\n\nexport interface Store extends GameState {\n  // 棋譜の現在表示局面を返す\n  currentMove: Move\n\n  // 盤面反転\n  reverse(): void\n\n  // 駒をクリックして動かしたりする\n  clickPiece(p: ClickProps): void\n\n  // 棋譜をクリックして表示局面を変える\n  clickKif(moveCount: number, branchIndex?: number): void\n}\n\nexport default class GameStateStore implements Store {\n  @observable indexes: number[] = [-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n  @observable selected: Point | undefined = undefined\n  @observable confirm: Confirm | undefined = undefined\n  @observable moveTargets: Point[] = []\n  @observable kif: Kif = newKif()\n\n  @computed get currentMove(): Move {\n    return getCurrent(this.kif)\n  }\n\n  @action reverse(): void {\n    this.indexes = this.indexes.slice().reverse()\n  }\n\n  @action clickPiece(p: ClickProps): void {\n    const sel = this.selected\n    const turn = this.currentMove.pos.turn\n\n    // Confirm 画面なのに、成・不成以外がクリックされたらなにもしない\n    if (this.confirm !== undefined && isPiece(p.clicked)) return\n\n    // 選択された駒をクリックしたら選択解除\n    if (sel !== undefined && isPiece(p.clicked) && selectedAgain(sel, p)) {\n      this.selected = undefined\n      return\n    }\n\n    // 手番側の駒なら選択する\n    if (isPiece(p.clicked) && ownerIsTurn(p.clicked, turn)) {\n      const point: Point = {\n        row: p.row,\n        column: p.column,\n        piece: p.clicked,\n        i: p.i,\n      }\n      this.selected = point\n      const targets = getTargets(this.currentMove.pos, point)\n      const filtered = filterTargets(this.currentMove.pos, point, targets)\n      this.moveTargets = filtered\n      return\n    }\n\n    // 選択された駒がない場合は、手番ではない方の駒or空白マスがクリックされた\n    // ということなので何もしない\n    // `|| sel.piece === undefined` の部分は\n    // この後のコードで TypeScript のチェックを楽にするため\n    if (sel === undefined || sel.piece === undefined) return\n\n    // 動けない場所がクリックされたらなにもしない\n    const foundIndex: number = find(this.moveTargets, p)\n    if (foundIndex === -1) return\n\n    const source: Point = { row: sel.row, column: sel.column }\n    const dest: Point = { row: p.row, column: p.column }\n\n    const moveAndUpdateState = (piece: Piece, promote?: boolean) => {\n      const moveProps: MoveProps = {\n        pos: this.currentMove.pos,\n        source,\n        dest,\n        piece,\n        promote,\n      }\n      const pos: Position = move(moveProps)\n      const kifStr: string = genKifString(moveProps)\n      const moveForKif: Move = {\n        index: this.currentMove.index + 1,\n        str: kifStr,\n        pos,\n        source,\n        dest,\n        piece,\n        promote,\n      }\n      this.selected = undefined\n      this.confirm = undefined\n      this.moveTargets = []\n      this.kif = pushMove(this.kif, moveForKif)\n    }\n\n    // Confirm オブジェクトがクリックされたら動かす(成 or 不成の処理)\n    if (!isPiece(p.clicked)) {\n      const piece: Piece = p.promote ? p.clicked.promoted : p.clicked.preserved\n      moveAndUpdateState(piece, p.promote === true)\n      return\n    }\n\n    // 成を選択できるか\n    const cp: boolean = canPromote({\n      sourceRow: sel.row,\n      destRow: p.row,\n      piece: sel.piece,\n    })\n\n    // 強制的に成る必要があるか\n    const mp: boolean = mustPromote(sel.piece, p.row)\n\n    // 成・不成の選択ができるように、Confirm オブジェクトをセット\n    if (cp && !mp) {\n      this.confirm = {\n        promoted: promote(sel.piece),\n        preserved: sel.piece,\n        row: p.row,\n        column: p.column,\n      }\n      return\n    }\n\n    const piece: Piece = mp ? promote(sel.piece) : sel.piece\n    moveAndUpdateState(piece, mp || undefined)\n  }\n\n  @action clickKif(moveCount: number, branchIndex?: number): void {\n    if (this.confirm) return\n    this.kif = changeIndex(this.kif, moveCount, branchIndex)\n    this.selected = undefined\n  }\n}\n\nfunction isPiece(pc: Piece | Confirm): pc is Piece {\n  return typeof pc === 'number'\n}\n\nfunction ownerIsTurn(p: Piece, t: Turn): boolean {\n  return (p < 0 && t === -1) || (p > 0 && t === 1)\n}\n\nfunction selectedAgain(sel: Point, cp: ClickProps): boolean {\n  return (\n    sel.row === cp.row &&\n    sel.column === cp.column &&\n    sel.piece === cp.clicked &&\n    sel.i === cp.i\n  )\n}\n","import { Fu0, Gyoku0, Piece } from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\nimport Position from '../../../model/shogi/Position'\nimport { Gote, Sente, Turn } from '../../../model/shogi/Turn'\nimport { moveBoardOnly } from '../../game-handler/position'\nimport getTargets from '../getTargets'\nimport getGyokuPoint from './getGyokuPoint'\nimport isPointed from './isPointed'\n\n/**\n * 王手放置か打ち歩詰めだったら弾く\n * @param pos Position 動かす前の配置\n * @param point Point 動かしたい駒の場所情報\n * @param targets point を getTargets で取得したリスト\n * @returns targets にフィルターをかけた結果\n */\nexport default function filter(\n  pos: Position,\n  point: Point,\n  targets: Point[]\n): Point[] {\n  if (!point.piece) throw new Error('piece id is needed')\n\n  const turn: Turn = point.piece > 0 ? Sente : Gote\n\n  // 手番側の玉がある場所。駒を動かしたとき王手放置にならないようにメモしておく\n  let gp = getGyokuPoint(pos.pos, turn)\n\n  // 王手放置・打ち歩詰めチェックを通った場所を入れていく\n  const filtered: Point[] = []\n\n  for (let i = 0; i < targets.length; i++) {\n    // 盤上だけ動かす\n    const moved: Position = moveBoardOnly({\n      pos: pos,\n      source: { row: point.row, column: point.column },\n      dest: { row: targets[i].row, column: targets[i].column },\n      piece: <Piece>point.piece,\n    })\n\n    // 玉自身の動きチェックをしていたら、玉が動くので、再セット\n    if (point.piece && Math.abs(point.piece) === Gyoku0)\n      gp = getGyokuPoint(moved.pos, turn)\n\n    // 王手放置ならpushしない\n    const isOute = gp !== undefined && isPointed(moved, gp, <Turn>-turn)\n    if (isOute) continue\n\n    // 打ち歩詰めチェック\n    const isFu: boolean = Math.abs(point.piece) === Fu0\n    const isFromCapture: boolean = point.row === -1\n    const enemyGyoku = getGyokuPoint(moved.pos, <Turn>-turn)\n    // 打った歩による王手である\n    if (\n      isFu &&\n      isFromCapture &&\n      enemyGyoku !== undefined &&\n      isPointed(moved, enemyGyoku, turn)\n    ) {\n      // 打った歩が次に取られるか\n      const fuIsPointed = isPointed(moved, targets[i], <Turn>-turn)\n\n      // 相手玉が逃げられる場所があるか\n      const enemyGyokuTargets = getTargets(moved, enemyGyoku)\n      const filteredEnemyGyokuTargets = filter(\n        moved,\n        enemyGyoku,\n        enemyGyokuTargets\n      )\n\n      // 打った歩が取られない && 逃げ場所がないとき、打ち歩詰めである\n      if (!fuIsPointed && filteredEnemyGyokuTargets.length === 0) continue\n    }\n\n    // OK\n    filtered.push(targets[i])\n  }\n\n  return filtered\n}\n","import History, { isBranch, KifComponent } from '../../model/kif/History'\nimport Kif from '../../model/kif/Kif'\nimport Move from '../../model/kif/Move'\n\n/**\n * 棋譜の現在表示局面のMoveを返す\n * 開始局面は0なので、3手目を表示中なら3と3手目のMoveが返る\n * @param k Kif\n */\nexport default function(k: Kif): Move {\n  let history: History = k.history\n  let moveOrBranch: KifComponent = history.moves[history.index]\n\n  while (isBranch(moveOrBranch)) {\n    history = moveOrBranch.branches[moveOrBranch.index]\n    moveOrBranch = history.moves[history.index]\n  }\n\n  return moveOrBranch\n}\n","import { inject, observer } from 'mobx-react'\nimport React, { Component } from 'react'\nimport { columnString, rowString } from '../../lib/strings'\nimport { ClickProps } from '../../model/events/ClickProps'\nimport Confirm from '../../model/shogi/Confirm'\nimport { Empty, Piece } from '../../model/shogi/Piece'\nimport Point from '../../model/shogi/Point'\nimport { Gote, Sente } from '../../model/shogi/Turn'\nimport { Store } from '../../store/GameStateStore'\nimport './Cell.scss'\n\nexport interface Props {\n  store?: Store\n  row: number\n  column: number\n}\n\n@inject('store')\n@observer\nexport default class Cell extends Component<Props> {\n  getPiece = () =>\n    inRange(this.props.row) && inRange(this.props.column)\n      ? this.props.store!.currentMove.pos.pos[this.props.row][this.props.column]\n      : Empty\n\n  render(): JSX.Element | undefined {\n    const piece: Piece = this.getPiece()\n    const className: string = getClassName({\n      r: this.props.row,\n      c: this.props.column,\n      rv: this.props.store!.indexes[0] === 9,\n      p: piece,\n      sel: this.props.store!.selected,\n      confirm: this.props.store!.confirm,\n      isTurn:\n        (piece > 0 && this.props.store!.currentMove.pos.turn === Sente) ||\n        (piece < 0 && this.props.store!.currentMove.pos.turn === Gote),\n    })\n\n    return (\n      <div className={className} onClick={() => this.click()}>\n        {this.renderConfirm(this.props.store!.confirm)}\n        {this.renderEdgeTextRow()}\n        {this.renderEdgeTextColumn()}\n      </div>\n    )\n  }\n\n  renderConfirm(cf?: Confirm): JSX.Element | undefined {\n    if (!cf || cf.row !== this.props.row || cf.column !== this.props.column)\n      return undefined\n\n    const isReversed: boolean = this.props.store!.indexes[0] === 9\n    const isGote =\n      (isReversed && cf.preserved > 0) || (!isReversed && cf.preserved < 0)\n\n    const className = 'Piece-Confirm Piece-Confirm' + Number(isGote)\n\n    // TODO: この方法だと画面幅によって1pxずれる\n    return (\n      <div className={className}>\n        <div\n          className=\"Piece-Confirm-Promote\"\n          onClick={() => this.click(cf, true)}\n        />\n        <div\n          className=\"Piece-Confirm-Preserve\"\n          onClick={() => this.click(cf)}\n        />\n      </div>\n    )\n  }\n\n  renderEdgeTextRow(): JSX.Element | undefined {\n    const needText = inRange(this.props.column) && this.props.row === -1\n    if (!needText) {\n      return undefined\n    }\n    return <span>{columnString(this.props.column)}</span>\n  }\n\n  renderEdgeTextColumn(): JSX.Element | undefined {\n    const needText = inRange(this.props.row) && this.props.column === -1\n    if (!needText) {\n      return undefined\n    }\n    return <span>{rowString(this.props.row)}</span>\n  }\n\n  click(cf?: Confirm, promote?: true) {\n    if (this.props.store!.confirm && !cf) return\n    const p: ClickProps = {\n      clicked: cf || this.getPiece(),\n      row: this.props.row,\n      column: this.props.column,\n      promote: promote,\n    }\n    this.props.store!.clickPiece(p)\n  }\n}\n\ninterface GetClassNameProps {\n  r: number // row\n  c: number // column\n  rv: boolean // isReversed\n  p: Piece\n  sel?: Point // selected\n  confirm?: Confirm\n  isTurn: boolean\n}\n\n// つらい感じ\nfunction getClassName(p: GetClassNameProps): string {\n  if (\n    p.confirm &&\n    p.sel &&\n    ((p.r === p.sel.row && p.c === p.sel.column) ||\n      (p.r === p.confirm.row && p.c === p.confirm.column))\n  ) {\n    // TODO: ヒドス。あとで必ず修正すること!!\n    p.p = Empty\n  }\n\n  const rowInRange: boolean = inRange(p.r)\n  const colInRange: boolean = inRange(p.c)\n  const isLeft: boolean =\n    rowInRange && ((!p.rv && p.c === 8) || (p.rv && p.c === 0))\n  const isTop: boolean =\n    colInRange && ((!p.rv && p.r === 0) || (p.rv && p.r === 8))\n  const isStar: boolean =\n    (!p.rv &&\n      ((p.r === 2 && p.c === 6) ||\n        (p.r === 2 && p.c === 3) ||\n        (p.r === 5 && p.c === 6) ||\n        (p.r === 5 && p.c === 3))) ||\n    (p.rv &&\n      ((p.r === 6 && p.c === 2) ||\n        (p.r === 6 && p.c === 5) ||\n        (p.r === 3 && p.c === 2) ||\n        (p.r === 3 && p.c === 5)))\n  const isSelected: boolean =\n    rowInRange &&\n    colInRange &&\n    p.sel !== undefined &&\n    p.sel.row === p.r &&\n    p.sel.column === p.c\n\n  const piece: string = rowInRange && colInRange ? 'Piece Piece-Bordered ' : ''\n  const rvp: number | undefined = p.p && p.rv ? p.p * -1 : p.p\n  const pieceImg: string = rvp ? `Piece-${rvp} ` : ''\n  const pieceTurn: string = p.isTurn ? 'Piece-Turn ' : ''\n  const pieceSelected: string = isSelected ? 'Piece-Selected ' : ''\n  const left: string = isLeft ? 'Piece-Left ' : ''\n  const top: string = isTop ? 'Piece-Top ' : ''\n  const edgeText: string =\n    (p.c === -1 && rowInRange) || (p.r === -1 && colInRange)\n      ? 'Cell-EdgeText '\n      : ''\n  const star: string = isStar ? 'Piece-Star ' : ''\n\n  return `Cell ${piece}${pieceImg}${pieceTurn}${pieceSelected}${left}${top}${edgeText}${star}`.trim()\n}\n\nfunction inRange(n: number): boolean {\n  return 0 <= n && n <= 8\n}\n","import { inject, observer } from 'mobx-react'\nimport React, { Component } from 'react'\nimport { Store } from '../../store/GameStateStore'\nimport './Board.scss'\nimport Cell from './Cell'\n\nexport interface Props {\n  store?: Store\n}\n\n@inject('store')\n@observer\nexport default class Board extends Component<Props> {\n  render() {\n    const idx = this.props.store!.indexes\n    const rows = idx.map(r =>\n      idx\n        .slice()\n        .reverse()\n        .map(c => <Cell key={r * 10 + c} row={r} column={c} />)\n    )\n    return (\n      <div className=\"BoardContainer\">\n        <div className=\"Board\">{rows}</div>\n      </div>\n    )\n  }\n}\n","import History, { isBranch, KifComponent } from '../../model/kif/History'\nimport Kif from '../../model/kif/Kif'\n\nexport function getAsString(k: Kif): string {\n  if (k.history.moves.length < 1) return ''\n  return getRec({\n    moves: k.history.moves.slice(1),\n    index: k.history.index,\n  })\n}\n\nfunction getRec(h: History): string {\n  return h.moves\n    .map((kc: KifComponent) =>\n      isBranch(kc) ? getRec(kc.branches[kc.index]) : `${kc.index} ${kc.str}`\n    )\n    .join('\\n')\n}\n","import { inject, observer } from 'mobx-react'\nimport React, { Component } from 'react'\nimport { getAsString } from '../../lib/kif-handler/getAsString'\nimport { Store } from '../../store/GameStateStore'\nimport './Buttons.scss'\n\nexport interface Props {\n  store?: Store\n}\n\n@inject('store')\n@observer\nexport default class Buttons extends Component<Props> {\n  render(): JSX.Element {\n    const i: number = this.props.store!.currentMove.index\n    return (\n      <div className=\"ButtonsContainer\">\n        <button\n          className=\"PrevOne\"\n          onClick={() => this.props.store!.clickKif(i - 1 < 0 ? 0 : i - 1)}\n        >\n          ＜\n        </button>\n        <button\n          className=\"NextOne\"\n          onClick={() => this.props.store!.clickKif(i + 1)}\n        >\n          ＞\n        </button>\n        <button\n          className=\"PrevFive\"\n          onClick={() => this.props.store!.clickKif(i - 5 < 0 ? 0 : i - 5)}\n        >\n          ＜ 5\n        </button>\n        <button\n          className=\"NextFive\"\n          onClick={() => this.props.store!.clickKif(i + 5)}\n        >\n          5 ＞\n        </button>\n        <button className=\"Reverse\" onClick={() => this.props.store!.reverse()}>\n          盤面反転\n        </button>\n        <button\n          className=\"Copy\"\n          data-clipboard-text={getAsString(this.props.store!.kif)}\n        >\n          棋譜コピー\n        </button>\n      </div>\n    )\n  }\n}\n","import { inject, observer } from 'mobx-react'\nimport React, { Component } from 'react'\nimport {\n  Fu0,\n  Gin0,\n  Hisha0,\n  Kaku0,\n  Kei0,\n  Kin0,\n  Kyou0,\n  Piece,\n} from '../../model/shogi/Piece'\nimport Point from '../../model/shogi/Point'\nimport { Store } from '../../store/GameStateStore'\nimport './Captures.scss'\n\nexport interface Props {\n  store?: Store\n  isLeftSide: boolean\n  captures: number[]\n  isTurn: boolean\n}\n\n@inject('store')\n@observer\nexport default class Captures extends Component<Props> {\n  render(): JSX.Element {\n    return (\n      <div className={'Captures Captures' + Number(this.props.isLeftSide)}>\n        {this.cells('Hisha', Hisha0, this.props.captures[6])}\n        {this.cells('Kaku', Kaku0, this.props.captures[5])}\n        {this.cells('Kin', Kin0, this.props.captures[4])}\n        {this.cells('Gin', Gin0, this.props.captures[3])}\n        {this.cells('Kei', Kei0, this.props.captures[2])}\n        {this.cells('Kyou', Kyou0, this.props.captures[1])}\n        {this.cells('Fu', Fu0, this.props.captures[0])}\n      </div>\n    )\n  }\n\n  cells(name: string, pieceId: Piece, count: number): JSX.Element {\n    const sel = this.props.store!.selected\n    const children = Array.from(Array(count).keys()).map(i => {\n      const selectedClass = this.props.isTurn\n        ? getSelectedClass(sel, pieceId, i)\n        : ''\n      const isTurnClass = this.props.isTurn ? 'Piece-Turn' : ''\n      const piece = this.props.isLeftSide ? -pieceId : pieceId\n      const sideNumber = Number(this.props.isLeftSide)\n      const captureClass = `Capture-${pieceId}${sideNumber}${count}${i + 1}`\n      const className = `Piece Piece-${piece} ${isTurnClass} ${selectedClass} ${captureClass}`\n      return (\n        <div\n          key={`Cap-${this.props.isLeftSide}-${name}-${i}`}\n          className={className}\n          onClick={() => {\n            if (this.props.isTurn)\n              this.props.store!.clickPiece({\n                clicked: this.props.store!.currentMove.pos.turn * pieceId,\n                row: -1,\n                column: -1,\n                i: i,\n              })\n          }}\n        />\n      )\n    })\n    return <div className={`Captures-Inner Captures-${name}`}>{children}</div>\n  }\n}\n\nfunction getSelectedClass(\n  selected: Point | undefined,\n  pieceId: Piece,\n  index: number\n): string {\n  return selected &&\n  selected.piece &&\n  selected.row === -1 &&\n  selected.column === -1 &&\n  Math.abs(selected.piece) === pieceId /* TODO: すげー嫌 */ &&\n    selected.i === index\n    ? 'Piece-Selected'\n    : ''\n}\n","import { inject, observer } from 'mobx-react'\nimport React, { Component } from 'react'\nimport { Gote, Sente } from '../../model/shogi/Turn'\nimport { Store } from '../../store/GameStateStore'\nimport Buttons from './Buttons'\nimport Captures from './Captures'\nimport './LeftSide.scss'\n\nexport interface Props {\n  store?: Store\n}\n\n@inject('store')\n@observer\nexport default class LeftSide extends Component<Props> {\n  render() {\n    const caps: number[] =\n      this.props.store!.indexes[0] === -1\n        ? this.props.store!.currentMove.pos.cap1\n        : this.props.store!.currentMove.pos.cap0\n\n    const isTurn: boolean =\n      this.props.store!.indexes[0] === -1\n        ? this.props.store!.currentMove.pos.turn === Gote\n        : this.props.store!.currentMove.pos.turn === Sente\n\n    return (\n      <div className=\"LeftSide\">\n        <Captures isLeftSide={true} captures={caps} isTurn={isTurn} />\n        <div className=\"LeftInfo\">\n          <div />\n          <Buttons />\n        </div>\n      </div>\n    )\n  }\n}\n","import { inject, observer } from 'mobx-react'\nimport React, { Component } from 'react'\nimport { intoView } from '../../lib/dom-handler/intoView'\nimport Branch from '../../model/kif/Branch'\nimport History, { isBranch, KifComponent } from '../../model/kif/History'\nimport Move from '../../model/kif/Move'\nimport { Store } from '../../store/GameStateStore'\nimport './Kif.scss'\n\ninterface Props {\n  store?: Store\n}\n\nconst CURRENT_KIF_ID = 'Move-Current'\n\n@inject('store')\n@observer\nexport default class Kif extends Component<Props> {\n  render() {\n    const moves = this.props.store!.kif.history.moves\n    return (\n      <div className=\"KifContainer\">\n        <div className=\"Kif-Inner\">{this.renderKif(moves, 0)}</div>\n      </div>\n    )\n  }\n\n  renderKif(moves: KifComponent[], n: number): JSX.Element[] {\n    const nested = moves.map((kc: KifComponent, i: number) => {\n      if (isBranch(kc)) return this.renderBranch(kc, n + i)\n      return this.renderMove(kc, n + i)\n    })\n\n    // TODO: flatMap 使いてぇ\n    return Array.prototype.concat.apply([], nested)\n  }\n\n  renderBranch(b: Branch, n: number): JSX.Element[] {\n    const main: History = b.branches[b.index]\n    const [head, ...rest] = main.moves // head は必ず Move\n\n    const otherHeadsDom: JSX.Element[] = []\n    for (let i = 0; i < b.branches.length; i++) {\n      if (i === b.index) continue\n      const m: Move = b.branches[i].moves[0] as Move // head は必ず Move\n      otherHeadsDom.push(\n        <div\n          key={`${n}${i}`}\n          className=\"Branch\"\n          onClick={() => this.props.store!.clickKif(n, i)}\n        >\n          <span>{`-- ${m.str}`}</span>\n        </div>\n      )\n    }\n\n    const restDom = rest.length !== 0 ? this.renderKif(rest, n + 1) : []\n\n    return [this.renderMove(head as Move, n)]\n      .concat(otherHeadsDom)\n      .concat(restDom)\n  }\n\n  renderMove(m: Move, n: number): JSX.Element {\n    const curNum: number = this.props.store!.currentMove.index\n\n    return (\n      <div\n        key={n}\n        className=\"Move\"\n        id={curNum === n ? CURRENT_KIF_ID : undefined}\n        onClick={() => this.props.store!.clickKif(n)}\n      >\n        <span className={'Number'}>{n + '.'}</span>\n        <span>{m.str}</span>\n      </div>\n    )\n  }\n\n  // 自動スクロール\n  componentDidUpdate() {\n    intoView(CURRENT_KIF_ID)\n  }\n}\n","// ただ scrollIntoView を呼ぶだけ\nexport function intoView(id: string): void {\n  const current: HTMLElement | null = document.getElementById(id)\n  if (current) current.scrollIntoView()\n}\n","import { inject, observer } from 'mobx-react'\nimport React, { Component } from 'react'\nimport { Gote, Sente } from '../../model/shogi/Turn'\nimport { Store } from '../../store/GameStateStore'\nimport Captures from './Captures'\nimport Kif from './Kif'\nimport './RightSide.scss'\n\nexport interface Props {\n  store?: Store\n}\n\n@inject('store')\n@observer\nexport default class RightSide extends Component<Props> {\n  render() {\n    const caps: number[] =\n      this.props.store!.indexes[0] === 9\n        ? this.props.store!.currentMove.pos.cap1\n        : this.props.store!.currentMove.pos.cap0\n\n    const isTurn: boolean =\n      this.props.store!.indexes[0] === 9\n        ? this.props.store!.currentMove.pos.turn === Gote\n        : this.props.store!.currentMove.pos.turn === Sente\n\n    return (\n      <div className=\"RightSide\">\n        <div className=\"RightInfo\">\n          <Kif />\n        </div>\n        <Captures isLeftSide={false} captures={caps} isTurn={isTurn} />\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport Board from './Board'\nimport './BoardArea.scss'\nimport LeftSide from './LeftSide'\nimport RightSide from './RightSide'\n\nexport default class BoardArea extends Component {\n  render() {\n    return (\n      <div className=\"BoardArea\">\n        <LeftSide />\n        <Board />\n        <RightSide />\n      </div>\n    )\n  }\n}\n","import { Provider } from 'mobx-react'\nimport React, { Component } from 'react'\nimport GameStateStore, { Store } from '../store/GameStateStore'\nimport './App.scss'\nimport BoardArea from './shogi/BoardArea'\n\nexport default class App extends Component {\n  private store: Store = new GameStateStore()\n\n  render() {\n    return (\n      <Provider store={this.store}>\n        <div className=\"App App-BoardOnly\">\n          <BoardArea />\n        </div>\n      </Provider>\n    )\n  }\n}\n","import ClipboardJS from 'clipboard'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\nimport './index.scss'\n\nReactDOM.render(<App />, document.getElementById('root'))\nnew ClipboardJS('.Copy')\n"],"sourceRoot":""}