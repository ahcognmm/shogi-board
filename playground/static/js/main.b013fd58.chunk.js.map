{"version":3,"sources":["model/engine/State.ts","model/shogi/Piece.ts","lib/game-handler/piece.ts","lib/strings.ts","lib/kif-handler/genKifString.ts","components/engine/info/Columns.tsx","components/engine/info/SideInfo.tsx","model/display/MockupState.ts","components/util/CloseButton.tsx","components/form/Button.tsx","components/engine/connection/form/Buttons.tsx","components/form/Check.tsx","components/engine/connection/form/Checks.tsx","components/engine/connection/form/Range.tsx","components/engine/connection/form/Ranges.tsx","components/form/Select.tsx","components/engine/connection/form/Selects.tsx","components/form/Text.tsx","components/engine/connection/form/Texts.tsx","components/engine/connection/Detail.tsx","components/util/Loader.tsx","components/engine/connection/List.tsx","components/engine/connection/Controller.tsx","components/setting/Setting.tsx","lib/validatior/utils/algorithm.ts","model/shogi/Turn.ts","components/shogi/Cell.tsx","components/shogi/Board.tsx","model/kif/History.ts","lib/kif-handler/getAsString.ts","components/shogi/Buttons.tsx","components/shogi/Captures.tsx","components/shogi/LeftSide.tsx","components/shogi/Kif.tsx","lib/dom-handler/intoView.ts","components/shogi/RightSide.tsx","components/shogi/BoardArea.tsx","components/App.tsx","serviceWorker.ts","config/Config.ts","store/DisplayState.ts","lib/game-handler/captures.ts","lib/game-handler/position.ts","model/engine/Optoin.ts","infrastructure/ShogiBoardClient.ts","store/EngineState.ts","lib/kif-handler/changeIndex.ts","lib/kif-handler/pushMove.ts","lib/validatior/utils/getEmpties.ts","lib/validatior/utils/getFromNexts.ts","lib/validatior/utils/getWithDiff.ts","lib/validatior/pieces/hisha.ts","lib/validatior/pieces/kaku.ts","lib/validatior/getTargets.ts","lib/validatior/pieces/fu.ts","lib/validatior/pieces/kyou.ts","lib/validatior/pieces/kei.ts","lib/validatior/pieces/gin.ts","lib/validatior/pieces/kin.ts","lib/validatior/pieces/gyoku.ts","lib/validatior/pieces/uma.ts","lib/validatior/pieces/ryu.ts","lib/validatior/utils/getGyokuPoint.ts","lib/validatior/utils/isPointed.ts","model/kif/Kif.ts","model/shogi/PositionInit.ts","store/GameState.ts","lib/validatior/utils/filterTargets.ts","lib/kif-handler/getCurrent.ts","store/Store.ts","index.tsx"],"names":["NotConnected","Thinking","Empty","Fu0","Kyou0","Kei0","Gin0","Kin0","Kaku0","Hisha0","Gyoku0","To0","NariKyou0","NariKei0","NariGin0","Uma0","Ryu0","Fu1","Kyou1","Kei1","Gin1","Kin1","Kaku1","Hisha1","Gyoku1","To1","NariKyou1","NariKei1","NariGin1","Uma1","Ryu1","promote","p","demote","Math","abs","canPromote","props","sourceRow","isPromotable","piece","rows","isInEnemyArea","includes","destRow","columns","rowString","r","columnString","c","genKifString","checkPromotable","source","dest","pc","Error","pieceString","dr","row","dc","column","sr","sc","Columns","inject","observer","result","this","store","engineState","map","i","moves","m","n","kif","key","className","id","score","Component","SideInfo","MockupHidden","MockupEngineControl","MockupServerSetting","MockupSetting","CloseButton","one","line","two","onClick","width","height","x1","y1","x2","y2","stroke","strokeWidth","Button","label","Buttons","getOnClick","option","a","async","sbclient","updateButton","buttons","elms","Array","from","name","Check","value","type","onChange","e","target","checked","htmlFor","data-checked","data-unchecked","Checks","getOnChange","b","setValue","updateCheck","checks","Range","update","updateRange","inputValue","min","max","toString","labelText","placeholder","required","Ranges","ranges","Select","options","opts","renderOptions","vars","Selects","s","updateSelect","selects","Text","allowEmpty","classes","push","join","Texts","updateText","texts","strElms","GET_RESULT_INTERVAL","Detail","disconnect","start","displayState","startThinking","then","closeMockup","fetchInterval","catch","console","error","interval","_","stop","gameState","current","state","getResult","currentMove","setResult","disconnectBtn","startBtn","Loader","List","names","length","loader","undefined","setCurrentEngine","connect","updatePosition","init","list","setNames","err","msg","alert","Controller","close","setMockupState","child","Setting","config","paintTargets","serverURL","saveToCookie","setServerURL","setPaintTargets","setSaveToCookie","comp","find","pts","l","Sente","Gote","Cell","getPiece","inRange","pos","indexes","selected","confirm","moveTargets","turn","isTurn","isTargeted","sel","rowInRange","colInRange","isLeft","rv","isTop","isStar","isSelected","rvp","pieceImg","pieceTurn","pieceSelected","pieceTargeted","left","top","edgeText","star","getClassName","click","renderConfirm","renderEdgeTextRow","renderEdgeTextColumn","cf","isReversed","isGote","preserved","Number","clicked","clickPiece","Board","idx","slice","reverse","renderMockup","mockup","isBranch","getAsString","k","history","getRec","h","kc","branches","index","str","kifHandler","clickKif","engineOnClick","connectToEngine","stopThinking","log","showSetting","engineButtonText","prevOne","nextOne","prevFive","nextFive","data-clipboard-text","Captures","captures","isLeftSide","cells","pieceId","count","children","keys","selectedClass","getSelectedClass","isTurnClass","sideNumber","captureClass","LeftSide","cap0","cap1","caps","Kif","renderKif","nested","renderBranch","renderMove","prototype","concat","apply","main","head","rest","otherHeadsDom","txt","restDom","document","getElementById","scrollIntoViewIfNeeded","intoView","RightSide","BoardArea","App","isThinking","en","renderEngineInfo","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","DefaultConfig","expire","expires","Cookies","get","set","String","Object","values","forEach","remove","observable","action","DefaultDisplayState","handle","cap","f","v","move","handleCaptures","d","increaseCaptures","decreaseCaptures","updatedCap0","updatedCap1","moveOnBoard","moveCount","moveBoardOnly","initial","default","isNaN","DEBOUNCE_MILLIS","ShogiBoardClient","engineName","_engineName","_serverURL","engineNameKey","debounce","rng","post","buildUrl","url","axios","res","data","Map","t","btn","chk","resp","entries","sort","info","mp","isPromoted","shortid","generate","path","body","headers","withName","encodeURIComponent","query","DefaultEngineState","setState","getOptions","setPosition","computed","changeHistory","x","y","lastIndex","last","xPassesIfBranch","changeBranch","pushToHistory","lastIsCurrent","pushToBranch","nextIndex","next","moveEquals","tail","createBranch","recursive","indexOfNewMove","findIndex","toHistory","invalidRows","invalidColumns","points","nexts","rowDiff","columnDiff","getEmpties","diffList","getWithDiff","point","columnsOfContainingFu","col","invalidRow","nextRow","fu","diff","kyou","invalidRow1","invalidRow2","getFromNexts","kei","gin","kin","kaku","hisha","gyoku","kakuPoint","kakuTargets","targets","uma","hishaPoint","hishaTargets","ryu","isPointed","attacker","ignoreCheckLeaving","getTargets","newKif","initPos","meta","version","player","sente","gote","handicap","DefaultGameState","isPiece","cp","selectedAgain","ownerIsTurn","filtered","filter","gp","getGyokuPoint","moved","isFu","isFromCapture","enemyGyoku","fuIsPointed","filteredEnemyGyokuTargets","filterTargets","moveAndUpdateState","old","moveProps","kifStr","moveForKif","mustPromote","promoted","branchIndex","moveOrBranch","getCurrent","observe","change","newValue","ReactDOM","render","ClipboardJS","URL","process","href","origin","addEventListener","fetch","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.b013fd58.chunk.js","sourcesContent":["// 将棋エンジンの状態を表すID\nexport type State = 0 | 1 | 2 | 3 | 4\n\n// 接続前\nexport const NotConnected: State = 0\n\n// 接続中・ローディング中のComponentを表示するため\nexport const Connecting: State = 1\n\n// 接続済\nexport const Connected: State = 2\n\n// 将棋エンジン、待機中(思考中ではない)\nexport const StandBy: State = 3\n\n// 将棋エンジン思考中\nexport const Thinking: State = 4\n","export type Piece = number\n\nexport const Empty: Piece = 0\n\nexport const Fu0: Piece = 1\nexport const Kyou0: Piece = 2\nexport const Kei0: Piece = 3\nexport const Gin0: Piece = 4\nexport const Kin0: Piece = 5\nexport const Kaku0: Piece = 6\nexport const Hisha0: Piece = 7\nexport const Gyoku0: Piece = 8\nexport const To0: Piece = 11\nexport const NariKyou0: Piece = 12\nexport const NariKei0: Piece = 13\nexport const NariGin0: Piece = 14\nexport const Uma0: Piece = 16\nexport const Ryu0: Piece = 17\n\nexport const Fu1: Piece = -Fu0\nexport const Kyou1: Piece = -Kyou0\nexport const Kei1: Piece = -Kei0\nexport const Gin1: Piece = -Gin0\nexport const Kin1: Piece = -Kin0\nexport const Kaku1: Piece = -Kaku0\nexport const Hisha1: Piece = -Hisha0\nexport const Gyoku1: Piece = -Gyoku0\nexport const To1: Piece = -To0\nexport const NariKyou1: Piece = -NariKyou0\nexport const NariKei1: Piece = -NariKei0\nexport const NariGin1: Piece = -NariGin0\nexport const Uma1: Piece = -Uma0\nexport const Ryu1: Piece = -Ryu0\n","import {\n  Piece,\n  Empty,\n  Hisha0,\n  Kin0,\n  Fu0,\n  Fu1,\n  Kyou0,\n  Kyou1,\n  Kei0,\n  Kei1,\n} from '../../model/shogi/Piece'\n\n/**\n * 駒を成る\n * canPromote を通っている前提\n * @param p Piece 成る前の駒\n */\nexport function promote(p: Piece): Piece {\n  if (p > 0) return p + 10\n  return p - 10\n}\n\n/**\n * 駒を成る前の駒にする\n * @param p Piece 成駒\n */\nexport function demote(p: Piece): Piece {\n  if (Math.abs(p) < 10) return p\n\n  if (p < 0) return p + 10\n  return p - 10\n}\n\nexport interface CanPromoteProps {\n  // 移動前の行\n  sourceRow: number\n\n  // 移動後の行\n  destRow: number\n\n  // 移動する駒\n  piece: Piece\n}\n\n/**\n * 成・不成の選択ができるかどうか\n * 選択可能: true\n * 選択不可: false\n * @param props CanPromoteProps\n * @returns boolean\n *          成れる駒 && sourceRow か destRow が敵陣なら true\n *          成れない駒(金とか、既に成駒の場合)なら false\n */\nexport function canPromote(props: CanPromoteProps): boolean {\n  // 持ち駒\n  if (props.sourceRow === -1) return false\n\n  const isPromotable: boolean =\n    props.piece !== Empty &&\n    Math.abs(props.piece) !== Kin0 &&\n    Math.abs(props.piece) <= Hisha0\n\n  const rows: number[] = props.piece > 0 ? [0, 1, 2] : [6, 7, 8]\n  const isInEnemyArea: boolean =\n    rows.includes(props.sourceRow) || rows.includes(props.destRow)\n\n  return isPromotable && isInEnemyArea\n}\n\n/**\n * 移動後に、必ず成る必要があるか\n * 歩・香・桂が不成の場合に次に動けないとき true\n * @param p Piece 動かす駒\n * @param row 移動後の行\n * @returns boolean\n *          成必要がある場合 true\n */\nexport function mustPromote(p: Piece, row: number): boolean {\n  return (\n    ((p === Fu0 || p === Kyou0) && row === 0) ||\n    ((p === Fu1 || p === Kyou1) && row === 8) ||\n    (p === Kei0 && (row === 0 || row === 1)) ||\n    (p === Kei1 && (row === 8 || row === 7))\n  )\n}\n","import {\n  Fu0,\n  Gin0,\n  Gyoku0,\n  Hisha0,\n  Kaku0,\n  Kei0,\n  Kin0,\n  Kyou0,\n  NariGin0,\n  NariKei0,\n  NariKyou0,\n  Piece,\n  Ryu0,\n  To0,\n  Uma0,\n} from '../model/shogi/Piece'\n\nconst rows = ['一', '二', '三', '四', '五', '六', '七', '八', '九']\nconst columns = ['１', '２', '３', '４', '５', '６', '７', '８', '９']\n\nexport function rowString(r: number): string {\n  return rows[r]\n}\n\nexport function columnString(c: number): string {\n  return columns[c]\n}\n\nexport function pieceString(piece: Piece): string {\n  const p = Math.abs(piece)\n\n  if (p === Fu0) return '歩'\n  if (p === Kyou0) return '香'\n  if (p === Kei0) return '桂'\n  if (p === Gin0) return '銀'\n  if (p === Kin0) return '金'\n  if (p === Kaku0) return '角'\n  if (p === Hisha0) return '飛'\n  if (p === Gyoku0) return '玉'\n  if (p === To0) return 'と'\n  if (p === NariKyou0) return '成香'\n  if (p === NariKei0) return '成桂'\n  if (p === NariGin0) return '成銀'\n  if (p === Uma0) return '馬'\n  if (p === Ryu0) return '龍'\n\n  throw new Error('Failed to ident piece name. received: ' + piece)\n}\n","import { MoveProps } from '../../model/events/MoveProps'\nimport { canPromote, demote } from '../game-handler/piece'\nimport { columnString, pieceString, rowString } from '../strings'\n\n/**\n * 棋譜の文字列を生成する\n * @param p MoveProps\n * @param checkPromotable 将棋エンジンからもらう値では、不成or無印の判定が難しいので、\n *                        ここでチェックする。\n */\nexport function genKifString(\n  { source, dest, piece, promote }: MoveProps,\n  checkPromotable?: boolean\n): string {\n  const pc: string = pieceString(promote ? demote(piece) : piece)\n  const dr: string = rowString(dest.row)\n  const dc: string = columnString(dest.column)\n\n  if (source.row === -1) return `${dc}${dr}${pc}打`\n\n  const sr: number = source.row + 1\n  const sc: number = source.column + 1\n  const promoteStr: () => string = () => {\n    if (promote === true) return '成'\n\n    // undefined は無印\n    if (promote !== false) return ''\n\n    // promote === false && チェックしない\n    // or\n    // promote === false && 成れる駒\n    // なら不成\n    if (\n      !checkPromotable ||\n      canPromote({ sourceRow: source.row, destRow: dest.row, piece: piece })\n    )\n      return '不成'\n\n    return ''\n  }\n\n  return `${dc}${dr}${pc}${promoteStr()}(${sc}${sr})`\n}\n","import { inject, observer } from 'mobx-react'\nimport React, { Component } from 'react'\nimport { genKifString } from '../../../lib/kif-handler/genKifString'\nimport { Store } from '../../../model/store/Store'\nimport './Columns.scss'\n\ninterface Props {\n  store?: Store\n}\n\n@inject('store')\n@observer\nexport default class Columns extends Component<Props> {\n  render(): JSX.Element[] | JSX.Element {\n    const { result } = this.props.store!.engineState\n    if (!result) return <div />\n\n    return result.map(i => {\n      const moves = i.moves.map((m, n) => {\n        const kif = genKifString(m, true)\n        // TODO: key\n        return (\n          <div key={n} className=\"EngineInfoRowContent\">\n            {kif}\n          </div>\n        )\n      })\n\n      return (\n        <div key={i.id} className=\"EngineInfoColumn\">\n          <div className=\"EngineInfoRow EngineInfoRowContainer\">\n            <div className=\"EngineInfoRowLabel\">score</div>\n            <div className=\"EngineInfoRowContent Center\">{i.score}</div>\n          </div>\n          <div className=\"EngineInfoRow EngineInfoRowContainer\">\n            <div className=\"EngineInfoRowLabel\">読み</div>\n            {moves}\n          </div>\n        </div>\n      )\n    })\n  }\n}\n","import React, { Component } from 'react'\nimport Columns from './Columns'\nimport './SideInfo.scss'\n\nexport default class SideInfo extends Component {\n  render() {\n    return (\n      <div className=\"EngineSideInfo\">\n        <div className=\"EngineSideInfoContainer\">\n          <Columns />\n        </div>\n      </div>\n    )\n  }\n}\n","// モックアップの表示をコントロールするための情報\nexport type MockupState = number\n\n// 非表示\nexport const MockupHidden: MockupState = 1\n\n// 将棋エンジンとの接続を制御したりする画面\nexport const MockupEngineControl: MockupState = 2\n\n// shogi-board-server の URL が設定されていないとき\n// 将棋エンジンに接続するボタンが押されたときに出す画面\nexport const MockupServerSetting: MockupState = 3\n\n// 設定画面\nexport const MockupSetting: MockupState = 4\n","import React, { Component } from 'react'\nimport './Mockup.scss'\n\ninterface Props {\n  onClick: () => Promise<void>\n}\n\nexport default class CloseButton extends Component<Props> {\n  render() {\n    const width = 20\n    const one = this.line(0, 0, width, width)\n    const two = this.line(width, 0, 0, width)\n\n    return (\n      <div onClick={() => this.props.onClick()}>\n        <svg width={width} height={width} className=\"MockupCloseButton\">\n          {one}\n          {two}\n        </svg>\n      </div>\n    )\n  }\n\n  line(x1: number, y1: number, x2: number, y2: number) {\n    return (\n      <line x1={x1} y1={y1} x2={x2} y2={y2} stroke=\"black\" strokeWidth=\"2\" />\n    )\n  }\n}\n","import { observer } from 'mobx-react'\nimport React, { Component } from 'react'\nimport './Button.scss'\n\nexport interface Props {\n  label: string\n  onClick: () => Promise<void>\n}\n\n@observer\nexport default class Button extends Component<Props> {\n  render() {\n    const { label } = this.props\n    return (\n      <button className=\"FormButton\" onClick={() => this.props.onClick()}>\n        {label}\n      </button>\n    )\n  }\n}\n","import { observer } from 'mobx-react'\nimport React, { Component } from 'react'\nimport { ShogiBoardClient } from '../../../../infrastructure/ShogiBoardClient'\nimport { Button as OptionButton } from '../../../../model/engine/Optoin'\nimport Button from '../../../form/Button'\nimport './Buttons.scss'\n\nexport interface Props {\n  buttons: Map<string, OptionButton>\n  sbclient: ShogiBoardClient\n}\n\n@observer\nexport default class Buttons extends Component<Props> {\n  render() {\n    const { buttons } = this.props\n\n    const elms: JSX.Element[] = Array.from(buttons).map(([name, option]) => {\n      const onClick = this.getOnClick(option)\n      return <Button key={name} label={name} onClick={onClick} />\n    })\n\n    return <div className=\"OptionButton\">{elms}</div>\n  }\n\n  getOnClick = (option: OptionButton) => async () => {\n    const { sbclient } = this.props\n    sbclient.updateButton(option)\n  }\n}\n","import { observer } from 'mobx-react'\nimport React, { Component } from 'react'\nimport './Check.scss'\n\nexport interface Props {\n  label: string\n  value: boolean\n  name: string\n  onChange: (b: boolean) => Promise<void>\n}\n\n@observer\nexport default class Check extends Component<Props> {\n  render() {\n    const { label, value, name } = this.props\n    const id = `FormCheck-${name}`\n\n    return (\n      <div className=\"FormCheck\">\n        <span>{label}</span>\n        <div className=\"FormCheckToggle\">\n          <input\n            id={id}\n            name={id}\n            type=\"checkbox\"\n            onChange={e => this.props.onChange(e.target.checked)}\n            checked={value}\n          />\n          <label htmlFor={id}>\n            <div\n              className=\"ToggleSwitch\"\n              data-checked=\"ON\"\n              data-unchecked=\"OFF\"\n            />\n          </label>\n        </div>\n      </div>\n    )\n  }\n}\n","import { observer } from 'mobx-react'\nimport React, { Component } from 'react'\nimport { ShogiBoardClient } from '../../../../infrastructure/ShogiBoardClient'\nimport { Check as OptionCheck } from '../../../../model/engine/Optoin'\nimport Check from '../../../form/Check'\n\nexport interface Props {\n  checks: Map<string, OptionCheck>\n  sbclient: ShogiBoardClient\n}\n\n@observer\nexport default class Checks extends Component<Props> {\n  render() {\n    const { checks } = this.props\n\n    const elms: JSX.Element[] = Array.from(checks).map(([name, option]) => {\n      const onChange = this.getOnChange(option)\n      return (\n        <Check\n          key={name}\n          label={name}\n          name={name}\n          value={option.value}\n          onChange={onChange}\n        />\n      )\n    })\n\n    return <div>{elms}</div>\n  }\n\n  getOnChange = (option: OptionCheck) => async (b: boolean) => {\n    const { sbclient } = this.props\n    option.setValue(b)\n    sbclient.updateCheck(option)\n  }\n}\n","import { observer } from 'mobx-react'\nimport React, { Component } from 'react'\nimport { ShogiBoardClient } from '../../../../infrastructure/ShogiBoardClient'\nimport { Range as OptionRange } from '../../../../model/engine/Optoin'\n\nexport interface Props {\n  option: OptionRange\n  sbclient: ShogiBoardClient\n}\n\n@observer\nexport default class Range extends Component<Props> {\n  render(): JSX.Element {\n    const { name, value, inputValue, min, max } = this.props.option\n    // inputValue が Number && inRange のとき、 val に値をセットするようにしているため\n    // val と inputValue が一致していれば正しい値\n    const isValid: boolean = value.toString() === inputValue\n    const className: string = isValid\n      ? 'FormTextInput'\n      : 'FormTextInput FormTextInvalid'\n    const labelText: string = `${name}(${min}~${max})`\n\n    return (\n      <div className=\"FormText\">\n        <input\n          className={className}\n          type=\"text\"\n          value={inputValue}\n          placeholder=\" \"\n          onChange={this.update}\n          required\n          min={min}\n          max={max}\n        />\n        <label>{labelText}</label>\n      </div>\n    )\n  }\n\n  private update = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { option, sbclient } = this.props\n    option.setValue(e.target.value)\n    sbclient.updateRange(option)\n  }\n}\n","import { observer } from 'mobx-react'\nimport React, { Component } from 'react'\nimport { ShogiBoardClient } from '../../../../infrastructure/ShogiBoardClient'\nimport { Range as OptionRange } from '../../../../model/engine/Optoin'\nimport Range from './Range'\n\nexport interface Props {\n  ranges: Map<string, OptionRange>\n  sbclient: ShogiBoardClient\n}\n\n@observer\nexport default class Ranges extends Component<Props> {\n  render() {\n    const { ranges, sbclient } = this.props\n\n    const elms: JSX.Element[] = Array.from(ranges).map(([name, option]) => (\n      <Range key={name} option={option} sbclient={sbclient} />\n    ))\n\n    return <div>{elms}</div>\n  }\n}\n","import { observer } from 'mobx-react'\nimport React, { Component } from 'react'\nimport './Select.scss'\n\nexport interface Props {\n  label: string\n  value: string\n  options: string[]\n  onChange: (s: string) => Promise<void>\n}\n\n@observer\nexport default class Select extends Component<Props> {\n  render(): JSX.Element {\n    const { label, value, options } = this.props\n    const opts = this.renderOptions(options)\n\n    return (\n      <div className=\"FormSelectContainer\">\n        <label>{label}</label>\n        <div className=\"FormSelect SelectTriangle\">\n          <select onChange={this.update} value={value} required>\n            {opts}\n          </select>\n        </div>\n      </div>\n    )\n  }\n\n  private renderOptions(vars: string[]): JSX.Element[] {\n    return vars.map((value: string, i: number) => (\n      <option key={i} value={value}>\n        {value}\n      </option>\n    ))\n  }\n\n  private update = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    this.props.onChange(e.target.value)\n  }\n}\n","import { observer } from 'mobx-react'\nimport React, { Component } from 'react'\nimport { ShogiBoardClient } from '../../../../infrastructure/ShogiBoardClient'\nimport { Select as OptionSelect } from '../../../../model/engine/Optoin'\nimport Select from '../../../form/Select'\n\nexport interface Props {\n  selects: Map<string, OptionSelect>\n  sbclient: ShogiBoardClient\n}\n\n@observer\nexport default class Selects extends Component<Props> {\n  render() {\n    const { selects } = this.props\n\n    const elms: JSX.Element[] = Array.from(selects).map(([name, option]) => {\n      const onChange = this.getOnChange(option)\n      return (\n        <Select\n          key={name}\n          label={name}\n          value={option.value}\n          options={option.vars}\n          onChange={onChange}\n        />\n      )\n    })\n\n    return <div>{elms}</div>\n  }\n\n  getOnChange = (option: OptionSelect) => async (s: string) => {\n    const { sbclient } = this.props\n    option.setValue(s)\n    sbclient.updateSelect(option)\n  }\n}\n","import { observer } from 'mobx-react'\nimport React, { Component } from 'react'\nimport './Text.scss'\n\nexport interface Props {\n  value: string\n  label: string\n  onChange: (s: string) => Promise<void>\n  allowEmpty?: boolean\n  placeholder?: string\n}\n\n@observer\nexport default class Text extends Component<Props> {\n  render(): JSX.Element {\n    const { value, label, allowEmpty, placeholder } = this.props\n\n    const classes = ['FormTextInput']\n    if (allowEmpty !== true && value === '') classes.push('FormTextInvalid')\n    const className: string = classes.join(' ')\n\n    return (\n      <div className=\"FormText\">\n        <input\n          className={className}\n          type=\"text\"\n          value={value}\n          placeholder={placeholder || ' '}\n          onChange={this.onChange}\n          required\n        />\n        <label>{label}</label>\n      </div>\n    )\n  }\n\n  private onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    this.props.onChange(e.target.value)\n  }\n}\n","import { observer } from 'mobx-react'\nimport React, { Component } from 'react'\nimport { ShogiBoardClient } from '../../../../infrastructure/ShogiBoardClient'\nimport { Text as OptionText } from '../../../../model/engine/Optoin'\nimport Text from '../../../form/Text'\n\nexport interface Props {\n  texts: Map<string, OptionText>\n  sbclient: ShogiBoardClient\n}\n\n@observer\nexport default class Texts extends Component<Props> {\n  render() {\n    const { texts } = this.props\n\n    const strElms: JSX.Element[] = Array.from(texts).map(([name, option]) => {\n      const onChange = this.getOnChange(option)\n      return (\n        <Text\n          key={name}\n          label={name}\n          value={option.value}\n          onChange={onChange}\n        />\n      )\n    })\n\n    return <div>{strElms}</div>\n  }\n\n  getOnChange = (option: OptionText) => async (s: string) => {\n    const { sbclient } = this.props\n    option.setValue(s)\n    sbclient.updateText(option)\n  }\n}\n","import interval from 'interval-promise'\nimport { inject, observer } from 'mobx-react'\nimport React, { Component } from 'react'\nimport { Info } from '../../../model/engine/Info'\nimport { Thinking } from '../../../model/engine/State'\nimport { Store } from '../../../model/store/Store'\nimport './Detail.scss'\nimport Buttons from './form/Buttons'\nimport Checks from './form/Checks'\nimport Ranges from './form/Ranges'\nimport Selects from './form/Selects'\nimport Texts from './form/Texts'\n\nconst GET_RESULT_INTERVAL = 1000 // ms\n\nexport interface Props {\n  store?: Store\n}\n\n@inject('store')\n@observer\nexport default class Detail extends Component<Props> {\n  render() {\n    const { current, options, sbclient } = this.props.store!.engineState\n    if (!current || !options) return <div />\n\n    const { buttons, checks, ranges, selects, texts } = options\n\n    const disconnectBtn = (\n      <button className=\"ButtonDisconnect\" onClick={this.disconnect}>\n        接続解除\n      </button>\n    )\n\n    const startBtn = (\n      <button className=\"ButtonStartThinking\" onClick={this.start}>\n        思考開始\n      </button>\n    )\n\n    return (\n      <div className=\"DetailContainer\">\n        <h1 className=\"EngineName\">{current}</h1>\n        {disconnectBtn}\n        {startBtn}\n        <h2 className=\"EngineOption\">オプション</h2>\n        <Buttons buttons={buttons} sbclient={sbclient} />\n        <Checks checks={checks} sbclient={sbclient} />\n        <Ranges ranges={ranges} sbclient={sbclient} />\n        <Selects selects={selects} sbclient={sbclient} />\n        <Texts texts={texts} sbclient={sbclient} />\n        {disconnectBtn}\n        {startBtn}\n      </div>\n    )\n  }\n\n  private disconnect = () => this.props.store!.engineState.disconnect()\n  private start = () => {\n    const { engineState, displayState } = this.props.store!\n    engineState\n      .startThinking()\n      .then(() => displayState.closeMockup())\n      .then(this.fetchInterval)\n      .catch(e => console.error(e))\n  }\n\n  private fetchInterval = async () => {\n    // 思考を開始したら、思考結果を定期的に取得する\n    interval(async (_, stop) => {\n      const { gameState, engineState } = this.props.store!\n      const { current, state, sbclient } = engineState\n      if (!current || state !== Thinking) {\n        stop()\n        return\n      }\n      try {\n        const result: Info[] = await sbclient.getResult(gameState.currentMove)\n        await engineState.setResult(result)\n      } catch (e) {\n        console.error(e)\n      }\n    }, GET_RESULT_INTERVAL)\n  }\n}\n","import React, { Component } from 'react'\nimport './Loader.scss'\n\nexport default class Loader extends Component {\n  render() {\n    return (\n      <div className=\"Loader sk-fading-circle\">\n        <div className=\"sk-circle1 sk-circle\" />\n        <div className=\"sk-circle2 sk-circle\" />\n        <div className=\"sk-circle3 sk-circle\" />\n        <div className=\"sk-circle4 sk-circle\" />\n        <div className=\"sk-circle5 sk-circle\" />\n        <div className=\"sk-circle6 sk-circle\" />\n        <div className=\"sk-circle7 sk-circle\" />\n        <div className=\"sk-circle8 sk-circle\" />\n        <div className=\"sk-circle9 sk-circle\" />\n        <div className=\"sk-circle10 sk-circle\" />\n        <div className=\"sk-circle11 sk-circle\" />\n        <div className=\"sk-circle12 sk-circle\" />\n      </div>\n    )\n  }\n}\n","import { inject, observer } from 'mobx-react'\nimport React, { Component } from 'react'\nimport { Connecting, NotConnected, State } from '../../../model/engine/State'\nimport { Store } from '../../../model/store/Store'\nimport Loader from '../../util/Loader'\nimport './List.scss'\n\nexport interface Props {\n  store?: Store\n}\n\n@inject('store')\n@observer\nexport default class List extends Component<Props> {\n  render() {\n    const { names, current, state } = this.props.store!.engineState\n    if (names.length === 0)\n      return (\n        <div className=\"ListEngineName\">\n          <span>利用可能な将棋エンジンが設定されていません</span>\n        </div>\n      )\n\n    return names.map((name, i) => {\n      const isCurrent: boolean = name === current\n      const loading: boolean = isCurrent && state === Connecting\n      const loader = loading ? <Loader /> : undefined\n      const onClick = () => this.setCurrentEngine(name, state)\n      return (\n        <div className=\"ListEngineName\" key={i} onClick={onClick}>\n          {loader}\n          <span>{name}</span>\n        </div>\n      )\n    })\n  }\n\n  private async setCurrentEngine(name: string, state: State): Promise<void> {\n    if (state !== NotConnected) return\n    const { store } = this.props\n    await store!.engineState.connect(name)\n    await store!.updatePosition().catch(e => console.error(e))\n  }\n\n  componentWillMount() {\n    const { engineState }: Store = this.props.store!\n    engineState.sbclient\n      .init()\n      .then((list: string[]) => engineState.setNames(list))\n      .catch(err => {\n        const msg = [\n          '接続に失敗しました。以下を確認してください。',\n          '1. サーバーが起動しているか',\n          '2. サーバーのURLが正しいか',\n          '3. サーバーのログを確認し、エラー等が出ていないか',\n          '4. サーバーで将棋エンジンの実行パスを設定したか',\n          '5. 将棋エンジンが実行可能であるか',\n        ].join('\\n')\n        console.error(err)\n        engineState.disconnect()\n        alert(msg)\n      })\n  }\n}\n","import { inject, observer } from 'mobx-react'\nimport React, { Component } from 'react'\nimport { MockupHidden } from '../../../model/display/MockupState'\nimport { EngineState } from '../../../model/engine/EngineState'\nimport { Connecting, NotConnected } from '../../../model/engine/State'\nimport { Store } from '../../../model/store/Store'\nimport CloseButton from '../../util/CloseButton'\nimport Detail from './Detail'\nimport List from './List'\n\nexport interface Props {\n  store?: Store\n}\n\n@inject('store')\n@observer\nexport default class Controller extends Component<Props> {\n  render() {\n    const { engineState }: Store = this.props.store!\n    const { state }: EngineState = engineState\n\n    // 接続前なら将棋エンジンの一覧画面を出す\n    const isList: boolean = state === NotConnected || state === Connecting\n    const child: JSX.Element = isList ? <List /> : <Detail />\n\n    return (\n      <div className=\"Mockup\">\n        <CloseButton onClick={this.close} />\n        {child}\n      </div>\n    )\n  }\n\n  private close = () =>\n    this.props.store!.displayState.setMockupState(MockupHidden)\n}\n","import { inject, observer } from 'mobx-react'\nimport React, { Component } from 'react'\nimport { MockupHidden } from '../../model/display/MockupState'\nimport { Store } from '../../model/store/Store'\nimport Text from '../form/Text'\nimport CloseButton from '../util/CloseButton'\nimport Check from '../form/Check'\n\nexport interface Props {\n  store?: Store\n}\n\n@inject('store')\n@observer\nexport default class Setting extends Component<Props> {\n  render() {\n    const { config } = this.props.store!\n    const { paintTargets, serverURL, saveToCookie } = config\n    return (\n      <div className=\"Mockup\">\n        <CloseButton onClick={this.close} />\n        <h1>設定</h1>\n        <Text\n          label=\"shogi-board-server の URL\"\n          value={serverURL}\n          allowEmpty={true}\n          onChange={s => config.setServerURL(s)}\n          placeholder=\"(例)http://localhost:8080\"\n        />\n        <Check\n          label=\"駒が移行できるマスに色を付ける\"\n          value={paintTargets}\n          name=\"PaintTargets\"\n          onChange={b => config.setPaintTargets(b)}\n        />\n        <Check\n          label=\"Cookie に設定を保存する\"\n          value={saveToCookie}\n          name=\"SaveToCookie\"\n          onChange={b => config.setSaveToCookie(b)}\n        />\n      </div>\n    )\n  }\n\n  private close = () =>\n    this.props.store!.displayState.setMockupState(MockupHidden)\n}\n","import Point from '../../../model/shogi/Point'\n\nexport function comp(a: Point, b: Point): number {\n  return a.row - b.row || a.column - b.column\n}\n\nexport function find(pts: Point[], p: Point): number {\n  let i = pts.length >> 1\n  let l = 0\n  let r = pts.length - 1\n\n  while (l <= r) {\n    if (pts[i].row === p.row && pts[i].column === p.column) return i\n    if (pts[i].row < p.row) l = i + 1\n    else if (pts[i].row > p.row) r = i - 1\n    else if (pts[i].column < p.column) l = i + 1\n    else r = i - 1\n    i = l + ((r - l) >> 1)\n  }\n\n  return -1\n}\n","// 手番\n//  1: 先手\n// -1: 後手\nexport type Turn = 1 | -1\n\nexport const Sente: Turn = 1\nexport const Gote: Turn = -1\n","import { inject, observer } from 'mobx-react'\nimport React, { Component } from 'react'\nimport { columnString, rowString } from '../../lib/strings'\nimport { find } from '../../lib/validatior/utils/algorithm'\nimport { ClickProps } from '../../model/events/ClickProps'\nimport Confirm from '../../model/shogi/Confirm'\nimport { Empty, Piece } from '../../model/shogi/Piece'\nimport Point from '../../model/shogi/Point'\nimport { Gote, Sente, Turn } from '../../model/shogi/Turn'\nimport { Store } from '../../model/store/Store'\nimport './Cell.scss'\n\nexport interface Props {\n  store?: Store\n  row: number\n  column: number\n}\n\n@inject('store')\n@observer\nexport default class Cell extends Component<Props> {\n  getPiece = () => {\n    const { row, column, store } = this.props\n    const isOnBoard: boolean = inRange(row) && inRange(column)\n    if (!isOnBoard) return Empty\n    return store!.gameState.currentMove.pos.pos[row][column]\n  }\n\n  render(): JSX.Element | undefined {\n    const { row, column, store } = this.props\n    const { config, gameState } = store!\n    const { indexes, selected, confirm, currentMove, moveTargets } = gameState\n    const piece: Piece = this.getPiece()\n\n    const turn: Turn = currentMove.pos.turn\n    const isTurn: boolean =\n      (piece > 0 && turn === Sente) || (piece < 0 && turn === Gote)\n\n    // 着色する設定 && 駒が移動できるマスである\n    const isTargeted =\n      config.paintTargets && find(moveTargets, { row, column }) !== -1\n\n    const className: string = getClassName({\n      r: row,\n      c: column,\n      rv: indexes[0] === 9,\n      p: piece,\n      sel: selected,\n      confirm: confirm,\n      isTurn,\n      isTargeted,\n    })\n\n    return (\n      <div className={className} onClick={() => this.click()}>\n        {this.renderConfirm(confirm)}\n        {this.renderEdgeTextRow()}\n        {this.renderEdgeTextColumn()}\n      </div>\n    )\n  }\n\n  renderConfirm(cf: Confirm | null): JSX.Element | undefined {\n    const { row, column, store } = this.props\n    if (!cf || cf.row !== row || cf.column !== column) return\n\n    const isReversed: boolean = store!.gameState.indexes[0] === 9\n    const isGote =\n      (isReversed && cf.preserved > 0) || (!isReversed && cf.preserved < 0)\n\n    const className = 'Piece-Confirm Piece-Confirm' + Number(isGote)\n\n    const promote = () => this.click(cf, true)\n    const preserve = () => this.click(cf)\n\n    // TODO: この方法だと画面幅によって1pxずれる\n    return (\n      <div className={className}>\n        <div className=\"Piece-Confirm-Promote\" onClick={promote} />\n        <div className=\"Piece-Confirm-Preserve\" onClick={preserve} />\n      </div>\n    )\n  }\n\n  renderEdgeTextRow(): JSX.Element | undefined {\n    const { row, column } = this.props\n    const needText = inRange(column) && row === -1\n    if (needText) return <span>{columnString(column)}</span>\n  }\n\n  renderEdgeTextColumn(): JSX.Element | undefined {\n    const { row, column } = this.props\n    const needText = inRange(row) && column === -1\n    if (needText) return <span>{rowString(row)}</span>\n  }\n\n  click(cf?: Confirm, promote?: true) {\n    const { row, column, store } = this.props\n    if (store!.gameState.confirm && !cf) return\n    const clicked: Confirm | Piece = cf || this.getPiece()\n    const p: ClickProps = { clicked, row, column, promote }\n    store!.gameState.clickPiece(p)\n  }\n}\n\ninterface GetClassNameProps {\n  r: number // row\n  c: number // column\n  rv: boolean // isReversed\n  p: Piece\n  sel: Point | null // selected\n  confirm: Confirm | null\n  isTurn: boolean\n  isTargeted: boolean\n}\n\n// つらい感じ\nfunction getClassName(p: GetClassNameProps): string {\n  if (\n    !!p.confirm &&\n    !!p.sel &&\n    ((p.r === p.sel.row && p.c === p.sel.column) ||\n      (p.r === p.confirm.row && p.c === p.confirm.column))\n  ) {\n    // TODO: ヒドス。あとで必ず修正すること!!\n    p.p = Empty\n  }\n\n  const rowInRange: boolean = inRange(p.r)\n  const colInRange: boolean = inRange(p.c)\n  const isLeft: boolean =\n    rowInRange && ((!p.rv && p.c === 8) || (p.rv && p.c === 0))\n  const isTop: boolean =\n    colInRange && ((!p.rv && p.r === 0) || (p.rv && p.r === 8))\n  const isStar: boolean =\n    (!p.rv &&\n      ((p.r === 2 && p.c === 6) ||\n        (p.r === 2 && p.c === 3) ||\n        (p.r === 5 && p.c === 6) ||\n        (p.r === 5 && p.c === 3))) ||\n    (p.rv &&\n      ((p.r === 6 && p.c === 2) ||\n        (p.r === 6 && p.c === 5) ||\n        (p.r === 3 && p.c === 2) ||\n        (p.r === 3 && p.c === 5)))\n  const isSelected: boolean =\n    rowInRange &&\n    colInRange &&\n    !!p.sel &&\n    p.sel.row === p.r &&\n    p.sel.column === p.c\n\n  const piece: string = rowInRange && colInRange ? 'Piece Piece-Bordered ' : ''\n  const rvp: number | undefined = p.p && p.rv ? p.p * -1 : p.p\n  const pieceImg: string = rvp ? `Piece-${rvp} ` : ''\n  const pieceTurn: string = p.isTurn ? 'Piece-Turn ' : ''\n  const pieceSelected: string = isSelected ? 'Piece-Selected ' : ''\n  const pieceTargeted: string = p.isTargeted ? 'Piece-Targeted ' : ''\n  const left: string = isLeft ? 'Piece-Left ' : ''\n  const top: string = isTop ? 'Piece-Top ' : ''\n  const edgeText: string =\n    (p.c === -1 && rowInRange) || (p.r === -1 && colInRange)\n      ? 'Cell-EdgeText '\n      : ''\n  const star: string = isStar ? 'Piece-Star' : ''\n\n  return `Cell ${piece}${pieceImg}${pieceTurn}${pieceSelected}${pieceTargeted}${left}${top}${edgeText}${star}`\n}\n\nfunction inRange(n: number): boolean {\n  return 0 <= n && n <= 8\n}\n","import { inject, observer } from 'mobx-react'\nimport React, { Component } from 'react'\nimport {\n  MockupEngineControl,\n  MockupSetting,\n  MockupServerSetting,\n} from '../../model/display/MockupState'\nimport { Store } from '../../model/store/Store'\nimport Controller from '../engine/connection/Controller'\nimport Setting from '../setting/Setting'\nimport './Board.scss'\nimport Cell from './Cell'\n\nexport interface Props {\n  store?: Store\n}\n\n@inject('store')\n@observer\nexport default class Board extends Component<Props> {\n  render() {\n    const idx = this.props.store!.gameState.indexes\n    const rows = idx.map(r =>\n      idx\n        .slice()\n        .reverse()\n        .map(c => <Cell key={r * 10 + c} row={r} column={c} />)\n    )\n\n    return (\n      <div className=\"BoardContainer\">\n        <div className=\"ResetPseudo\">\n          <div className=\"Board\">{rows}</div>\n          {this.renderMockup()}\n        </div>\n      </div>\n    )\n  }\n\n  renderMockup() {\n    const { mockup } = this.props.store!.displayState\n    if (mockup === MockupEngineControl) return <Controller />\n    // TODO: server setting は別に分ける？\n    if (mockup === MockupSetting || mockup === MockupServerSetting)\n      return <Setting />\n  }\n}\n","import Branch from './Branch'\nimport { Move } from './Move'\n\nexport type KifComponent = Move | Branch\n\n// TODO: もうちょい持ち方考える\n// 理想は\n// {\n//   head: Move,\n//   next: History,\n//   isCurrent: boolean\n// }\n// だが、JSON互換的に苦しい感じ\nexport default interface History {\n  moves: KifComponent[]\n\n  // history のインデックス\n  // ブラウザで表示するときに現在局面がどこか探せるように\n  index: number\n}\n\nexport function isBranch(m: KifComponent): m is Branch {\n  return 'branches' in m\n}\n","import History, { isBranch, KifComponent } from '../../model/kif/History'\nimport Kif from '../../model/kif/Kif'\n\nexport function getAsString(k: Kif): string {\n  if (k.history.moves.length < 1) return ''\n  return getRec({\n    moves: k.history.moves.slice(1),\n    index: k.history.index,\n  })\n}\n\nfunction getRec(h: History): string {\n  return h.moves\n    .map((kc: KifComponent) =>\n      isBranch(kc) ? getRec(kc.branches[kc.index]) : `${kc.index} ${kc.str}`\n    )\n    .join('\\n')\n}\n","import { inject, observer } from 'mobx-react'\nimport React, { Component } from 'react'\nimport { getAsString } from '../../lib/kif-handler/getAsString'\nimport {\n  MockupEngineControl,\n  MockupServerSetting,\n  MockupSetting,\n} from '../../model/display/MockupState'\nimport { Thinking } from '../../model/engine/State'\nimport { Store } from '../../model/store/Store'\nimport './Buttons.scss'\n\nexport interface Props {\n  store?: Store\n}\n\n@inject('store')\n@observer\nexport default class Buttons extends Component<Props> {\n  render(): JSX.Element {\n    const { gameState, engineState } = this.props.store!\n    const { currentMove, kif } = gameState\n    const i: number = currentMove.index\n\n    const engineIsThinking: boolean = engineState.state === Thinking\n    const engineButtonText: string = engineIsThinking\n      ? '思考停止'\n      : '将棋エンジン'\n\n    const prevOne: number = i - 1 < 0 ? 0 : i - 1\n    const nextOne: number = i + 1\n    const prevFive: number = i - 5 < 0 ? 0 : i - 5\n    const nextFive: number = i + 5\n\n    return (\n      <div className=\"ButtonsContainer\">\n        <button className=\"PrevOne\" onClick={this.kifHandler(prevOne)}>\n          ＜\n        </button>\n        <button className=\"NextOne\" onClick={this.kifHandler(nextOne)}>\n          ＞\n        </button>\n        <button className=\"PrevFive\" onClick={this.kifHandler(prevFive)}>\n          ＜ 5\n        </button>\n        <button className=\"NextFive\" onClick={this.kifHandler(nextFive)}>\n          5 ＞\n        </button>\n        <button className=\"Reverse\" onClick={this.reverse}>\n          盤面反転\n        </button>\n        <button className=\"Copy\" data-clipboard-text={getAsString(kif)}>\n          棋譜コピー\n        </button>\n        <button className=\"ConnectToEngine\" onClick={this.engineOnClick}>\n          {engineButtonText}\n        </button>\n        <button className=\"Configuration\" onClick={this.showSetting}>\n          設定\n        </button>\n      </div>\n    )\n  }\n\n  private reverse = () => this.props.store!.gameState.reverse()\n\n  private kifHandler = (i: number) => () =>\n    this.props.store!.gameState.clickKif(i)\n\n  private engineOnClick: () => Promise<void> = async () => {\n    const { engineState } = this.props.store!\n    const { current, state } = engineState\n    if (!current || state !== Thinking) return await this.connectToEngine()\n    await engineState.stopThinking()\n  }\n\n  private connectToEngine = async () => {\n    const { displayState, config } = this.props.store!\n\n    // サーバー URL が設定されてなかったら、設定画面を出す\n    if (config.serverURL === '') {\n      console.log('here')\n      return await displayState.setMockupState(MockupServerSetting)\n    }\n\n    await displayState.setMockupState(MockupEngineControl)\n  }\n\n  private showSetting = async () =>\n    this.props.store!.displayState.setMockupState(MockupSetting)\n}\n","import { inject, observer } from 'mobx-react'\nimport React, { Component } from 'react'\nimport {\n  Fu0,\n  Gin0,\n  Hisha0,\n  Kaku0,\n  Kei0,\n  Kin0,\n  Kyou0,\n  Piece,\n} from '../../model/shogi/Piece'\nimport Point from '../../model/shogi/Point'\nimport { Turn } from '../../model/shogi/Turn'\nimport { Store } from '../../model/store/Store'\nimport './Captures.scss'\n\nexport interface Props {\n  store?: Store\n  isLeftSide: boolean\n  captures: number[]\n  isTurn: boolean\n}\n\n@inject('store')\n@observer\nexport default class Captures extends Component<Props> {\n  render(): JSX.Element {\n    const { captures, isLeftSide } = this.props\n    const className: string = 'Captures Captures' + Number(isLeftSide)\n    return (\n      <div className={className}>\n        {this.cells('Hisha', Hisha0, captures[6])}\n        {this.cells('Kaku', Kaku0, captures[5])}\n        {this.cells('Kin', Kin0, captures[4])}\n        {this.cells('Gin', Gin0, captures[3])}\n        {this.cells('Kei', Kei0, captures[2])}\n        {this.cells('Kyou', Kyou0, captures[1])}\n        {this.cells('Fu', Fu0, captures[0])}\n      </div>\n    )\n  }\n\n  cells(name: string, pieceId: Piece, count: number): JSX.Element {\n    const { store, isTurn, isLeftSide } = this.props\n    const { selected } = store!.gameState\n    const turn: Turn = store!.gameState.currentMove.pos.turn\n\n    const children = Array.from(Array(count).keys()).map(i => {\n      const selectedClass = isTurn ? getSelectedClass(selected, pieceId, i) : ''\n      const isTurnClass = isTurn ? 'Piece-Turn' : ''\n      const piece = isLeftSide ? -pieceId : pieceId\n      const sideNumber = Number(isLeftSide)\n      const captureClass = `Capture-${pieceId}${sideNumber}${count}${i + 1}`\n      const className = `Piece Piece-${piece} ${isTurnClass} ${selectedClass} ${captureClass}`\n      const key = `Cap-${sideNumber}-${name}-${i}`\n\n      const onClick = () => {\n        if (!isTurn) return\n        const clicked: number = turn * pieceId\n        store!.gameState.clickPiece({ clicked, row: -1, column: -1, i })\n      }\n      return <div key={key} className={className} onClick={onClick} />\n    })\n    const className = `Captures-Inner Captures-${name}`\n    return <div className={className}>{children}</div>\n  }\n}\n\nfunction getSelectedClass(\n  selected: Point | null,\n  pieceId: Piece,\n  index: number\n): string {\n  return !!selected &&\n  selected.piece &&\n  selected.row === -1 &&\n  selected.column === -1 &&\n  Math.abs(selected.piece) === pieceId /* TODO: すげー嫌 */ &&\n    selected.i === index\n    ? 'Piece-Selected'\n    : ''\n}\n","import { inject, observer } from 'mobx-react'\nimport React, { Component } from 'react'\nimport { Gote, Sente } from '../../model/shogi/Turn'\nimport { Store } from '../../model/store/Store'\nimport Buttons from './Buttons'\nimport Captures from './Captures'\nimport './LeftSide.scss'\n\nexport interface Props {\n  store?: Store\n}\n\n@inject('store')\n@observer\nexport default class LeftSide extends Component<Props> {\n  render() {\n    const { indexes, currentMove } = this.props.store!.gameState\n    const { turn, cap0, cap1 } = currentMove.pos\n    const caps: number[] = indexes[0] === -1 ? cap1 : cap0\n    const isTurn: boolean = indexes[0] === -1 ? turn === Gote : turn === Sente\n\n    return (\n      <div className=\"LeftSide\">\n        <Captures isLeftSide={true} captures={caps} isTurn={isTurn} />\n        <div className=\"LeftInfo\">\n          <div />\n          <Buttons />\n        </div>\n      </div>\n    )\n  }\n}\n","import { inject, observer } from 'mobx-react'\nimport React, { Component } from 'react'\nimport { intoView } from '../../lib/dom-handler/intoView'\nimport Branch from '../../model/kif/Branch'\nimport History, { isBranch, KifComponent } from '../../model/kif/History'\nimport { Move } from '../../model/kif/Move'\nimport { Store } from '../../model/store/Store'\nimport './Kif.scss'\n\ninterface Props {\n  store?: Store\n}\n\nconst CURRENT_KIF_ID = 'Move-Current'\n\n@inject('store')\n@observer\nexport default class Kif extends Component<Props> {\n  render() {\n    const { moves } = this.props.store!.gameState.kif.history\n    const elms: JSX.Element[] = this.renderKif(moves, 0)\n    return (\n      <div className=\"KifContainer\">\n        <div className=\"Kif-Inner\">{elms}</div>\n      </div>\n    )\n  }\n\n  renderKif(moves: KifComponent[], n: number): JSX.Element[] {\n    const nested = moves.map((kc: KifComponent, i: number) => {\n      if (isBranch(kc)) return this.renderBranch(kc, n + i)\n      return this.renderMove(kc, n + i)\n    })\n\n    // TODO: flatMap 使いてぇ\n    return Array.prototype.concat.apply([], nested)\n  }\n\n  renderBranch(b: Branch, n: number): JSX.Element[] {\n    const main: History = b.branches[b.index]\n    const [head, ...rest] = main.moves // head は必ず Move\n\n    const otherHeadsDom: JSX.Element[] = []\n    for (let i = 0; i < b.branches.length; i++) {\n      if (i === b.index) continue\n      const m: Move = b.branches[i].moves[0] as Move // head は必ず Move\n      const key: string = `${n}-${i}`\n      const txt: string = `-- ${m.str}`\n      const onClick = () => this.props.store!.gameState.clickKif(n, i)\n      otherHeadsDom.push(\n        <div key={key} className=\"Branch\" onClick={onClick}>\n          <span>{txt}</span>\n        </div>\n      )\n    }\n\n    const restDom = rest.length !== 0 ? this.renderKif(rest, n + 1) : []\n\n    return [this.renderMove(head as Move, n)]\n      .concat(otherHeadsDom)\n      .concat(restDom)\n  }\n\n  renderMove(m: Move, n: number): JSX.Element {\n    const { currentMove } = this.props.store!.gameState\n    const id = currentMove.index === n ? CURRENT_KIF_ID : undefined\n    const onClick = () => this.props.store!.gameState.clickKif(n)\n\n    return (\n      <div key={n} className=\"Move\" id={id} onClick={onClick}>\n        <div className=\"Number code\">{n + '.'}</div>\n        <div className=\"MoveText\">{m.str}</div>\n      </div>\n    )\n  }\n\n  // 自動スクロール\n  // TODO: スマホで使いにくいし自前実装した方がいいかも\n  componentDidUpdate() {\n    intoView(CURRENT_KIF_ID)\n  }\n}\n","// ただ scrollIntoView を呼ぶだけ\nexport function intoView(id: string): void {\n  const current: HTMLElement | null = document.getElementById(id)\n  if (current) (current as any).scrollIntoViewIfNeeded()\n}\n","import { inject, observer } from 'mobx-react'\nimport React, { Component } from 'react'\nimport { Gote, Sente } from '../../model/shogi/Turn'\nimport { Store } from '../../model/store/Store'\nimport Captures from './Captures'\nimport Kif from './Kif'\nimport './RightSide.scss'\n\nexport interface Props {\n  store?: Store\n}\n\n@inject('store')\n@observer\nexport default class RightSide extends Component<Props> {\n  render() {\n    const { indexes, currentMove } = this.props.store!.gameState\n    const { turn, cap0, cap1 } = currentMove.pos\n    const caps: number[] = indexes[0] === 9 ? cap1 : cap0\n    const isTurn: boolean = indexes[0] === 9 ? turn === Gote : turn === Sente\n\n    return (\n      <div className=\"RightSide\">\n        <div className=\"RightInfo\">\n          <Kif />\n        </div>\n        <Captures isLeftSide={false} captures={caps} isTurn={isTurn} />\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport Board from './Board'\nimport './BoardArea.scss'\nimport LeftSide from './LeftSide'\nimport RightSide from './RightSide'\n\nexport default class BoardArea extends Component {\n  render() {\n    return (\n      <div className=\"BoardArea\">\n        <LeftSide />\n        <Board />\n        <RightSide />\n      </div>\n    )\n  }\n}\n","import { inject, observer } from 'mobx-react'\nimport React, { Component } from 'react'\nimport { Thinking } from '../model/engine/State'\nimport { Store } from '../model/store/Store'\nimport './App.scss'\nimport SideInfo from './engine/info/SideInfo'\nimport BoardArea from './shogi/BoardArea'\n\ninterface Props {\n  store?: Store\n}\n\n@inject('store')\n@observer\nexport default class App extends Component<Props> {\n  render(): JSX.Element {\n    const { state } = this.props.store!.engineState\n    const isThinking: boolean = state === Thinking\n\n    const en = this.renderEngineInfo(isThinking)\n    const className = isThinking ? 'App App-SideInfo' : 'App App-BoardOnly'\n\n    return (\n      <div className={className}>\n        <BoardArea />\n        {en}\n      </div>\n    )\n  }\n\n  renderEngineInfo(isThinking: boolean): JSX.Element | undefined {\n    if (!isThinking) return\n    return <SideInfo />\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    )\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import Cookies, { CookieAttributes } from 'js-cookie'\nimport { action, observable } from 'mobx'\nimport { Config } from '../model/config/Config'\n\nexport class DefaultConfig implements Config {\n  @observable paintTargets: boolean\n  @observable serverURL: string\n  @observable saveToCookie: boolean\n\n  private readonly keys = {\n    paintTargets: 'paintTargets',\n    serverURL: 'serverURL',\n    saveToCookie: 'saveToCookie',\n  }\n\n  // 1年\n  private readonly expire: CookieAttributes = { expires: 86400 * 365 }\n\n  constructor() {\n    this.paintTargets = !(Cookies.get(this.keys.paintTargets) === 'false')\n    this.serverURL = Cookies.get(this.keys.serverURL) || ''\n    this.saveToCookie = Cookies.get(this.keys.saveToCookie) === 'true'\n  }\n\n  @action\n  async setPaintTargets(b: boolean): Promise<void> {\n    this.paintTargets = b\n    if (this.saveToCookie)\n      Cookies.set(this.keys.paintTargets, String(b), this.expire)\n  }\n\n  @action\n  async setServerURL(s: string): Promise<void> {\n    this.serverURL = s\n    if (this.saveToCookie) Cookies.set(this.keys.serverURL, s, this.expire)\n  }\n\n  @action\n  async setSaveToCookie(b: boolean): Promise<void> {\n    this.saveToCookie = b\n\n    if (this.saveToCookie) {\n      const { saveToCookie, serverURL, paintTargets } = this.keys\n      const expire = this.expire\n      Cookies.set(saveToCookie, String(b), expire)\n      Cookies.set(serverURL, this.serverURL, expire)\n      Cookies.set(paintTargets, String(this.paintTargets), expire)\n      return\n    }\n\n    // false なら削除する\n    Object.values(this.keys).forEach(key => Cookies.remove(key))\n  }\n}\n","import { action, observable } from 'mobx'\nimport { DisplayState } from '../model/display/DisplayState'\nimport { MockupHidden, MockupState } from '../model/display/MockupState'\n\nexport class DefaultDisplayState implements DisplayState {\n  @observable mockup: MockupState\n\n  constructor() {\n    this.mockup = MockupHidden\n  }\n\n  @action\n  async setMockupState(state: MockupState): Promise<void> {\n    this.mockup = state\n  }\n\n  @action\n  async closeMockup(): Promise<void> {\n    this.mockup = MockupHidden\n  }\n}\n","import { Gyoku0, Gyoku1, Piece } from '../../model/shogi/Piece'\n\n/**\n * 持ち駒を1つ増やす\n * @param cap number[] 持ち駒を表す配列。詳細は Position.ts\n * @param p Piece 増やしたい駒\n */\nexport function increaseCaptures(cap: number[], p: Piece): number[] {\n  return handle(cap, Math.abs(p), i => i + 1)\n}\n\n/**\n * 持ち駒を1つ減らす\n * @param cap number[] 持ち駒を表す配列。詳細は Position.ts\n * @param p Piece 減らしたい駒\n */\nexport function decreaseCaptures(cap: number[], p: Piece): number[] {\n  return handle(cap, Math.abs(p), i => i - 1)\n}\n\nfunction handle(cap: number[], p: Piece, f: (i: number) => number): number[] {\n  if (p === Gyoku0 || p === Gyoku1 || p > 10)\n    throw new Error('Piece ID of Captures must not be Gyoku or over 10.')\n\n  return cap.map((count, index) => {\n    // 駒IDが一致しなければそのまま\n    // p は Math.abs() を通っている\n    if (index !== p - 1) return count\n\n    const v = f(count)\n    if (v < 0)\n      throw new Error(\n        'Invalid function call. Captures must not contain negative value.'\n      )\n\n    return v\n  })\n}\n","import { MoveProps } from '../../model/events/MoveProps'\nimport { Empty, Piece } from '../../model/shogi/Piece'\nimport { Position } from '../../model/shogi/Position'\nimport { Gote, Sente, Turn } from '../../model/shogi/Turn'\nimport { decreaseCaptures, increaseCaptures } from './captures'\nimport { demote } from './piece'\n\nexport function move(p: MoveProps): Position {\n  // 持ち駒を更新する\n  type CaptureHandler = (cap: number[], turn: Turn) => number[]\n  const handleCaptures: CaptureHandler = (cap: number[], turn: Turn) => {\n    // 手番ではない場合、何もしない\n    if (p.pos.turn !== turn) return cap.slice()\n\n    // 移動先が相手の駒なら持ち駒を増やす\n    const d: Piece = p.pos.pos[p.dest.row][p.dest.column]\n    if (d * turn < 0) return increaseCaptures(cap, demote(d))\n\n    // 移動元が持ち駒なら減らす\n    if (p.source.row === -1 && p.source.column === -1)\n      return decreaseCaptures(cap, p.piece)\n\n    return cap.slice()\n  }\n\n  const updatedCap0: number[] = handleCaptures(p.pos.cap0, Sente)\n  const updatedCap1: number[] = handleCaptures(p.pos.cap1, Gote)\n\n  return {\n    pos: moveOnBoard(p),\n    cap0: updatedCap0,\n    cap1: updatedCap1,\n    turn: -p.pos.turn as Turn,\n    moveCount: p.pos.moveCount + 1,\n  }\n}\n\nexport function moveBoardOnly(p: MoveProps): Position {\n  return {\n    pos: moveOnBoard(p),\n    cap0: p.pos.cap0.slice(),\n    cap1: p.pos.cap1.slice(),\n    turn: -p.pos.turn as Turn,\n    moveCount: p.pos.moveCount + 1,\n  }\n}\n\nfunction moveOnBoard(p: MoveProps): number[][] {\n  return p.pos.pos.map((line, r) =>\n    line.map((piece, c) => {\n      // 移動前の位置なら空マスに\n      if (p.source.row === r && p.source.column === c) return Empty\n\n      // 移動先の位置なら更新\n      if (p.dest.row === r && p.dest.column === c) return p.piece\n\n      return piece\n    })\n  )\n}\n","import { action, observable } from 'mobx'\n\ninterface Option<T> {\n  readonly name: string\n  setValue(value: T): void\n}\n\nexport class Button implements Option<any> {\n  readonly name: string\n  constructor(name: string) {\n    this.name = name\n  }\n\n  setValue(_: any): void {}\n}\n\nexport class Check implements Option<boolean> {\n  @observable value: boolean\n  readonly name: string\n  readonly default: boolean\n  constructor(name: string, value: boolean, initial: boolean) {\n    this.name = name\n    this.value = value\n    this.default = initial\n  }\n\n  @action setValue(value: boolean): void {\n    this.value = value\n  }\n}\n\nexport class Range implements Option<string> {\n  @observable value: number\n  @observable inputValue: string\n  readonly name: string\n  readonly default: number\n  readonly min: number\n  readonly max: number\n  constructor(\n    name: string,\n    value: number,\n    initial: number,\n    min: number,\n    max: number\n  ) {\n    this.name = name\n    this.value = value\n    this.inputValue = value.toString()\n    this.default = initial\n    this.min = min\n    this.max = max\n  }\n\n  @action setValue(value: string): void {\n    this.inputValue = value\n    const n: number = Number(this.inputValue)\n    if (Number.isNaN(n) || n < this.min || n > this.max) return\n    this.value = n\n  }\n}\n\nexport class Select implements Option<string> {\n  @observable value: string\n  readonly name: string\n  readonly default: string\n  readonly vars: string[]\n  constructor(name: string, value: string, initial: string, vars: string[]) {\n    this.name = name\n    this.value = value\n    this.default = initial\n    this.vars = vars\n  }\n\n  @action setValue(value: string) {\n    this.value = value\n  }\n}\n\nexport class Text implements Option<string> {\n  @observable value: string\n  readonly name: string\n  readonly default: string\n\n  constructor(name: string, value: string, initial: string) {\n    this.name = name\n    this.value = value\n    this.default = initial\n  }\n\n  @action setValue(value: string) {\n    this.value = value\n  }\n}\n\nexport interface Options {\n  buttons: Map<string, Button>\n  checks: Map<string, Check>\n  ranges: Map<string, Range>\n  selects: Map<string, Select>\n  texts: Map<string, Text>\n}\n","import axios from 'axios'\nimport debounce from 'lodash.debounce'\nimport shortid from 'shortid'\nimport { move } from '../lib/game-handler/position'\nimport { Info } from '../model/engine/Info'\nimport {\n  Button,\n  Check,\n  Options,\n  Range,\n  Select,\n  Text,\n} from '../model/engine/Optoin'\nimport { MoveProps } from '../model/events/MoveProps'\nimport { Move } from '../model/kif/Move'\nimport { ResponseInfo } from '../model/response/ResponseInfo'\nimport { Empty } from '../model/shogi/Piece'\nimport { Position } from '../model/shogi/Position'\n\nconst DEBOUNCE_MILLIS = 1000\n\nexport class ShogiBoardClient {\n  private _engineName?: string\n  private _serverURL?: string\n\n  private readonly engineNameKey = 'key'\n\n  constructor(engineName?: string, serverURL?: string) {\n    this._engineName = engineName\n    this._serverURL = serverURL\n  }\n\n  set engineName(name: string) {\n    this._engineName = name\n  }\n\n  get engineName(): string {\n    if (!this._engineName) throw new Error('engineName is not defined.')\n    return this._engineName\n  }\n\n  set serverURL(url: string) {\n    this._serverURL = url\n  }\n\n  get serverURL(): string {\n    if (!this._serverURL) throw new Error('serverURL is not defined. serverURL')\n    return this._serverURL\n  }\n\n  async init(): Promise<string[]> {\n    const url = await this.buildUrl('init', false)\n    const res = await axios.post(url)\n    return res.data\n  }\n\n  async connect(): Promise<void> {\n    return await this.post('connect')\n  }\n\n  async close(): Promise<void> {\n    return await this.post('close')\n  }\n\n  async start(): Promise<void> {\n    return await this.post('start')\n  }\n\n  async stop(): Promise<void> {\n    return await this.post('stop')\n  }\n\n  async getOptions(): Promise<Options> {\n    // res は Options と言いつつ、中身は Map じゃなくて object\n    // TODO: データの持ち方考える\n    const res: Options = await this.get('options/get')\n    const m: Options = {\n      buttons: new Map(),\n      checks: new Map(),\n      ranges: new Map(),\n      selects: new Map(),\n      texts: new Map(),\n    }\n    Object.values(res.buttons).forEach(b =>\n      m.buttons.set(b.name, new Button(b.name))\n    )\n    Object.values(res.checks).forEach(c =>\n      m.checks.set(c.name, new Check(c.name, c.value, c.default))\n    )\n    Object.values(res.ranges).forEach(r =>\n      m.ranges.set(r.name, new Range(r.name, r.value, r.default, r.min, r.max))\n    )\n    Object.values(res.selects).forEach(s =>\n      m.selects.set(s.name, new Select(s.name, s.value, s.default, s.vars))\n    )\n    Object.values(res.texts).forEach(t =>\n      m.texts.set(t.name, new Text(t.name, t.value, t.default))\n    )\n    return m\n  }\n\n  async updateButton(btn: Button): Promise<void> {\n    return await this.post('options/update/button', btn)\n  }\n\n  async updateCheck(chk: Check): Promise<void> {\n    return await this.post('options/update/check', chk)\n  }\n\n  updateRange = debounce(async (rng: Range): Promise<void> => {\n    return await this.post('options/update/range', rng)\n  }, DEBOUNCE_MILLIS)\n\n  async updateSelect(sel: Select): Promise<void> {\n    return await this.post('options/update/select', sel)\n  }\n\n  updateText = debounce(async (txt: Text): Promise<void> => {\n    return await this.post('options/update/text', txt)\n  }, DEBOUNCE_MILLIS)\n\n  async getResult(current: Move): Promise<Info[]> {\n    const resp: { number: ResponseInfo } = await this.get('result/get')\n    let p: Position = current.pos\n\n    // レスポンスのキーでソートされた ResponseInfo を取り出し、\n    // move メソッドで局面を動かしながら Info を生成していく\n    return Object.entries(resp)\n      .sort((a, b) => {\n        if (a[0] < b[0]) return -1\n        if (a[0] > b[0]) return 1\n        return 0\n      })\n      .map(([_, info]) => {\n        let i: number = 0\n        p = current.pos\n        const moves: MoveProps[] = []\n\n        try {\n          while (i < info.moves.length) {\n            const m = info.moves[i]\n            const source = { row: m.source!.row, column: m.source!.column }\n            const dest = { row: m.dest!.row, column: m.dest!.column }\n            const piece = m.pieceId || p.pos[source.row][source.column]\n            if (piece === Empty) break\n            const mp: MoveProps = {\n              pos: p,\n              source,\n              dest,\n              piece,\n              promote: m.isPromoted,\n            }\n            moves.push(mp)\n            p = move(mp)\n            i = (i + 1) | 0\n          }\n        } catch (e) {\n          // ズレは出るのでエラーは握りつぶす\n          // console.error(i, p, e)\n        }\n\n        const values = new Map()\n        Object.entries(info.values).forEach(([k, v]) => values.set(k, v))\n\n        return {\n          id: shortid.generate(),\n          values, // 一旦捨てる\n          score: info.score,\n          moves,\n        }\n      })\n  }\n\n  async setPosition(p: Position): Promise<void> {\n    const pos: Position = {\n      pos: p.pos.map(r => r.slice().reverse()),\n      cap0: p.cap0,\n      cap1: p.cap1,\n      turn: p.turn,\n      moveCount: p.moveCount,\n    }\n    return await this.post('position/set', pos)\n  }\n\n  private async get<T>(path: string): Promise<T> {\n    const url = await this.buildUrl(path, true)\n    const res = await axios.get(url)\n    return res.data\n  }\n\n  private async post(path: string, body?: object): Promise<void> {\n    const url = await this.buildUrl(path, true)\n    await axios.post(url, body, {\n      headers: { 'Content-Type': 'application/json' },\n    })\n  }\n\n  private async buildUrl(path: string, withName: boolean) {\n    const e = (s: string) => encodeURIComponent(s)\n    const query = withName ? `?${this.engineNameKey}=${e(this.engineName)}` : ''\n    return `${this.serverURL}/${path}${query}`\n  }\n\n  private e(s: any): string {\n    return encodeURIComponent(s)\n  }\n}\n","import { action, computed, observable } from 'mobx'\nimport { ShogiBoardClient } from '../infrastructure/ShogiBoardClient'\nimport { EngineState } from '../model/engine/EngineState'\nimport { Info } from '../model/engine/Info'\nimport { Options } from '../model/engine/Optoin'\nimport {\n  Connected,\n  Connecting,\n  NotConnected,\n  StandBy,\n  State,\n  Thinking,\n} from '../model/engine/State'\nimport { Position } from '../model/shogi/Position'\n\nexport class DefaultEngineState implements EngineState {\n  @observable names: string[]\n  @observable current: string | null\n  @observable options: Options | null\n  @observable state: State\n  @observable result: Info[] | null\n  @observable serverURL: string\n\n  constructor() {\n    this.names = []\n    this.current = null\n    this.options = null\n    this.state = NotConnected\n    this.result = null\n    this.serverURL = ''\n  }\n\n  @computed get sbclient(): ShogiBoardClient {\n    return new ShogiBoardClient(this.current || '', this.serverURL)\n  }\n\n  @action async setNames(names: string[]): Promise<void> {\n    this.names = names\n  }\n\n  @action async setState(state: State): Promise<void> {\n    this.state = state\n  }\n\n  @action async connect(name: string): Promise<void> {\n    if (!this.names.includes(name))\n      throw new Error('Unknown engine name. name=' + name)\n\n    this.current = name\n    try {\n      this.setState(Connecting)\n      await this.sbclient.connect()\n      this.options = await this.sbclient.getOptions()\n      this.setState(Connected)\n    } catch (e) {\n      console.error('Failed to connect', e)\n      alert('接続に失敗しました') // TODO\n      await this.disconnect()\n    }\n  }\n\n  @action async disconnect(): Promise<void> {\n    try {\n      await this.sbclient.close()\n    } catch (e) {\n      console.error('接続解除に失敗しました', e)\n    } finally {\n      this.current = null\n      this.options = null\n      this.state = NotConnected\n    }\n  }\n\n  @action async startThinking(): Promise<void> {\n    if (!this.current)\n      throw new Error('[startThinking] current engine is not set')\n\n    await this.sbclient.start()\n    await this.setState(Thinking)\n  }\n\n  @action async stopThinking(): Promise<void> {\n    if (!this.current)\n      throw new Error('[stopThinking] current engine is not set')\n    if (this.state !== Thinking) return\n\n    await this.sbclient.stop()\n    await this.setState(StandBy)\n  }\n\n  @action async setResult(i: Info[]): Promise<void> {\n    this.result = i\n  }\n\n  async updatePosition(p: Position): Promise<void> {\n    await this.sbclient.setPosition(p)\n  }\n\n  @action async setServerURL(s: string): Promise<void> {\n    this.serverURL = s\n  }\n}\n","import Branch from '../../model/kif/Branch'\nimport History, { isBranch, KifComponent } from '../../model/kif/History'\nimport Kif from '../../model/kif/Kif'\n\n/**\n * 現在局面を更新した新しい棋譜を返す\n * @param k Kif 更新したい棋譜\n * @param x number 現在局面にしたい手数\n * @param y number | undefined 分岐を切り替える場合のみ、分岐のインデックス\n */\nexport function changeIndex(k: Kif, x: number, y?: number): Kif {\n  return {\n    meta: k.meta,\n    history: changeHistory(k.history, x, y),\n  }\n}\n\n// TODO: Move にインデックスを入れたので、少しシンプルにできる\nfunction changeHistory(h: History, x: number, y?: number): History {\n  const lastIndex: number = h.moves.length - 1\n  const last: KifComponent = h.moves[lastIndex]\n  const init: KifComponent[] = h.moves.slice(0, lastIndex)\n\n  const xPassesIfBranch: number = x <= lastIndex ? 0 : x - lastIndex\n\n  const moves: KifComponent[] = isBranch(last)\n    ? init.concat(changeBranch(last, xPassesIfBranch, y))\n    : h.moves.slice()\n\n  const index: number = x <= lastIndex ? x : lastIndex\n\n  return { moves, index }\n}\n\nfunction changeBranch(b: Branch, x: number, y?: number): Branch {\n  const index = x === 0 && y !== undefined ? y : b.index\n\n  if (x === 0)\n    return {\n      branches: b.branches.map(h => changeHistory(h, 0)),\n      index,\n    }\n\n  const branches = b.branches.map((h: History, i: number) =>\n    i === b.index ? changeHistory(h, x, y) : h\n  )\n\n  return { branches, index }\n}\n","import Branch from '../../model/kif/Branch'\nimport History, { isBranch, KifComponent } from '../../model/kif/History'\nimport Kif from '../../model/kif/Kif'\nimport { Move } from '../../model/kif/Move'\n\n/**\n * 棋譜に新しいMoveを追加する\n * @param old Kif\n * @param m Move 追加する一手\n */\nexport default function(old: Kif, m: Move): Kif {\n  return {\n    meta: old.meta,\n    history: pushToHistory(old.history, m),\n  }\n}\n\nfunction pushToHistory(h: History, m: Move): History {\n  const lastIsCurrent: boolean = h.index === h.moves.length - 1\n  const last: KifComponent = h.moves[h.index]\n\n  if (lastIsCurrent && isBranch(last))\n    return {\n      moves: h.moves\n        .slice(0, h.moves.length - 1)\n        .concat(pushToBranch(last, m, true)),\n      index: h.index,\n    }\n\n  const nextIndex: number = h.index + 1\n\n  if (lastIsCurrent)\n    return {\n      moves: h.moves.concat(m),\n      index: nextIndex,\n    }\n\n  const next: KifComponent = h.moves[nextIndex]\n  const init: KifComponent[] = h.moves.slice(0, nextIndex)\n\n  if (isBranch(next))\n    return {\n      moves: init.concat(pushToBranch(next, m, false)),\n      index: nextIndex,\n    }\n\n  // 追加しようとしてる Move が次と一緒ならインデックスだけ更新\n  if (moveEquals(m, next))\n    return {\n      moves: h.moves.slice(),\n      index: nextIndex,\n    }\n\n  const tail: KifComponent[] = h.moves.slice(nextIndex, h.moves.length)\n  return {\n    moves: init.concat(createBranch(tail, m)),\n    index: nextIndex,\n  }\n}\n\nfunction pushToBranch(b: Branch, m: Move, recursive: boolean): Branch {\n  // 分岐の先頭は現在表示局面ではないので、再帰的に更新する\n  if (recursive)\n    return {\n      branches: b.branches.map((h: History, i: number) => {\n        if (i === b.index) return pushToHistory(h, m)\n        return h\n      }),\n      index: b.index,\n    }\n\n  const indexOfNewMove: number = b.branches.findIndex(h =>\n    moveEquals(h.moves[0] as Move, m)\n  )\n\n  // 追加しようとしてる Move がすでに分岐の先頭にある\n  if (indexOfNewMove !== -1)\n    return {\n      branches: b.branches.slice(),\n      index: indexOfNewMove,\n    }\n\n  return {\n    branches: b.branches.concat(toHistory([m])),\n    index: b.branches.length,\n  }\n}\n\nfunction createBranch(tail: KifComponent[], m: Move): Branch {\n  return {\n    branches: [toHistory(tail), toHistory([m])],\n    index: 1,\n  }\n}\n\nfunction toHistory(c: KifComponent[]): History {\n  return { moves: c, index: 0 }\n}\n\nfunction moveEquals(a: Move, b: Move): boolean {\n  return (\n    a.index === b.index &&\n    a.source.row === b.source.row &&\n    a.source.column === b.source.column &&\n    a.dest.row === b.dest.row &&\n    a.dest.column === b.dest.column &&\n    a.piece === b.piece &&\n    a.promote === b.promote\n  )\n}\n","import { Piece, Empty } from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\n\nexport default function(\n  pos: Piece[][],\n  invalidRows?: number[],\n  invalidColumns?: number[]\n): Point[] {\n  const points: Point[] = []\n\n  for (let r = 0; r < 9; r++) {\n    if (invalidRows && invalidRows.includes(r)) continue\n\n    for (let c = 0; c < 9; c++) {\n      const columnIsInvalid = invalidColumns && invalidColumns.includes(c)\n      if (columnIsInvalid || pos[r][c] !== Empty) continue\n      points.push({ row: r, column: c })\n    }\n  }\n\n  return points\n}\n","import { Piece } from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\n\nexport default function(pos: Piece[][], nexts: number[][], p: Piece): Point[] {\n  const points: Point[] = []\n\n  for (let i = 0; i < nexts.length; i++) {\n    const row = nexts[i][0]\n    const column = nexts[i][1]\n    if (\n      row >= 0 &&\n      row <= 8 &&\n      column >= 0 &&\n      column <= 8 &&\n      pos[row][column] * p <= 0\n    )\n      points.push({ row, column })\n  }\n\n  return points\n}\n","import { Piece } from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\n\nexport default function(\n  pos: Piece[][],\n  row: number,\n  column: number,\n  piece: Piece,\n  points: Point[],\n  rowDiff: number,\n  columnDiff: number\n): void {\n  while (0 <= row && row <= 8 && 0 <= column && column <= 8) {\n    const target: Piece = pos[row][column]\n    if (target * piece > 0) break\n    points.push({ row, column })\n    if (target * piece < 0) break\n    row += rowDiff\n    column += columnDiff\n  }\n}\n","import { Hisha0, Hisha1 } from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\nimport { Position } from '../../../model/shogi/Position'\nimport { comp } from '../utils/algorithm'\nimport getEmpties from '../utils/getEmpties'\nimport getWithDiff from '../utils/getWithDiff'\n\nexport default function(pos: Position, p: Point): Point[] {\n  if (!p.piece || (p.piece !== Hisha0 && p.piece !== Hisha1))\n    throw new Error('Called validation for hisha, but piece id was not hisha.')\n\n  if (p.row === -1 && p.column === -1) return getEmpties(pos.pos)\n\n  const diffList = [\n    [-1, 0],\n    [0, -1],\n    [0, 1],\n    [1, 0],\n  ]\n  const points: Point[] = []\n\n  for (let i = 0; i < diffList.length; i++) {\n    getWithDiff(\n      pos.pos,\n      p.row + diffList[i][0],\n      p.column + diffList[i][1],\n      p.piece,\n      points,\n      diffList[i][0],\n      diffList[i][1]\n    )\n  }\n\n  points.sort(comp)\n  return points\n}\n","import { Kaku0, Kaku1 } from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\nimport { Position } from '../../../model/shogi/Position'\nimport { comp } from '../utils/algorithm'\nimport getEmpties from '../utils/getEmpties'\nimport getWithDiff from '../utils/getWithDiff'\n\nexport default function(pos: Position, p: Point): Point[] {\n  if (!p.piece || (p.piece !== Kaku0 && p.piece !== Kaku1))\n    throw new Error('Called validation for kaku, but piece id was not kaku.')\n\n  if (p.row === -1 && p.column === -1) return getEmpties(pos.pos)\n\n  const diffList = [\n    [-1, -1],\n    [-1, 1],\n    [1, -1],\n    [1, 1],\n  ]\n  const points: Point[] = []\n\n  for (let i = 0; i < diffList.length; i++) {\n    getWithDiff(\n      pos.pos,\n      p.row + diffList[i][0],\n      p.column + diffList[i][1],\n      p.piece,\n      points,\n      diffList[i][0],\n      diffList[i][1]\n    )\n  }\n\n  points.sort(comp)\n  return points\n}\n","import {\n  Empty,\n  Fu0,\n  Fu1,\n  Gin0,\n  Gin1,\n  Gyoku0,\n  Gyoku1,\n  Hisha0,\n  Hisha1,\n  Kaku0,\n  Kaku1,\n  Kei0,\n  Kei1,\n  Kin0,\n  Kin1,\n  Kyou0,\n  Kyou1,\n  NariGin0,\n  NariGin1,\n  NariKei0,\n  NariKei1,\n  NariKyou0,\n  NariKyou1,\n  Ryu0,\n  Ryu1,\n  To0,\n  To1,\n  Uma0,\n  Uma1,\n} from '../../model/shogi/Piece'\nimport Point from '../../model/shogi/Point'\nimport { Position } from '../../model/shogi/Position'\nimport fu from './pieces/fu'\nimport gin from './pieces/gin'\nimport gyoku from './pieces/gyoku'\nimport hisha from './pieces/hisha'\nimport kaku from './pieces/kaku'\nimport kei from './pieces/kei'\nimport kin from './pieces/kin'\nimport kyou from './pieces/kyou'\nimport ryu from './pieces/ryu'\nimport uma from './pieces/uma'\n\n/**\n * 駒を動かせる場所を取得する\n * @param pos Position 駒の配置\n * @param point Point 動ける場所を取得したい駒の位置\n */\nexport default function(pos: Position, point: Point): Point[] {\n  const piece = point.piece\n\n  if (piece === Empty)\n    throw new Error('Cannot get targets to move for empty cell.')\n  if (piece === Fu0 || piece === Fu1) return fu(pos, point)\n  if (piece === Kyou0 || piece === Kyou1) return kyou(pos, point)\n  if (piece === Kei0 || piece === Kei1) return kei(pos, point)\n  if (piece === Gin0 || piece === Gin1) return gin(pos, point)\n  if (\n    piece === Kin0 ||\n    piece === Kin1 ||\n    piece === To0 ||\n    piece === To1 ||\n    piece === NariKyou0 ||\n    piece === NariKyou1 ||\n    piece === NariKei0 ||\n    piece === NariKei1 ||\n    piece === NariGin0 ||\n    piece === NariGin1\n  )\n    return kin(pos, point)\n  if (piece === Kaku0 || piece === Kaku1) return kaku(pos, point)\n  if (piece === Hisha0 || piece === Hisha1) return hisha(pos, point)\n  if (piece === Gyoku0 || piece === Gyoku1) return gyoku(pos, point)\n  if (piece === Uma0 || piece === Uma1) return uma(pos, point)\n  if (piece === Ryu0 || piece === Ryu1) return ryu(pos, point)\n\n  throw new Error('Could not get targets to move. Got invalid piece ID')\n}\n","import { Fu0, Fu1 } from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\nimport { Position } from '../../../model/shogi/Position'\nimport getEmpties from '../utils/getEmpties'\n\nexport default function(pos: Position, p: Point): Point[] {\n  if (!p.piece || (p.piece !== Fu0 && p.piece !== Fu1))\n    throw new Error('Called validation for fu, but piece id was not fu.')\n\n  // 二歩チェックのため、すでに歩がある列を入れておく\n  const columnsOfContainingFu: number[] = []\n  for (let col = 0; col < 9; col++) {\n    for (let row = 0; row < 9; row++) {\n      if (pos.pos[row][col] === p.piece) {\n        columnsOfContainingFu.push(col)\n        break\n      }\n    }\n  }\n\n  if (p.row === -1 && p.column === -1) {\n    const invalidRow: number = p.piece > 0 ? 0 : 8\n    return getEmpties(pos.pos, [invalidRow], columnsOfContainingFu)\n  }\n\n  const nextRow: number = p.piece > 0 ? p.row - 1 : p.row + 1\n\n  // 盤外か味方の駒ならなし\n  if (nextRow < 0 || nextRow > 8 || pos.pos[nextRow][p.column] * p.piece > 0)\n    return []\n\n  // 空マスか、相手の駒ならOK\n  return [{ row: nextRow, column: p.column }]\n}\n","import { Kyou0, Kyou1 } from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\nimport { Position } from '../../../model/shogi/Position'\nimport getEmpties from '../utils/getEmpties'\nimport getWithDiff from '../utils/getWithDiff'\n\nexport default function(pos: Position, p: Point): Point[] {\n  if (!p.piece || (p.piece !== Kyou0 && p.piece !== Kyou1))\n    throw new Error('Called validation for kyou, but piece id was not kyou.')\n\n  if (p.row === -1 && p.column === -1) {\n    const invalidRow: number = p.piece > 0 ? 0 : 8\n    return getEmpties(pos.pos, [invalidRow])\n  }\n\n  const diff = p.piece > 0 ? -1 : 1\n  const points: Point[] = []\n  getWithDiff(pos.pos, p.row + diff, p.column, p.piece, points, diff, 0)\n  if (p.piece > 0) points.reverse()\n  return points\n}\n","import { Kei0, Kei1 } from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\nimport { Position } from '../../../model/shogi/Position'\nimport getEmpties from '../utils/getEmpties'\nimport getFromNexts from '../utils/getFromNexts'\n\nexport default function(pos: Position, p: Point): Point[] {\n  if (!p.piece || (p.piece !== Kei0 && p.piece !== Kei1))\n    throw new Error('Called validation for kei, but piece id was not kei.')\n\n  if (p.row === -1 && p.column === -1) {\n    const invalidRow1: number = p.piece > 0 ? 0 : 8\n    const invalidRow2: number = p.piece > 0 ? invalidRow1 + 1 : invalidRow1 - 1\n    return getEmpties(pos.pos, [invalidRow1, invalidRow2])\n  }\n\n  const nextRow: number = p.piece > 0 ? p.row - 2 : p.row + 2\n  if (nextRow < 0 || nextRow > 8) return []\n  const nexts: number[][] = [\n    [nextRow, p.column - 1],\n    [nextRow, p.column + 1],\n  ]\n  return getFromNexts(pos.pos, nexts, p.piece)\n}\n","import { Gin0, Gin1 } from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\nimport { Position } from '../../../model/shogi/Position'\nimport getEmpties from '../utils/getEmpties'\nimport getFromNexts from '../utils/getFromNexts'\n\nexport default function(pos: Position, p: Point): Point[] {\n  if (!p.piece || (p.piece !== Gin0 && p.piece !== Gin1))\n    throw new Error('Called validation for gin, but piece id was not gin.')\n\n  if (p.row === -1 && p.column === -1) return getEmpties(pos.pos)\n\n  const nexts: number[][] =\n    p.piece > 0\n      ? [\n          [p.row - 1, p.column - 1],\n          [p.row - 1, p.column],\n          [p.row - 1, p.column + 1],\n          [p.row + 1, p.column - 1],\n          [p.row + 1, p.column + 1],\n        ]\n      : [\n          [p.row - 1, p.column - 1],\n          [p.row - 1, p.column + 1],\n          [p.row + 1, p.column - 1],\n          [p.row + 1, p.column],\n          [p.row + 1, p.column + 1],\n        ]\n\n  return getFromNexts(pos.pos, nexts, p.piece)\n}\n","import {\n  Kin0,\n  Kin1,\n  NariGin0,\n  NariGin1,\n  NariKei0,\n  NariKei1,\n  NariKyou0,\n  NariKyou1,\n  To0,\n  To1,\n} from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\nimport { Position } from '../../../model/shogi/Position'\nimport getEmpties from '../utils/getEmpties'\nimport getFromNexts from '../utils/getFromNexts'\n\nexport default function(pos: Position, p: Point): Point[] {\n  if (\n    !p.piece ||\n    (p.piece !== Kin0 &&\n      p.piece !== Kin1 &&\n      p.piece !== To0 &&\n      p.piece !== To1 &&\n      p.piece !== NariKyou0 &&\n      p.piece !== NariKyou1 &&\n      p.piece !== NariKei0 &&\n      p.piece !== NariKei1 &&\n      p.piece !== NariGin0 &&\n      p.piece !== NariGin1)\n  )\n    throw new Error(\n      'Called validation for kin(or promoted piece moves as same as kin), but piece id was not as expected.'\n    )\n\n  if (p.row === -1 && p.column === -1) return getEmpties(pos.pos)\n\n  const nexts: number[][] =\n    p.piece > 0\n      ? [\n          [p.row - 1, p.column - 1],\n          [p.row - 1, p.column],\n          [p.row - 1, p.column + 1],\n          [p.row, p.column - 1],\n          [p.row, p.column + 1],\n          [p.row + 1, p.column],\n        ]\n      : [\n          [p.row - 1, p.column],\n          [p.row, p.column - 1],\n          [p.row, p.column + 1],\n          [p.row + 1, p.column - 1],\n          [p.row + 1, p.column],\n          [p.row + 1, p.column + 1],\n        ]\n\n  return getFromNexts(pos.pos, nexts, p.piece)\n}\n","import { Gyoku0, Gyoku1 } from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\nimport { Position } from '../../../model/shogi/Position'\nimport getFromNexts from '../utils/getFromNexts'\n\nexport default function(pos: Position, p: Point): Point[] {\n  if (!p.piece || (p.piece !== Gyoku0 && p.piece !== Gyoku1))\n    throw new Error('Called validation for gyoku, but piece id was not gyoku.')\n\n  if (p.row === -1 && p.column === -1)\n    throw new Error('Gyoku must not be captured')\n\n  const nexts: number[][] = [\n    [p.row - 1, p.column - 1],\n    [p.row - 1, p.column],\n    [p.row - 1, p.column + 1],\n    [p.row, p.column - 1],\n    [p.row, p.column + 1],\n    [p.row + 1, p.column - 1],\n    [p.row + 1, p.column],\n    [p.row + 1, p.column + 1],\n  ]\n\n  return getFromNexts(pos.pos, nexts, p.piece)\n}\n","import { Uma0, Uma1 } from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\nimport { Position } from '../../../model/shogi/Position'\nimport { demote } from '../../game-handler/piece'\nimport { comp } from '../utils/algorithm'\nimport getFromNexts from '../utils/getFromNexts'\nimport kaku from './kaku'\n\nexport default function(pos: Position, p: Point): Point[] {\n  if (!p.piece || (p.piece !== Uma0 && p.piece !== Uma1))\n    throw new Error('Called validation for uma, but piece id was not uma.')\n\n  if (p.row === -1 || p.column === -1)\n    throw new Error('Uma must not be captured')\n\n  const nexts = [\n    [p.row - 1, p.column],\n    [p.row, p.column - 1],\n    [p.row, p.column + 1],\n    [p.row + 1, p.column],\n  ]\n\n  const kakuPoint = { row: p.row, column: p.column, piece: demote(p.piece) }\n  const kakuTargets = kaku(pos, kakuPoint)\n  const targets = getFromNexts(pos.pos, nexts, p.piece).concat(kakuTargets)\n  targets.sort(comp)\n  return targets\n}\n","import { Ryu0, Ryu1 } from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\nimport { Position } from '../../../model/shogi/Position'\nimport { demote } from '../../game-handler/piece'\nimport { comp } from '../utils/algorithm'\nimport getFromNexts from '../utils/getFromNexts'\nimport hisha from './hisha'\n\nexport default function(pos: Position, p: Point): Point[] {\n  if (!p.piece || (p.piece !== Ryu0 && p.piece !== Ryu1))\n    throw new Error('Called validation for ryu, but piece id was not ryu.')\n\n  if (p.row === -1 || p.column === -1)\n    throw new Error('Ryu must not be captured')\n\n  const nexts = [\n    [p.row - 1, p.column - 1],\n    [p.row - 1, p.column + 1],\n    [p.row + 1, p.column - 1],\n    [p.row + 1, p.column + 1],\n  ]\n\n  const hishaPoint = { row: p.row, column: p.column, piece: demote(p.piece) }\n  const hishaTargets = hisha(pos, hishaPoint)\n  const targets = getFromNexts(pos.pos, nexts, p.piece).concat(hishaTargets)\n  targets.sort(comp)\n  return targets\n}\n","import { Gyoku0, Piece } from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\nimport { Turn } from '../../../model/shogi/Turn'\n\n/**\n * 玉の位置を探す\n * @param pos number[][] 盤上の配置\n * @param turn Turn どっちの玉を探すか。先手玉を探したいときは Sente を渡す\n * @returns 見つかった場合 Point\n *          見つからなかった場合 undefined\n */\nexport default function(pos: number[][], turn: Turn): Point | undefined {\n  for (let r = 0; r < pos.length; r++) {\n    for (let c = 0; c < pos.length; c++) {\n      const piece: Piece = pos[r][c]\n      const isGyoku: boolean = Math.abs(piece) === Gyoku0\n      const isOwnersTurn: boolean = piece * turn > 0\n      if (isGyoku && isOwnersTurn) return { row: r, column: c, piece }\n    }\n  }\n}\n","import { Gyoku0, Piece } from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\nimport { Position } from '../../../model/shogi/Position'\nimport { Turn } from '../../../model/shogi/Turn'\nimport { moveBoardOnly } from '../../game-handler/position'\nimport getTargets from '../getTargets'\nimport { find } from './algorithm'\n\n/**\n * points が attacker の駒の効きに入っているか\n * 王手放置・打ち歩詰めチェックに使用する\n * 入っている: true\n * 入っていない: false\n *\n * 例. 初期局面で先手の59玉に、後手の駒の効きがあるかを調べるとき\n * pos は初期局面\n * point は、{ row: 8, column: 4 }\n * attacker は Gote(-1)\n * を渡し、false が返る\n *\n * @param pos Position 配置\n * @param point Point 調べたい位置\n * @param attacker Turn 攻め手番\n * @param ignoreCheckLeaving boolean | undefined 王手放置チェックを無視するか\n *                           無視する(チェックしない): true\n *                           無視しない(チェックする): false | undefined\n *                           基本的に外から呼ぶ時は undefined で\n */\nexport default function isPointed(\n  pos: Position,\n  point: Point,\n  attacker: Turn,\n  ignoreCheckLeaving?: boolean\n): boolean {\n  for (let row = 0; row < pos.pos.length; row++) {\n    for (let column = 0; column < pos.pos.length; column++) {\n      const piece: Piece = pos.pos[row][column]\n      // 受け側の駒か、空マスならスキップ\n      if (piece * attacker <= 0) continue\n\n      // 攻め側の駒の targets に point が含まれていなかったらスキップ\n      const targets: Point[] = getTargets(pos, { row, column, piece })\n      const foundIndex: number = find(targets, point)\n      if (foundIndex === -1) continue\n\n      // 王手放置チェックをしないとき、\n      // 攻め側の駒が玉じゃないとき、\n      // 受け側の駒が玉の時は\n      // 次に動けるので true\n      if (\n        ignoreCheckLeaving ||\n        Math.abs(piece) !== Gyoku0 ||\n        (point.piece && Math.abs(point.piece) === Gyoku0)\n      )\n        return true\n\n      // 攻め側の駒が玉なので動かした結果、攻め側の玉が王手放置にならないか調べる\n      const moved = moveBoardOnly({\n        pos,\n        source: { row, column },\n        dest: { row: point.row, column: point.column },\n        piece,\n      })\n      if (isPointed(moved, point, -attacker as Turn, true)) continue\n      return true\n    }\n  }\n\n  return false\n}\n","import { Position } from '../shogi/Position'\nimport { hirate } from '../shogi/PositionInit'\nimport History from './History'\nimport Meta from './Meta'\n\nexport default interface Kif {\n  // 対局者などの対局情報\n  meta: Meta\n\n  // 棋譜\n  history: History\n}\n\nexport function newKif(): Kif {\n  const initPos: Position = hirate()\n  return {\n    meta: {\n      version: '1',\n      player: { sente: '', gote: '' },\n      handicap: '平手',\n      initPos,\n    },\n    history: {\n      // TODO: 持ち方考える\n      moves: [\n        {\n          index: 0,\n          str: '開始局面',\n          pos: initPos,\n          source: { row: 0, column: 0 },\n          dest: { row: 0, column: 0 },\n          piece: 0,\n        },\n      ],\n      index: 0,\n    },\n  }\n}\n","import {\n  Empty,\n  Fu0,\n  Fu1,\n  Gin0,\n  Gin1,\n  Gyoku0,\n  Gyoku1,\n  Hisha0,\n  Hisha1,\n  Kaku0,\n  Kaku1,\n  Kei0,\n  Kei1,\n  Kin0,\n  Kin1,\n  Kyou0,\n  Kyou1,\n} from './Piece'\nimport { Position } from './Position'\nimport { Sente } from './Turn'\n\n/**\n * 初期局を返す\n * column は reverse() されているので、\n * 飛車と角の位置が逆に見える\n * 棋譜との互換性を保つため。\n * ３三角 → pos[2][2]、\n * ３四飛 → pos[3][2]、\n * ７六歩 → pos[5][6] という感じで変換が楽\n */\nexport function hirate(): Position {\n  return {\n    pos: [\n      [Kyou1, Kei1, Gin1, Kin1, Gyoku1, Kin1, Gin1, Kei1, Kyou1],\n      [Empty, Kaku1, Empty, Empty, Empty, Empty, Empty, Hisha1, Empty],\n      [Fu1, Fu1, Fu1, Fu1, Fu1, Fu1, Fu1, Fu1, Fu1],\n      [Empty, Empty, Empty, Empty, Empty, Empty, Empty, Empty, Empty],\n      [Empty, Empty, Empty, Empty, Empty, Empty, Empty, Empty, Empty],\n      [Empty, Empty, Empty, Empty, Empty, Empty, Empty, Empty, Empty],\n      [Fu0, Fu0, Fu0, Fu0, Fu0, Fu0, Fu0, Fu0, Fu0],\n      [Empty, Hisha0, Empty, Empty, Empty, Empty, Empty, Kaku0, Empty],\n      [Kyou0, Kei0, Gin0, Kin0, Gyoku0, Kin0, Gin0, Kei0, Kyou0],\n    ],\n    cap0: [0, 0, 0, 0, 0, 0, 0],\n    cap1: [0, 0, 0, 0, 0, 0, 0],\n    turn: Sente,\n    moveCount: 0,\n  }\n}\n","import { action, computed, observable } from 'mobx'\nimport { canPromote, mustPromote, promote } from '../lib/game-handler/piece'\nimport { move } from '../lib/game-handler/position'\nimport { changeIndex } from '../lib/kif-handler/changeIndex'\nimport { genKifString } from '../lib/kif-handler/genKifString'\nimport getCurrent from '../lib/kif-handler/getCurrent'\nimport pushMove from '../lib/kif-handler/pushMove'\nimport getTargets from '../lib/validatior/getTargets'\nimport { find } from '../lib/validatior/utils/algorithm'\nimport filterTargets from '../lib/validatior/utils/filterTargets'\nimport { ClickProps } from '../model/events/ClickProps'\nimport { MoveProps } from '../model/events/MoveProps'\nimport Kif, { newKif } from '../model/kif/Kif'\nimport { Move } from '../model/kif/Move'\nimport Confirm from '../model/shogi/Confirm'\nimport { GameState } from '../model/shogi/GameState'\nimport { Piece } from '../model/shogi/Piece'\nimport Point from '../model/shogi/Point'\nimport { Position } from '../model/shogi/Position'\nimport { Turn, Gote, Sente } from '../model/shogi/Turn'\n\nexport class DefaultGameState implements GameState {\n  @observable indexes: number[]\n  @observable selected: Point | null\n  @observable confirm: Confirm | null\n  @observable moveTargets: Point[]\n  @observable kif: Kif\n\n  constructor() {\n    this.indexes = [-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n    this.selected = null\n    this.confirm = null\n    this.moveTargets = []\n    this.kif = newKif() // TODO\n  }\n\n  @computed get currentMove(): Move {\n    return getCurrent(this.kif)\n  }\n\n  @action reverse(): void {\n    this.indexes = this.indexes.slice().reverse()\n  }\n\n  @action clickPiece(p: ClickProps): void {\n    const sel: Point | null = this.selected\n    const turn: Turn = this.currentMove.pos.turn\n\n    // Confirm 画面なのに、成・不成以外がクリックされたらなにもしない\n    if (!!this.confirm && isPiece(p.clicked)) return\n\n    // 選択された駒をクリックしたら選択解除\n    if (!!sel && isPiece(p.clicked) && selectedAgain(sel, p)) {\n      this.selected = null\n      this.moveTargets = []\n      return\n    }\n\n    // 手番側の駒なら選択する\n    if (isPiece(p.clicked) && ownerIsTurn(p.clicked, turn)) {\n      const { row, column, clicked, i } = p\n      const point: Point = { row, column, piece: clicked, i }\n      this.selected = point\n      const targets = getTargets(this.currentMove.pos, point)\n      const filtered = filterTargets(this.currentMove.pos, point, targets)\n      this.moveTargets = filtered\n      return\n    }\n\n    // 選択された駒がない場合は、手番ではない方の駒or空白マスがクリックされた\n    // ということなので何もしない\n    // `|| sel.piece === undefined` の部分は\n    // この後のコードで TypeScript のチェックを楽にするため\n    if (!sel || !sel.piece) return\n\n    // 動けない場所がクリックされたらなにもしない\n    const foundIndex: number = find(this.moveTargets, p)\n    if (foundIndex === -1) return\n\n    const source: Point = { row: sel.row, column: sel.column }\n    const dest: Point = { row: p.row, column: p.column }\n\n    const moveAndUpdateState = (piece: Piece, promote?: boolean) => {\n      const moveProps: MoveProps = {\n        pos: this.currentMove.pos,\n        source,\n        dest,\n        piece,\n        promote,\n      }\n      const pos: Position = move(moveProps)\n      const kifStr: string = genKifString(moveProps)\n      const moveForKif: Move = {\n        index: this.currentMove.index + 1,\n        str: kifStr,\n        pos,\n        source,\n        dest,\n        piece,\n        promote,\n      }\n      this.selected = null\n      this.confirm = null\n      this.moveTargets = []\n      this.kif = pushMove(this.kif, moveForKif)\n    }\n\n    // Confirm オブジェクトがクリックされたら動かす(成 or 不成の処理)\n    if (!isPiece(p.clicked)) {\n      const piece: Piece = p.promote ? p.clicked.promoted : p.clicked.preserved\n      moveAndUpdateState(piece, p.promote === true)\n      return\n    }\n\n    // 成を選択できるか\n    const cp: boolean = canPromote({\n      sourceRow: sel.row,\n      destRow: p.row,\n      piece: sel.piece,\n    })\n\n    // 強制的に成る必要があるか\n    const mp: boolean = mustPromote(sel.piece, p.row)\n\n    // 成・不成の選択ができるように、Confirm オブジェクトをセット\n    if (cp && !mp) {\n      this.confirm = {\n        promoted: promote(sel.piece),\n        preserved: sel.piece,\n        row: p.row,\n        column: p.column,\n      }\n      return\n    }\n\n    const piece: Piece = mp ? promote(sel.piece) : sel.piece\n    moveAndUpdateState(piece, mp || undefined)\n  }\n\n  @action clickKif(moveCount: number, branchIndex?: number): void {\n    if (this.confirm) return\n    this.kif = changeIndex(this.kif, moveCount, branchIndex)\n    this.selected = null\n    this.moveTargets = []\n  }\n}\n\nfunction isPiece(pc: Piece | Confirm): pc is Piece {\n  return typeof pc === 'number'\n}\n\nfunction ownerIsTurn(p: Piece, t: Turn): boolean {\n  return (p < 0 && t === Gote) || (p > 0 && t === Sente)\n}\n\nfunction selectedAgain(sel: Point, cp: ClickProps): boolean {\n  return (\n    sel.row === cp.row &&\n    sel.column === cp.column &&\n    sel.piece === cp.clicked &&\n    sel.i === cp.i\n  )\n}\n","import { Fu0, Gyoku0, Piece } from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\nimport { Position } from '../../../model/shogi/Position'\nimport { Gote, Sente, Turn } from '../../../model/shogi/Turn'\nimport { moveBoardOnly } from '../../game-handler/position'\nimport getTargets from '../getTargets'\nimport getGyokuPoint from './getGyokuPoint'\nimport isPointed from './isPointed'\n\n/**\n * 王手放置か打ち歩詰めだったら弾く\n * @param pos Position 動かす前の配置\n * @param point Point 動かしたい駒の場所情報\n * @param targets point を getTargets で取得したリスト\n * @returns targets にフィルターをかけた結果\n */\nexport default function filter(\n  pos: Position,\n  point: Point,\n  targets: Point[]\n): Point[] {\n  if (!point.piece) throw new Error('piece id is needed')\n\n  const turn: Turn = point.piece > 0 ? Sente : Gote\n\n  // 手番側の玉がある場所。駒を動かしたとき王手放置にならないようにメモしておく\n  let gp = getGyokuPoint(pos.pos, turn)\n\n  // 王手放置・打ち歩詰めチェックを通った場所を入れていく\n  const filtered: Point[] = []\n\n  for (let i = 0; i < targets.length; i++) {\n    // 盤上だけ動かす\n    const moved: Position = moveBoardOnly({\n      pos: pos,\n      source: { row: point.row, column: point.column },\n      dest: { row: targets[i].row, column: targets[i].column },\n      piece: point.piece as Piece,\n    })\n\n    // 玉自身の動きチェックをしていたら、玉が動くので、再セット\n    if (point.piece && Math.abs(point.piece) === Gyoku0)\n      gp = getGyokuPoint(moved.pos, turn)\n\n    // 王手放置ならpushしない\n    const isOute = gp !== undefined && isPointed(moved, gp, -turn as Turn)\n    if (isOute) continue\n\n    // 打ち歩詰めチェック\n    const isFu: boolean = Math.abs(point.piece) === Fu0\n    const isFromCapture: boolean = point.row === -1\n    const enemyGyoku = getGyokuPoint(moved.pos, -turn as Turn)\n    // 打った歩による王手である\n    if (\n      isFu &&\n      isFromCapture &&\n      enemyGyoku !== undefined &&\n      isPointed(moved, enemyGyoku, turn)\n    ) {\n      // 打った歩が次に取られるか\n      const fuIsPointed = isPointed(moved, targets[i], -turn as Turn)\n\n      // 相手玉が逃げられる場所があるか\n      const enemyGyokuTargets = getTargets(moved, enemyGyoku)\n      const filteredEnemyGyokuTargets = filter(\n        moved,\n        enemyGyoku,\n        enemyGyokuTargets\n      )\n\n      // 打った歩が取られない && 逃げ場所がないとき、打ち歩詰めである\n      if (!fuIsPointed && filteredEnemyGyokuTargets.length === 0) continue\n    }\n\n    // OK\n    filtered.push(targets[i])\n  }\n\n  return filtered\n}\n","import History, { isBranch, KifComponent } from '../../model/kif/History'\nimport Kif from '../../model/kif/Kif'\nimport { Move } from '../../model/kif/Move'\n\n/**\n * 棋譜の現在表示局面のMoveを返す\n * 開始局面は0なので、3手目を表示中なら3と3手目のMoveが返る\n * @param k Kif\n */\nexport default function(k: Kif): Move {\n  let history: History = k.history\n  let moveOrBranch: KifComponent = history.moves[history.index]\n\n  while (isBranch(moveOrBranch)) {\n    history = moveOrBranch.branches[moveOrBranch.index]\n    moveOrBranch = history.moves[history.index]\n  }\n\n  return moveOrBranch\n}\n","import { observable, observe } from 'mobx'\nimport { DefaultConfig } from '../config/Config'\nimport { Config } from '../model/config/Config'\nimport { DisplayState } from '../model/display/DisplayState'\nimport { EngineState } from '../model/engine/EngineState'\nimport { Connected } from '../model/engine/State'\nimport { Move } from '../model/kif/Move'\nimport { GameState } from '../model/shogi/GameState'\nimport { Store } from '../model/store/Store'\nimport { DefaultDisplayState } from './DisplayState'\nimport { DefaultEngineState } from './EngineState'\nimport { DefaultGameState } from './GameState'\n\nexport class DefaultStore implements Store {\n  @observable gameState: GameState\n  @observable engineState: EngineState\n  @observable displayState: DisplayState\n  @observable config: Config\n\n  constructor() {\n    this.gameState = new DefaultGameState()\n    this.engineState = new DefaultEngineState()\n    this.displayState = new DefaultDisplayState()\n    this.config = new DefaultConfig()\n    this.engineState.setServerURL(this.config.serverURL)\n\n    // gameState で現在局面に変更があったら、将棋エンジンに局面をセットする\n    observe(this.gameState, 'currentMove', change =>\n      this.updatePosition(change.newValue)\n    )\n\n    // config の serverURL に変更があったら、engineState の serverURL を更新する\n    observe(this.config, 'serverURL', change =>\n      this.engineState.setServerURL(change.newValue)\n    )\n  }\n\n  async updatePosition(move?: Move): Promise<void> {\n    const setPositionExecutable: boolean = this.engineState.state >= Connected\n    if (!setPositionExecutable) return\n\n    const m: Move = move || this.gameState.currentMove\n    this.engineState.updatePosition(m.pos)\n  }\n}\n","import ClipboardJS from 'clipboard'\nimport { Provider } from 'mobx-react'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\nimport './index.scss'\nimport { Store } from './model/store/Store'\nimport * as serviceWorker from './serviceWorker'\nimport { DefaultStore } from './store/Store'\n\nconst store: Store = new DefaultStore()\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\nnew ClipboardJS('.Copy')\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register()\n"],"sourceRoot":""}