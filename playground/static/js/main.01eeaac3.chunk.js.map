{"version":3,"sources":["img/components/columns/1.svg","img/components/columns/2.svg","img/components/columns/3.svg","img/components/columns/4.svg","img/components/columns/5.svg","img/components/columns/6.svg","img/components/columns/7.svg","img/components/columns/8.svg","img/components/columns/9.svg","img/components/rows/1.svg","img/components/rows/2.svg","img/components/rows/3.svg","img/components/rows/4.svg","img/components/rows/5.svg","img/components/rows/6.svg","img/components/rows/7.svg","img/components/rows/8.svg","img/components/rows/9.svg","img/components/buttons/configuration.svg","img/components/buttons/connect-to-engine.svg","img/components/buttons/copy-kif.svg","img/components/buttons/next-five.svg","img/components/buttons/next-one.svg","img/components/buttons/prev-five.svg","img/components/buttons/prev-one.svg","img/components/buttons/reverse.svg","img/components/buttons/stop-engine.svg","store/impl/Config.ts","store/impl/DisplayState.ts","model/display/MockupState.ts","lib/game-handler/captures.ts","model/shogi/Piece.ts","lib/game-handler/piece.ts","lib/game-handler/position.ts","model/shogi/Turn.ts","model/engine/Optoin.ts","infrastructure/ShogiBoardClient.ts","store/impl/EngineState.ts","model/engine/State.ts","model/kif/History.ts","lib/kif-handler/changeIndex.ts","lib/strings.ts","lib/kif-handler/genKifString.ts","lib/kif-handler/pushMove.ts","lib/validatior/utils/getEmpties.ts","lib/validatior/utils/getFromNexts.ts","lib/validatior/utils/algorithm.ts","lib/validatior/utils/getWithDiff.ts","lib/validatior/pieces/hisha.ts","lib/validatior/pieces/kaku.ts","lib/validatior/getTargets.ts","lib/validatior/pieces/fu.ts","lib/validatior/pieces/kyou.ts","lib/validatior/pieces/kei.ts","lib/validatior/pieces/gin.ts","lib/validatior/pieces/kin.ts","lib/validatior/pieces/gyoku.ts","lib/validatior/pieces/uma.ts","lib/validatior/pieces/ryu.ts","lib/validatior/utils/getGyokuPoint.ts","lib/validatior/utils/isPointed.ts","store/impl/GameState.ts","lib/validatior/utils/filterTargets.ts","lib/kif-handler/getCurrent.ts","model/kif/Kif.ts","model/shogi/PositionInit.ts","store/Store.ts","components/engine/info/Columns.tsx","components/engine/info/SideInfo.tsx","components/setting/WidthController.tsx","components/util/CloseButton.tsx","components/form/Button.tsx","components/engine/connection/form/Buttons.tsx","components/form/Check.tsx","components/engine/connection/form/Checks.tsx","components/engine/connection/form/Range.tsx","components/engine/connection/form/Ranges.tsx","components/form/Select.tsx","components/engine/connection/form/Selects.tsx","components/form/Text.tsx","components/engine/connection/form/Texts.tsx","components/engine/connection/Detail.tsx","components/util/Loader.tsx","components/engine/connection/List.tsx","components/engine/connection/Controller.tsx","components/setting/Setting.tsx","components/shogi/Cell.tsx","components/shogi/Board.tsx","lib/kif-handler/getAsString.ts","components/shogi/Buttons.tsx","components/shogi/Captures.tsx","components/shogi/LeftSide.tsx","components/shogi/Kif.tsx","lib/dom-handler/intoView.ts","components/shogi/RightSide.tsx","components/shogi/BoardArea.tsx","components/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","DefaultConfig","keys","paintTargets","serverURL","saveToLocalStorage","saveBoardWidth","appWidth","saveAppWidth","debounce","w","set","this","get","v","n","Number","isNaN","b","String","s","forEach","key","remove","value","localStorage","setItem","getItem","removeItem","observable","action","DefaultDisplayState","state","mockup","resizing","handle","cap","p","f","Error","map","count","index","promote","demote","Math","abs","canPromote","props","sourceRow","isPromotable","piece","rows","isInEnemyArea","includes","destRow","move","handleCaptures","turn","pos","slice","d","dest","row","column","i","increaseCaptures","source","decreaseCaptures","updatedCap0","cap0","updatedCap1","cap1","moveOnBoard","moveCount","moveBoardOnly","line","r","c","Button","name","_","Check","initial","default","Range","min","max","inputValue","toString","Select","vars","Text","ShogiBoardClient","engineName","_engineName","_serverURL","engineNameKey","updateRange","rng","a","post","updateText","txt","buildUrl","url","axios","res","data","m","buttons","Map","checks","ranges","selects","texts","Object","values","t","btn","chk","sel","current","resp","entries","sort","info","moves","length","pieceId","mp","isPromoted","push","e","k","id","shortid","generate","score","reverse","path","body","headers","withName","encodeURIComponent","query","DefaultEngineState","names","setState","sbclient","connect","getOptions","options","console","error","alert","disconnect","close","start","stop","result","setPosition","computed","isBranch","changeHistory","h","x","y","lastIndex","last","init","xPassesIfBranch","concat","undefined","branches","changeBranch","columns","genKifString","checkPromotable","pc","pieceString","dr","dc","sr","sc","pushToHistory","lastIsCurrent","pushToBranch","nextIndex","next","moveEquals","tail","createBranch","recursive","indexOfNewMove","findIndex","toHistory","invalidRows","invalidColumns","points","nexts","comp","find","pts","l","rowDiff","columnDiff","target","getEmpties","diffList","getWithDiff","point","columnsOfContainingFu","col","invalidRow","nextRow","fu","diff","kyou","invalidRow1","invalidRow2","getFromNexts","kei","gin","kin","kaku","hisha","gyoku","kakuPoint","kakuTargets","targets","uma","hishaPoint","hishaTargets","ryu","isPointed","attacker","ignoreCheckLeaving","getTargets","DefaultGameState","indexes","selected","currentMove","confirm","isPiece","clicked","cp","selectedAgain","moveTargets","ownerIsTurn","filtered","filter","gp","getGyokuPoint","moved","isFu","isFromCapture","enemyGyoku","fuIsPointed","filteredEnemyGyokuTargets","filterTargets","moveAndUpdateState","old","moveProps","kifStr","moveForKif","str","kif","meta","history","mustPromote","promoted","preserved","branchIndex","moveOrBranch","getCurrent","initPos","version","player","sente","gote","handicap","newKif","DefaultStore","engineState","setServerURL","config","observe","gameState","change","updatePosition","newValue","StoreContext","createContext","observer","React","useContext","className","SideInfo","displayState","displayStateRef","useRef","configRef","useEffect","document","addEventListener","setResizing","window","getSelection","removeAllRanges","resizeOff","containerWidth","getElementById","clientWidth","clientX","setAppWidth","onMove","onMouseDown","CloseButton","one","two","onClick","width","height","x1","y1","x2","y2","stroke","strokeWidth","label","elms","Array","from","option","updateButton","type","onChange","checked","htmlFor","data-checked","data-unchecked","setValue","updateCheck","labelText","placeholder","required","opts","updateSelect","allowEmpty","classes","join","strElms","disconnectBtn","startBtn","startThinking","then","closeMockup","fetchInterval","catch","interval","getResult","setResult","Loader","store","latestEngineState","list","setNames","err","msg","engineNames","loader","setCurrentEngine","child","setMockupState","setPaintTargets","setSaveToLocalStorage","setSaveBoardWidth","inRange","style","getPiece","isTurn","isTargeted","rv","rowInRange","colInRange","isLeft","isTop","isStar","isSelected","rvp","getClassName","bgImg","backgroundImage","Column1Img","Column2Img","Column3Img","Column4Img","Column5Img","Column6Img","Column7Img","Column8Img","Column9Img","Row1Img","Row2Img","Row3Img","Row4Img","Row5Img","Row6Img","Row7Img","Row8Img","Row9Img","click","cf","isReversed","isGote","renderConfirm","clickPiece","idx","renderMockup","getAsString","getRec","kc","prevOne","nextOne","prevFive","nextFive","skipKif","clickKif","engineOnClick","connectToEngine","stopThinking","PrevOneImg","NextOneImg","PrevFiveImg","NextFiveImg","ReverseImg","data-clipboard-text","CopyKifImg","StopEngineImg","ConnectToEngineImg","ConfigurationImg","captures","isLeftSide","cells","children","selectedClass","getSelectedClass","isTurnClass","sideNumber","captureClass","caps","scrollIntoViewIfNeeded","intoView","renderKif","flatMap","main","head","rest","otherHeadsDom","restDom","renderMove","renderBranch","BoardArea","isThinking","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","onUpdate","onSuccess","ReactDOM","render","ClipboardJS","URL","process","href","origin","fetch","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.01eeaac3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/1.53ae04ea.svg\";","module.exports = __webpack_public_path__ + \"static/media/2.97f27bd3.svg\";","module.exports = __webpack_public_path__ + \"static/media/3.b1be70d0.svg\";","module.exports = __webpack_public_path__ + \"static/media/4.3a3645e1.svg\";","module.exports = __webpack_public_path__ + \"static/media/5.96880164.svg\";","module.exports = __webpack_public_path__ + \"static/media/6.eed8b457.svg\";","module.exports = __webpack_public_path__ + \"static/media/7.f7756286.svg\";","module.exports = __webpack_public_path__ + \"static/media/8.091df296.svg\";","module.exports = __webpack_public_path__ + \"static/media/9.2a50e523.svg\";","module.exports = __webpack_public_path__ + \"static/media/1.6deb9f45.svg\";","module.exports = __webpack_public_path__ + \"static/media/2.d7945250.svg\";","module.exports = __webpack_public_path__ + \"static/media/3.41251812.svg\";","module.exports = __webpack_public_path__ + \"static/media/4.b9435843.svg\";","module.exports = __webpack_public_path__ + \"static/media/5.617112e9.svg\";","module.exports = __webpack_public_path__ + \"static/media/6.d05bf0e7.svg\";","module.exports = __webpack_public_path__ + \"static/media/7.b426a2a3.svg\";","module.exports = __webpack_public_path__ + \"static/media/8.33901adb.svg\";","module.exports = __webpack_public_path__ + \"static/media/9.f4885e44.svg\";","module.exports = __webpack_public_path__ + \"static/media/configuration.3bb39912.svg\";","module.exports = __webpack_public_path__ + \"static/media/connect-to-engine.83c1b041.svg\";","module.exports = __webpack_public_path__ + \"static/media/copy-kif.6a0a1831.svg\";","module.exports = __webpack_public_path__ + \"static/media/next-five.af1deb21.svg\";","module.exports = __webpack_public_path__ + \"static/media/next-one.23a7a57e.svg\";","module.exports = __webpack_public_path__ + \"static/media/prev-five.b79ad6a0.svg\";","module.exports = __webpack_public_path__ + \"static/media/prev-one.8e9ec7d7.svg\";","module.exports = __webpack_public_path__ + \"static/media/reverse.13ea1c9a.svg\";","module.exports = __webpack_public_path__ + \"static/media/stop-engine.d8f88815.svg\";","import debounce from 'lodash.debounce'\nimport { action, observable } from 'mobx'\nimport { Config } from '../Config'\n\nexport class DefaultConfig implements Config {\n  @observable paintTargets: boolean\n  @observable serverURL: string\n  @observable saveToLocalStorage: boolean\n  @observable saveBoardWidth: boolean\n  @observable appWidth: number | null\n\n  private readonly keys = {\n    paintTargets: 'paintTargets',\n    serverURL: 'serverURL',\n    saveToLocalStorage: 'saveToLocalStorage',\n    saveBoardWidth: 'saveBoardWidth',\n    appWidth: 'appWidth',\n  }\n\n  constructor() {\n    const {\n      paintTargets,\n      serverURL,\n      saveToLocalStorage,\n      saveBoardWidth,\n      appWidth,\n    } = this.keys\n    this.paintTargets = !(this.get(paintTargets) === 'false')\n    this.serverURL = this.get(serverURL) || ''\n    this.saveToLocalStorage = this.get(saveToLocalStorage) === 'true'\n    this.saveBoardWidth = this.get(saveBoardWidth) === 'true'\n    this.appWidth = (() => {\n      if (!this.saveBoardWidth) return null\n\n      const v = this.get(appWidth)\n      if (!v) return null\n\n      const n = Number(v)\n      if (isNaN(n)) return null\n      return n\n    })()\n  }\n\n  @action\n  async setPaintTargets(b: boolean): Promise<void> {\n    this.paintTargets = b\n    if (this.saveToLocalStorage) this.set(this.keys.paintTargets, String(b))\n  }\n\n  @action\n  async setServerURL(s: string): Promise<void> {\n    this.serverURL = s\n    if (this.saveToLocalStorage) this.set(this.keys.serverURL, s)\n  }\n\n  @action\n  async setSaveToLocalStorage(b: boolean): Promise<void> {\n    this.saveToLocalStorage = b\n    const { saveToLocalStorage, serverURL, paintTargets } = this.keys\n\n    if (this.saveToLocalStorage) {\n      this.set(saveToLocalStorage, `${b}`)\n      this.set(serverURL, this.serverURL)\n      this.set(paintTargets, `${this.paintTargets}`)\n      return\n    }\n\n    // false なら削除する\n    const keys = [saveToLocalStorage, serverURL, paintTargets]\n    keys.forEach(key => this.remove(key))\n  }\n\n  @action\n  async setSaveBoardWidth(b: boolean): Promise<void> {\n    this.saveBoardWidth = b\n    if (!b) {\n      this.remove(this.keys.saveBoardWidth)\n      this.remove(this.keys.appWidth)\n      return\n    }\n    this.set(this.keys.saveBoardWidth, 'true')\n    const w = this.appWidth\n    if (w) this.saveAppWidth(w)\n  }\n\n  @action\n  async setAppWidth(w?: number): Promise<void> {\n    if (!w) {\n      this.appWidth = null\n      this.remove(this.keys.appWidth)\n      return\n    }\n    this.appWidth = w\n    if (this.saveBoardWidth) this.saveAppWidth(w)\n  }\n\n  saveAppWidth = debounce(\n    (w: number) => this.set(this.keys.appWidth, `${w}`),\n    1000\n  )\n\n  private set(key: string, value: string): void {\n    localStorage.setItem(key, value)\n  }\n  private get(key: string): string | null {\n    return localStorage.getItem(key)\n  }\n  private remove(key: string): void {\n    localStorage.removeItem(key)\n  }\n}\n","import { action, observable } from 'mobx'\nimport { DisplayState } from '../DisplayState'\nimport { MockupHidden, MockupState } from '../../model/display/MockupState'\n\nexport class DefaultDisplayState implements DisplayState {\n  @observable mockup: MockupState = MockupHidden\n  @observable resizing: boolean = false\n\n  @action\n  async setMockupState(state: MockupState): Promise<void> {\n    this.mockup = state\n  }\n\n  @action\n  async closeMockup(): Promise<void> {\n    this.mockup = MockupHidden\n  }\n\n  @action\n  setResizing(b: boolean): void {\n    this.resizing = b\n  }\n}\n","// モックアップの表示をコントロールするための情報\nexport type MockupState = number\n\n// 非表示\nexport const MockupHidden: MockupState = 1\n\n// 将棋エンジンとの接続を制御したりする画面\nexport const MockupEngineControl: MockupState = 2\n\n// shogi-board-server の URL が設定されていないとき\n// 将棋エンジンに接続するボタンが押されたときに出す画面\nexport const MockupServerSetting: MockupState = 3\n\n// 設定画面\nexport const MockupSetting: MockupState = 4\n","import { Gyoku0, Gyoku1, Piece } from '../../model/shogi/Piece'\n\n/**\n * 持ち駒を1つ増やす\n * @param cap number[] 持ち駒を表す配列。詳細は Position.ts\n * @param p Piece 増やしたい駒\n */\nexport function increaseCaptures(cap: number[], p: Piece): number[] {\n  return handle(cap, Math.abs(p), i => i + 1)\n}\n\n/**\n * 持ち駒を1つ減らす\n * @param cap number[] 持ち駒を表す配列。詳細は Position.ts\n * @param p Piece 減らしたい駒\n */\nexport function decreaseCaptures(cap: number[], p: Piece): number[] {\n  return handle(cap, Math.abs(p), i => i - 1)\n}\n\nfunction handle(cap: number[], p: Piece, f: (i: number) => number): number[] {\n  if (p === Gyoku0 || p === Gyoku1 || p > 10)\n    throw new Error('Piece ID of Captures must not be Gyoku or over 10.')\n\n  return cap.map((count, index) => {\n    // 駒IDが一致しなければそのまま\n    // p は Math.abs() を通っている\n    if (index !== p - 1) return count\n\n    const v = f(count)\n    if (v < 0)\n      throw new Error(\n        'Invalid function call. Captures must not contain negative value.'\n      )\n\n    return v\n  })\n}\n","export type Piece = number\n\nexport const Empty: Piece = 0\n\nexport const Fu0: Piece = 1\nexport const Kyou0: Piece = 2\nexport const Kei0: Piece = 3\nexport const Gin0: Piece = 4\nexport const Kin0: Piece = 5\nexport const Kaku0: Piece = 6\nexport const Hisha0: Piece = 7\nexport const Gyoku0: Piece = 8\nexport const To0: Piece = 11\nexport const NariKyou0: Piece = 12\nexport const NariKei0: Piece = 13\nexport const NariGin0: Piece = 14\nexport const Uma0: Piece = 16\nexport const Ryu0: Piece = 17\n\nexport const Fu1: Piece = -Fu0\nexport const Kyou1: Piece = -Kyou0\nexport const Kei1: Piece = -Kei0\nexport const Gin1: Piece = -Gin0\nexport const Kin1: Piece = -Kin0\nexport const Kaku1: Piece = -Kaku0\nexport const Hisha1: Piece = -Hisha0\nexport const Gyoku1: Piece = -Gyoku0\nexport const To1: Piece = -To0\nexport const NariKyou1: Piece = -NariKyou0\nexport const NariKei1: Piece = -NariKei0\nexport const NariGin1: Piece = -NariGin0\nexport const Uma1: Piece = -Uma0\nexport const Ryu1: Piece = -Ryu0\n","import {\n  Piece,\n  Empty,\n  Hisha0,\n  Kin0,\n  Fu0,\n  Fu1,\n  Kyou0,\n  Kyou1,\n  Kei0,\n  Kei1,\n} from '../../model/shogi/Piece'\n\n/**\n * 駒を成る\n * canPromote を通っている前提\n * @param p Piece 成る前の駒\n */\nexport function promote(p: Piece): Piece {\n  if (p > 0) return p + 10\n  return p - 10\n}\n\n/**\n * 駒を成る前の駒にする\n * @param p Piece 成駒\n */\nexport function demote(p: Piece): Piece {\n  if (Math.abs(p) < 10) return p\n\n  if (p < 0) return p + 10\n  return p - 10\n}\n\nexport interface CanPromoteProps {\n  // 移動前の行\n  sourceRow: number\n\n  // 移動後の行\n  destRow: number\n\n  // 移動する駒\n  piece: Piece\n}\n\n/**\n * 成・不成の選択ができるかどうか\n * 選択可能: true\n * 選択不可: false\n * @param props CanPromoteProps\n * @returns boolean\n *          成れる駒 && sourceRow か destRow が敵陣なら true\n *          成れない駒(金とか、既に成駒の場合)なら false\n */\nexport function canPromote(props: CanPromoteProps): boolean {\n  // 持ち駒\n  if (props.sourceRow === -1) return false\n\n  const isPromotable: boolean =\n    props.piece !== Empty &&\n    Math.abs(props.piece) !== Kin0 &&\n    Math.abs(props.piece) <= Hisha0\n\n  const rows: number[] = props.piece > 0 ? [0, 1, 2] : [6, 7, 8]\n  const isInEnemyArea: boolean =\n    rows.includes(props.sourceRow) || rows.includes(props.destRow)\n\n  return isPromotable && isInEnemyArea\n}\n\n/**\n * 移動後に、必ず成る必要があるか\n * 歩・香・桂が不成の場合に次に動けないとき true\n * @param p Piece 動かす駒\n * @param row 移動後の行\n * @returns boolean\n *          成必要がある場合 true\n */\nexport function mustPromote(p: Piece, row: number): boolean {\n  return (\n    ((p === Fu0 || p === Kyou0) && row === 0) ||\n    ((p === Fu1 || p === Kyou1) && row === 8) ||\n    (p === Kei0 && (row === 0 || row === 1)) ||\n    (p === Kei1 && (row === 8 || row === 7))\n  )\n}\n","import { MoveProps } from '../../model/events/MoveProps'\nimport { Empty, Piece } from '../../model/shogi/Piece'\nimport { Position } from '../../model/shogi/Position'\nimport { Gote, Sente, Turn } from '../../model/shogi/Turn'\nimport { decreaseCaptures, increaseCaptures } from './captures'\nimport { demote } from './piece'\n\nexport function move(p: MoveProps): Position {\n  // 持ち駒を更新する\n  type CaptureHandler = (cap: number[], turn: Turn) => number[]\n  const handleCaptures: CaptureHandler = (cap: number[], turn: Turn) => {\n    // 手番ではない場合、何もしない\n    if (p.pos.turn !== turn) return cap.slice()\n\n    // 移動先が相手の駒なら持ち駒を増やす\n    const d: Piece = p.pos.pos[p.dest.row][p.dest.column]\n    if (d * turn < 0) return increaseCaptures(cap, demote(d))\n\n    // 移動元が持ち駒なら減らす\n    if (p.source.row === -1 && p.source.column === -1)\n      return decreaseCaptures(cap, p.piece)\n\n    return cap.slice()\n  }\n\n  const updatedCap0: number[] = handleCaptures(p.pos.cap0, Sente)\n  const updatedCap1: number[] = handleCaptures(p.pos.cap1, Gote)\n\n  return {\n    pos: moveOnBoard(p),\n    cap0: updatedCap0,\n    cap1: updatedCap1,\n    turn: -p.pos.turn as Turn,\n    moveCount: p.pos.moveCount + 1,\n  }\n}\n\nexport function moveBoardOnly(p: MoveProps): Position {\n  return {\n    pos: moveOnBoard(p),\n    cap0: p.pos.cap0.slice(),\n    cap1: p.pos.cap1.slice(),\n    turn: -p.pos.turn as Turn,\n    moveCount: p.pos.moveCount + 1,\n  }\n}\n\nfunction moveOnBoard(p: MoveProps): number[][] {\n  return p.pos.pos.map((line, r) =>\n    line.map((piece, c) => {\n      // 移動前の位置なら空マスに\n      if (p.source.row === r && p.source.column === c) return Empty\n\n      // 移動先の位置なら更新\n      if (p.dest.row === r && p.dest.column === c) return p.piece\n\n      return piece\n    })\n  )\n}\n","// 手番\n//  1: 先手\n// -1: 後手\nexport type Turn = 1 | -1\n\nexport const Sente: Turn = 1\nexport const Gote: Turn = -1\n","import { action, observable } from 'mobx'\n\ninterface Option<T> {\n  readonly name: string\n  setValue(value: T): void\n}\n\nexport class Button implements Option<any> {\n  readonly name: string\n  constructor(name: string) {\n    this.name = name\n  }\n\n  setValue(_: any): void {}\n}\n\nexport class Check implements Option<boolean> {\n  @observable value: boolean\n  readonly name: string\n  readonly default: boolean\n  constructor(name: string, value: boolean, initial: boolean) {\n    this.name = name\n    this.value = value\n    this.default = initial\n  }\n\n  @action setValue(value: boolean): void {\n    this.value = value\n  }\n}\n\nexport class Range implements Option<string> {\n  @observable value: number\n  @observable inputValue: string\n  readonly name: string\n  readonly default: number\n  readonly min: number\n  readonly max: number\n  constructor(\n    name: string,\n    value: number,\n    initial: number,\n    min: number,\n    max: number\n  ) {\n    this.name = name\n    this.value = value\n    this.inputValue = value.toString()\n    this.default = initial\n    this.min = min\n    this.max = max\n  }\n\n  @action setValue(value: string): void {\n    this.inputValue = value\n    const n: number = Number(this.inputValue)\n    if (Number.isNaN(n) || n < this.min || n > this.max) return\n    this.value = n\n  }\n}\n\nexport class Select implements Option<string> {\n  @observable value: string\n  readonly name: string\n  readonly default: string\n  readonly vars: string[]\n  constructor(name: string, value: string, initial: string, vars: string[]) {\n    this.name = name\n    this.value = value\n    this.default = initial\n    this.vars = vars\n  }\n\n  @action setValue(value: string) {\n    this.value = value\n  }\n}\n\nexport class Text implements Option<string> {\n  @observable value: string\n  readonly name: string\n  readonly default: string\n\n  constructor(name: string, value: string, initial: string) {\n    this.name = name\n    this.value = value\n    this.default = initial\n  }\n\n  @action setValue(value: string) {\n    this.value = value\n  }\n}\n\nexport interface Options {\n  buttons: Map<string, Button>\n  checks: Map<string, Check>\n  ranges: Map<string, Range>\n  selects: Map<string, Select>\n  texts: Map<string, Text>\n}\n","import axios from 'axios'\nimport debounce from 'lodash.debounce'\nimport shortid from 'shortid'\nimport { move } from '../lib/game-handler/position'\nimport { Info } from '../model/engine/Info'\nimport {\n  Button,\n  Check,\n  Options,\n  Range,\n  Select,\n  Text,\n} from '../model/engine/Optoin'\nimport { MoveProps } from '../model/events/MoveProps'\nimport { Move } from '../model/kif/Move'\nimport { ResponseInfo } from '../model/response/ResponseInfo'\nimport { Empty } from '../model/shogi/Piece'\nimport { Position } from '../model/shogi/Position'\n\nconst DEBOUNCE_MILLIS = 1000\n\nexport class ShogiBoardClient {\n  private _engineName?: string\n  private _serverURL?: string\n\n  private readonly engineNameKey = 'key'\n\n  constructor(engineName?: string, serverURL?: string) {\n    this._engineName = engineName\n    this._serverURL = serverURL\n  }\n\n  set engineName(name: string) {\n    this._engineName = name\n  }\n\n  get engineName(): string {\n    if (!this._engineName) throw new Error('engineName is not defined.')\n    return this._engineName\n  }\n\n  set serverURL(url: string) {\n    this._serverURL = url\n  }\n\n  get serverURL(): string {\n    if (!this._serverURL) throw new Error('serverURL is not defined. serverURL')\n    return this._serverURL\n  }\n\n  async init(): Promise<string[]> {\n    const url = await this.buildUrl('init', false)\n    const res = await axios.post(url)\n    return res.data\n  }\n\n  async connect(): Promise<void> {\n    return await this.post('connect')\n  }\n\n  async close(): Promise<void> {\n    return await this.post('close')\n  }\n\n  async start(): Promise<void> {\n    return await this.post('start')\n  }\n\n  async stop(): Promise<void> {\n    return await this.post('stop')\n  }\n\n  async getOptions(): Promise<Options> {\n    // res は Options と言いつつ、中身は Map じゃなくて object\n    // TODO: データの持ち方考える\n    const res: Options = await this.get('options/get')\n    const m: Options = {\n      buttons: new Map(),\n      checks: new Map(),\n      ranges: new Map(),\n      selects: new Map(),\n      texts: new Map(),\n    }\n    Object.values(res.buttons).forEach(b =>\n      m.buttons.set(b.name, new Button(b.name))\n    )\n    Object.values(res.checks).forEach(c =>\n      m.checks.set(c.name, new Check(c.name, c.value, c.default))\n    )\n    Object.values(res.ranges).forEach(r =>\n      m.ranges.set(r.name, new Range(r.name, r.value, r.default, r.min, r.max))\n    )\n    Object.values(res.selects).forEach(s =>\n      m.selects.set(s.name, new Select(s.name, s.value, s.default, s.vars))\n    )\n    Object.values(res.texts).forEach(t =>\n      m.texts.set(t.name, new Text(t.name, t.value, t.default))\n    )\n    return m\n  }\n\n  async updateButton(btn: Button): Promise<void> {\n    return await this.post('options/update/button', btn)\n  }\n\n  async updateCheck(chk: Check): Promise<void> {\n    return await this.post('options/update/check', chk)\n  }\n\n  updateRange = debounce(async (rng: Range): Promise<void> => {\n    return await this.post('options/update/range', rng)\n  }, DEBOUNCE_MILLIS)\n\n  async updateSelect(sel: Select): Promise<void> {\n    return await this.post('options/update/select', sel)\n  }\n\n  updateText = debounce(async (txt: Text): Promise<void> => {\n    return await this.post('options/update/text', txt)\n  }, DEBOUNCE_MILLIS)\n\n  async getResult(current: Move): Promise<Info[]> {\n    const resp: { number: ResponseInfo } = await this.get('result/get')\n    let p: Position = current.pos\n\n    // レスポンスのキーでソートされた ResponseInfo を取り出し、\n    // move メソッドで局面を動かしながら Info を生成していく\n    return Object.entries(resp)\n      .sort((a, b) => {\n        if (a[0] < b[0]) return -1\n        if (a[0] > b[0]) return 1\n        return 0\n      })\n      .map(([_, info]) => {\n        let i: number = 0\n        p = current.pos\n        const moves: MoveProps[] = []\n\n        try {\n          while (i < info.moves.length) {\n            const m = info.moves[i]\n            const source = { row: m.source!.row, column: m.source!.column }\n            const dest = { row: m.dest!.row, column: m.dest!.column }\n            const piece = m.pieceId || p.pos[source.row][source.column]\n            if (piece === Empty) break\n            const mp: MoveProps = {\n              pos: p,\n              source,\n              dest,\n              piece,\n              promote: m.isPromoted,\n            }\n            moves.push(mp)\n            p = move(mp)\n            i = (i + 1) | 0\n          }\n        } catch (e) {\n          // ズレは出るのでエラーは握りつぶす\n          // console.error(i, p, e)\n        }\n\n        const values = new Map()\n        Object.entries(info.values).forEach(([k, v]) => values.set(k, v))\n\n        return {\n          id: shortid.generate(),\n          values, // 一旦捨てる\n          score: info.score * current.pos.turn, // 後手番なら -1 をかける\n          moves,\n        }\n      })\n  }\n\n  async setPosition(p: Position): Promise<void> {\n    const pos: Position = {\n      pos: p.pos.map(r => r.slice().reverse()),\n      cap0: p.cap0,\n      cap1: p.cap1,\n      turn: p.turn,\n      moveCount: p.moveCount,\n    }\n    return await this.post('position/set', pos)\n  }\n\n  private async get<T>(path: string): Promise<T> {\n    const url = await this.buildUrl(path, true)\n    const res = await axios.get(url)\n    return res.data\n  }\n\n  private async post(path: string, body?: object): Promise<void> {\n    const url = await this.buildUrl(path, true)\n    await axios.post(url, body, {\n      headers: { 'Content-Type': 'application/json' },\n    })\n  }\n\n  private async buildUrl(path: string, withName: boolean) {\n    const e = (s: string) => encodeURIComponent(s)\n    const query = withName ? `?${this.engineNameKey}=${e(this.engineName)}` : ''\n    return `${this.serverURL}/${path}${query}`\n  }\n\n  private e(s: any): string {\n    return encodeURIComponent(s)\n  }\n}\n","import { action, computed, observable } from 'mobx'\nimport { ShogiBoardClient } from '../../infrastructure/ShogiBoardClient'\nimport { EngineState } from '../EngineState'\nimport { Info } from '../../model/engine/Info'\nimport { Options } from '../../model/engine/Optoin'\nimport {\n  Connected,\n  Connecting,\n  NotConnected,\n  StandBy,\n  State,\n  Thinking,\n} from '../../model/engine/State'\nimport { Position } from '../../model/shogi/Position'\n\nexport class DefaultEngineState implements EngineState {\n  @observable names: string[] = []\n  @observable current: string | null = null\n  @observable options: Options | null = null\n  @observable state: State = NotConnected\n  @observable result: Info[] | null = null\n  @observable serverURL: string = ''\n\n  @computed get sbclient(): ShogiBoardClient {\n    return new ShogiBoardClient(this.current || '', this.serverURL)\n  }\n\n  @action async setNames(names: string[]): Promise<void> {\n    this.names = names\n  }\n\n  @action async setState(state: State): Promise<void> {\n    this.state = state\n  }\n\n  @action async connect(name: string): Promise<void> {\n    if (!this.names.includes(name))\n      throw new Error('Unknown engine name. name=' + name)\n\n    this.current = name\n    try {\n      this.setState(Connecting)\n      await this.sbclient.connect()\n      this.options = await this.sbclient.getOptions()\n      this.setState(Connected)\n    } catch (e) {\n      console.error('Failed to connect', e)\n      alert('接続に失敗しました') // TODO\n      await this.disconnect()\n    }\n  }\n\n  @action async disconnect(): Promise<void> {\n    try {\n      await this.sbclient.close()\n    } catch (e) {\n      console.error('接続解除に失敗しました', e)\n    } finally {\n      this.current = null\n      this.options = null\n      this.state = NotConnected\n    }\n  }\n\n  @action async startThinking(): Promise<void> {\n    if (!this.current)\n      throw new Error('[startThinking] current engine is not set')\n\n    await this.sbclient.start()\n    await this.setState(Thinking)\n  }\n\n  @action async stopThinking(): Promise<void> {\n    if (!this.current)\n      throw new Error('[stopThinking] current engine is not set')\n    if (this.state !== Thinking) return\n\n    await this.sbclient.stop()\n    await this.setState(StandBy)\n  }\n\n  @action async setResult(i: Info[]): Promise<void> {\n    this.result = i\n  }\n\n  async updatePosition(p: Position): Promise<void> {\n    await this.sbclient.setPosition(p)\n  }\n\n  @action async setServerURL(s: string): Promise<void> {\n    this.serverURL = s\n  }\n}\n","// 将棋エンジンの状態を表すID\nexport type State = 0 | 1 | 2 | 3 | 4\n\n// 接続前\nexport const NotConnected: State = 0\n\n// 接続中・ローディング中のComponentを表示するため\nexport const Connecting: State = 1\n\n// 接続済\nexport const Connected: State = 2\n\n// 将棋エンジン、待機中(思考中ではない)\nexport const StandBy: State = 3\n\n// 将棋エンジン思考中\nexport const Thinking: State = 4\n","import Branch from './Branch'\nimport { Move } from './Move'\n\nexport type KifComponent = Move | Branch\n\n// TODO: もうちょい持ち方考える\n// 理想は\n// {\n//   head: Move,\n//   next: History,\n//   isCurrent: boolean\n// }\n// だが、JSON互換的に苦しい感じ\nexport default interface History {\n  moves: KifComponent[]\n\n  // history のインデックス\n  // ブラウザで表示するときに現在局面がどこか探せるように\n  index: number\n}\n\nexport function isBranch(m: KifComponent): m is Branch {\n  return 'branches' in m\n}\n","import Branch from '../../model/kif/Branch'\nimport History, { isBranch, KifComponent } from '../../model/kif/History'\nimport Kif from '../../model/kif/Kif'\n\n/**\n * 現在局面を更新した新しい棋譜を返す\n * @param k Kif 更新したい棋譜\n * @param x number 現在局面にしたい手数\n * @param y number | undefined 分岐を切り替える場合のみ、分岐のインデックス\n */\nexport function changeIndex(k: Kif, x: number, y?: number): Kif {\n  return {\n    meta: k.meta,\n    history: changeHistory(k.history, x, y),\n  }\n}\n\n// TODO: Move にインデックスを入れたので、少しシンプルにできる\nfunction changeHistory(h: History, x: number, y?: number): History {\n  const lastIndex: number = h.moves.length - 1\n  const last: KifComponent = h.moves[lastIndex]\n  const init: KifComponent[] = h.moves.slice(0, lastIndex)\n\n  const xPassesIfBranch: number = x <= lastIndex ? 0 : x - lastIndex\n\n  const moves: KifComponent[] = isBranch(last)\n    ? init.concat(changeBranch(last, xPassesIfBranch, y))\n    : h.moves.slice()\n\n  const index: number = x <= lastIndex ? x : lastIndex\n\n  return { moves, index }\n}\n\nfunction changeBranch(b: Branch, x: number, y?: number): Branch {\n  const index = x === 0 && y !== undefined ? y : b.index\n\n  if (x === 0)\n    return {\n      branches: b.branches.map(h => changeHistory(h, 0)),\n      index,\n    }\n\n  const branches = b.branches.map((h: History, i: number) =>\n    i === b.index ? changeHistory(h, x, y) : h\n  )\n\n  return { branches, index }\n}\n","import {\n  Fu0,\n  Gin0,\n  Gyoku0,\n  Hisha0,\n  Kaku0,\n  Kei0,\n  Kin0,\n  Kyou0,\n  NariGin0,\n  NariKei0,\n  NariKyou0,\n  Piece,\n  Ryu0,\n  To0,\n  Uma0,\n} from '../model/shogi/Piece'\n\nconst rows = ['一', '二', '三', '四', '五', '六', '七', '八', '九']\nconst columns = ['１', '２', '３', '４', '５', '６', '７', '８', '９']\n\nexport function rowString(r: number): string {\n  return rows[r]\n}\n\nexport function columnString(c: number): string {\n  return columns[c]\n}\n\nexport function pieceString(piece: Piece): string {\n  const p = Math.abs(piece)\n\n  if (p === Fu0) return '歩'\n  if (p === Kyou0) return '香'\n  if (p === Kei0) return '桂'\n  if (p === Gin0) return '銀'\n  if (p === Kin0) return '金'\n  if (p === Kaku0) return '角'\n  if (p === Hisha0) return '飛'\n  if (p === Gyoku0) return '玉'\n  if (p === To0) return 'と'\n  if (p === NariKyou0) return '成香'\n  if (p === NariKei0) return '成桂'\n  if (p === NariGin0) return '成銀'\n  if (p === Uma0) return '馬'\n  if (p === Ryu0) return '龍'\n\n  throw new Error('Failed to ident piece name. received: ' + piece)\n}\n","import { MoveProps } from '../../model/events/MoveProps'\nimport { canPromote, demote } from '../game-handler/piece'\nimport { columnString, pieceString, rowString } from '../strings'\n\n/**\n * 棋譜の文字列を生成する\n * @param p MoveProps\n * @param checkPromotable 将棋エンジンからもらう値では、不成or無印の判定が難しいので、\n *                        ここでチェックする。\n */\nexport function genKifString(\n  { source, dest, piece, promote }: MoveProps,\n  checkPromotable?: boolean\n): string {\n  const pc: string = pieceString(promote ? demote(piece) : piece)\n  const dr: string = rowString(dest.row)\n  const dc: string = columnString(dest.column)\n\n  if (source.row === -1) return `${dc}${dr}${pc}打`\n\n  const sr: number = source.row + 1\n  const sc: number = source.column + 1\n  const promoteStr: () => string = () => {\n    if (promote === true) return '成'\n\n    // undefined は無印\n    if (promote !== false) return ''\n\n    // promote === false && チェックしない\n    // or\n    // promote === false && 成れる駒\n    // なら不成\n    if (\n      !checkPromotable ||\n      canPromote({ sourceRow: source.row, destRow: dest.row, piece: piece })\n    )\n      return '不成'\n\n    return ''\n  }\n\n  return `${dc}${dr}${pc}${promoteStr()}(${sc}${sr})`\n}\n","import Branch from '../../model/kif/Branch'\nimport History, { isBranch, KifComponent } from '../../model/kif/History'\nimport Kif from '../../model/kif/Kif'\nimport { Move } from '../../model/kif/Move'\n\n/**\n * 棋譜に新しいMoveを追加する\n * @param old Kif\n * @param m Move 追加する一手\n */\nexport default function (old: Kif, m: Move): Kif {\n  return {\n    meta: old.meta,\n    history: pushToHistory(old.history, m),\n  }\n}\n\nfunction pushToHistory(h: History, m: Move): History {\n  const lastIsCurrent: boolean = h.index === h.moves.length - 1\n  const last: KifComponent = h.moves[h.index]\n\n  if (lastIsCurrent && isBranch(last))\n    return {\n      moves: h.moves\n        .slice(0, h.moves.length - 1)\n        .concat(pushToBranch(last, m, true)),\n      index: h.index,\n    }\n\n  const nextIndex: number = h.index + 1\n\n  if (lastIsCurrent)\n    return {\n      moves: h.moves.concat(m),\n      index: nextIndex,\n    }\n\n  const next: KifComponent = h.moves[nextIndex]\n  const init: KifComponent[] = h.moves.slice(0, nextIndex)\n\n  if (isBranch(next))\n    return {\n      moves: init.concat(pushToBranch(next, m, false)),\n      index: nextIndex,\n    }\n\n  // 追加しようとしてる Move が次と一緒ならインデックスだけ更新\n  if (moveEquals(m, next))\n    return {\n      moves: h.moves.slice(),\n      index: nextIndex,\n    }\n\n  const tail: KifComponent[] = h.moves.slice(nextIndex, h.moves.length)\n  return {\n    moves: init.concat(createBranch(tail, m)),\n    index: nextIndex,\n  }\n}\n\nfunction pushToBranch(b: Branch, m: Move, recursive: boolean): Branch {\n  // 分岐の先頭は現在表示局面ではないので、再帰的に更新する\n  if (recursive)\n    return {\n      branches: b.branches.map((h: History, i: number) => {\n        if (i === b.index) return pushToHistory(h, m)\n        return h\n      }),\n      index: b.index,\n    }\n\n  const indexOfNewMove: number = b.branches.findIndex(h =>\n    moveEquals(h.moves[0] as Move, m)\n  )\n\n  // 追加しようとしてる Move がすでに分岐の先頭にある\n  if (indexOfNewMove !== -1)\n    return {\n      branches: b.branches.slice(),\n      index: indexOfNewMove,\n    }\n\n  return {\n    branches: b.branches.concat(toHistory([m])),\n    index: b.branches.length,\n  }\n}\n\nfunction createBranch(tail: KifComponent[], m: Move): Branch {\n  return {\n    branches: [toHistory(tail), toHistory([m])],\n    index: 1,\n  }\n}\n\nfunction toHistory(c: KifComponent[]): History {\n  return { moves: c, index: 0 }\n}\n\nfunction moveEquals(a: Move, b: Move): boolean {\n  return (\n    a.index === b.index &&\n    a.source.row === b.source.row &&\n    a.source.column === b.source.column &&\n    a.dest.row === b.dest.row &&\n    a.dest.column === b.dest.column &&\n    a.piece === b.piece &&\n    a.promote === b.promote\n  )\n}\n","import { Piece, Empty } from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\n\nexport default function (\n  pos: Piece[][],\n  invalidRows?: number[],\n  invalidColumns?: number[]\n): Point[] {\n  const points: Point[] = []\n\n  for (let r = 0; r < 9; r++) {\n    if (invalidRows && invalidRows.includes(r)) continue\n\n    for (let c = 0; c < 9; c++) {\n      const columnIsInvalid = invalidColumns && invalidColumns.includes(c)\n      if (columnIsInvalid || pos[r][c] !== Empty) continue\n      points.push({ row: r, column: c })\n    }\n  }\n\n  return points\n}\n","import { Piece } from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\n\nexport default function (pos: Piece[][], nexts: number[][], p: Piece): Point[] {\n  const points: Point[] = []\n\n  for (let i = 0; i < nexts.length; i++) {\n    const row = nexts[i][0]\n    const column = nexts[i][1]\n    if (\n      row >= 0 &&\n      row <= 8 &&\n      column >= 0 &&\n      column <= 8 &&\n      pos[row][column] * p <= 0\n    )\n      points.push({ row, column })\n  }\n\n  return points\n}\n","import Point from '../../../model/shogi/Point'\n\nexport function comp(a: Point, b: Point): number {\n  return a.row - b.row || a.column - b.column\n}\n\nexport function find(pts: Point[], p: Point): number {\n  let i = pts.length >> 1\n  let l = 0\n  let r = pts.length - 1\n\n  while (l <= r) {\n    if (pts[i].row === p.row && pts[i].column === p.column) return i\n    if (pts[i].row < p.row) l = i + 1\n    else if (pts[i].row > p.row) r = i - 1\n    else if (pts[i].column < p.column) l = i + 1\n    else r = i - 1\n    i = l + ((r - l) >> 1)\n  }\n\n  return -1\n}\n","import { Piece } from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\n\nexport default function (\n  pos: Piece[][],\n  row: number,\n  column: number,\n  piece: Piece,\n  points: Point[],\n  rowDiff: number,\n  columnDiff: number\n): void {\n  while (0 <= row && row <= 8 && 0 <= column && column <= 8) {\n    const target: Piece = pos[row][column]\n    if (target * piece > 0) break\n    points.push({ row, column })\n    if (target * piece < 0) break\n    row += rowDiff\n    column += columnDiff\n  }\n}\n","import { Hisha0, Hisha1 } from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\nimport { Position } from '../../../model/shogi/Position'\nimport { comp } from '../utils/algorithm'\nimport getEmpties from '../utils/getEmpties'\nimport getWithDiff from '../utils/getWithDiff'\n\nexport default function (pos: Position, p: Point): Point[] {\n  if (!p.piece || (p.piece !== Hisha0 && p.piece !== Hisha1))\n    throw new Error('Called validation for hisha, but piece id was not hisha.')\n\n  if (p.row === -1 && p.column === -1) return getEmpties(pos.pos)\n\n  const diffList = [\n    [-1, 0],\n    [0, -1],\n    [0, 1],\n    [1, 0],\n  ]\n  const points: Point[] = []\n\n  for (let i = 0; i < diffList.length; i++) {\n    getWithDiff(\n      pos.pos,\n      p.row + diffList[i][0],\n      p.column + diffList[i][1],\n      p.piece,\n      points,\n      diffList[i][0],\n      diffList[i][1]\n    )\n  }\n\n  points.sort(comp)\n  return points\n}\n","import { Kaku0, Kaku1 } from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\nimport { Position } from '../../../model/shogi/Position'\nimport { comp } from '../utils/algorithm'\nimport getEmpties from '../utils/getEmpties'\nimport getWithDiff from '../utils/getWithDiff'\n\nexport default function (pos: Position, p: Point): Point[] {\n  if (!p.piece || (p.piece !== Kaku0 && p.piece !== Kaku1))\n    throw new Error('Called validation for kaku, but piece id was not kaku.')\n\n  if (p.row === -1 && p.column === -1) return getEmpties(pos.pos)\n\n  const diffList = [\n    [-1, -1],\n    [-1, 1],\n    [1, -1],\n    [1, 1],\n  ]\n  const points: Point[] = []\n\n  for (let i = 0; i < diffList.length; i++) {\n    getWithDiff(\n      pos.pos,\n      p.row + diffList[i][0],\n      p.column + diffList[i][1],\n      p.piece,\n      points,\n      diffList[i][0],\n      diffList[i][1]\n    )\n  }\n\n  points.sort(comp)\n  return points\n}\n","import {\n  Empty,\n  Fu0,\n  Fu1,\n  Gin0,\n  Gin1,\n  Gyoku0,\n  Gyoku1,\n  Hisha0,\n  Hisha1,\n  Kaku0,\n  Kaku1,\n  Kei0,\n  Kei1,\n  Kin0,\n  Kin1,\n  Kyou0,\n  Kyou1,\n  NariGin0,\n  NariGin1,\n  NariKei0,\n  NariKei1,\n  NariKyou0,\n  NariKyou1,\n  Ryu0,\n  Ryu1,\n  To0,\n  To1,\n  Uma0,\n  Uma1,\n} from '../../model/shogi/Piece'\nimport Point from '../../model/shogi/Point'\nimport { Position } from '../../model/shogi/Position'\nimport fu from './pieces/fu'\nimport gin from './pieces/gin'\nimport gyoku from './pieces/gyoku'\nimport hisha from './pieces/hisha'\nimport kaku from './pieces/kaku'\nimport kei from './pieces/kei'\nimport kin from './pieces/kin'\nimport kyou from './pieces/kyou'\nimport ryu from './pieces/ryu'\nimport uma from './pieces/uma'\n\n/**\n * 駒を動かせる場所を取得する\n * @param pos Position 駒の配置\n * @param point Point 動ける場所を取得したい駒の位置\n */\nexport default function (pos: Position, point: Point): Point[] {\n  const piece = point.piece\n\n  if (piece === Empty)\n    throw new Error('Cannot get targets to move for empty cell.')\n  if (piece === Fu0 || piece === Fu1) return fu(pos, point)\n  if (piece === Kyou0 || piece === Kyou1) return kyou(pos, point)\n  if (piece === Kei0 || piece === Kei1) return kei(pos, point)\n  if (piece === Gin0 || piece === Gin1) return gin(pos, point)\n  if (\n    piece === Kin0 ||\n    piece === Kin1 ||\n    piece === To0 ||\n    piece === To1 ||\n    piece === NariKyou0 ||\n    piece === NariKyou1 ||\n    piece === NariKei0 ||\n    piece === NariKei1 ||\n    piece === NariGin0 ||\n    piece === NariGin1\n  )\n    return kin(pos, point)\n  if (piece === Kaku0 || piece === Kaku1) return kaku(pos, point)\n  if (piece === Hisha0 || piece === Hisha1) return hisha(pos, point)\n  if (piece === Gyoku0 || piece === Gyoku1) return gyoku(pos, point)\n  if (piece === Uma0 || piece === Uma1) return uma(pos, point)\n  if (piece === Ryu0 || piece === Ryu1) return ryu(pos, point)\n\n  throw new Error('Could not get targets to move. Got invalid piece ID')\n}\n","import { Fu0, Fu1 } from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\nimport { Position } from '../../../model/shogi/Position'\nimport getEmpties from '../utils/getEmpties'\n\nexport default function (pos: Position, p: Point): Point[] {\n  if (!p.piece || (p.piece !== Fu0 && p.piece !== Fu1))\n    throw new Error('Called validation for fu, but piece id was not fu.')\n\n  // 二歩チェックのため、すでに歩がある列を入れておく\n  const columnsOfContainingFu: number[] = []\n  for (let col = 0; col < 9; col++) {\n    for (let row = 0; row < 9; row++) {\n      if (pos.pos[row][col] === p.piece) {\n        columnsOfContainingFu.push(col)\n        break\n      }\n    }\n  }\n\n  if (p.row === -1 && p.column === -1) {\n    const invalidRow: number = p.piece > 0 ? 0 : 8\n    return getEmpties(pos.pos, [invalidRow], columnsOfContainingFu)\n  }\n\n  const nextRow: number = p.piece > 0 ? p.row - 1 : p.row + 1\n\n  // 盤外か味方の駒ならなし\n  if (nextRow < 0 || nextRow > 8 || pos.pos[nextRow][p.column] * p.piece > 0)\n    return []\n\n  // 空マスか、相手の駒ならOK\n  return [{ row: nextRow, column: p.column }]\n}\n","import { Kyou0, Kyou1 } from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\nimport { Position } from '../../../model/shogi/Position'\nimport getEmpties from '../utils/getEmpties'\nimport getWithDiff from '../utils/getWithDiff'\n\nexport default function (pos: Position, p: Point): Point[] {\n  if (!p.piece || (p.piece !== Kyou0 && p.piece !== Kyou1))\n    throw new Error('Called validation for kyou, but piece id was not kyou.')\n\n  if (p.row === -1 && p.column === -1) {\n    const invalidRow: number = p.piece > 0 ? 0 : 8\n    return getEmpties(pos.pos, [invalidRow])\n  }\n\n  const diff = p.piece > 0 ? -1 : 1\n  const points: Point[] = []\n  getWithDiff(pos.pos, p.row + diff, p.column, p.piece, points, diff, 0)\n  if (p.piece > 0) points.reverse()\n  return points\n}\n","import { Kei0, Kei1 } from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\nimport { Position } from '../../../model/shogi/Position'\nimport getEmpties from '../utils/getEmpties'\nimport getFromNexts from '../utils/getFromNexts'\n\nexport default function (pos: Position, p: Point): Point[] {\n  if (!p.piece || (p.piece !== Kei0 && p.piece !== Kei1))\n    throw new Error('Called validation for kei, but piece id was not kei.')\n\n  if (p.row === -1 && p.column === -1) {\n    const invalidRow1: number = p.piece > 0 ? 0 : 8\n    const invalidRow2: number = p.piece > 0 ? invalidRow1 + 1 : invalidRow1 - 1\n    return getEmpties(pos.pos, [invalidRow1, invalidRow2])\n  }\n\n  const nextRow: number = p.piece > 0 ? p.row - 2 : p.row + 2\n  if (nextRow < 0 || nextRow > 8) return []\n  const nexts: number[][] = [\n    [nextRow, p.column - 1],\n    [nextRow, p.column + 1],\n  ]\n  return getFromNexts(pos.pos, nexts, p.piece)\n}\n","import { Gin0, Gin1 } from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\nimport { Position } from '../../../model/shogi/Position'\nimport getEmpties from '../utils/getEmpties'\nimport getFromNexts from '../utils/getFromNexts'\n\nexport default function (pos: Position, p: Point): Point[] {\n  if (!p.piece || (p.piece !== Gin0 && p.piece !== Gin1))\n    throw new Error('Called validation for gin, but piece id was not gin.')\n\n  if (p.row === -1 && p.column === -1) return getEmpties(pos.pos)\n\n  const nexts: number[][] =\n    p.piece > 0\n      ? [\n          [p.row - 1, p.column - 1],\n          [p.row - 1, p.column],\n          [p.row - 1, p.column + 1],\n          [p.row + 1, p.column - 1],\n          [p.row + 1, p.column + 1],\n        ]\n      : [\n          [p.row - 1, p.column - 1],\n          [p.row - 1, p.column + 1],\n          [p.row + 1, p.column - 1],\n          [p.row + 1, p.column],\n          [p.row + 1, p.column + 1],\n        ]\n\n  return getFromNexts(pos.pos, nexts, p.piece)\n}\n","import {\n  Kin0,\n  Kin1,\n  NariGin0,\n  NariGin1,\n  NariKei0,\n  NariKei1,\n  NariKyou0,\n  NariKyou1,\n  To0,\n  To1,\n} from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\nimport { Position } from '../../../model/shogi/Position'\nimport getEmpties from '../utils/getEmpties'\nimport getFromNexts from '../utils/getFromNexts'\n\nexport default function (pos: Position, p: Point): Point[] {\n  if (\n    !p.piece ||\n    (p.piece !== Kin0 &&\n      p.piece !== Kin1 &&\n      p.piece !== To0 &&\n      p.piece !== To1 &&\n      p.piece !== NariKyou0 &&\n      p.piece !== NariKyou1 &&\n      p.piece !== NariKei0 &&\n      p.piece !== NariKei1 &&\n      p.piece !== NariGin0 &&\n      p.piece !== NariGin1)\n  )\n    throw new Error(\n      'Called validation for kin(or promoted piece moves as same as kin), but piece id was not as expected.'\n    )\n\n  if (p.row === -1 && p.column === -1) return getEmpties(pos.pos)\n\n  const nexts: number[][] =\n    p.piece > 0\n      ? [\n          [p.row - 1, p.column - 1],\n          [p.row - 1, p.column],\n          [p.row - 1, p.column + 1],\n          [p.row, p.column - 1],\n          [p.row, p.column + 1],\n          [p.row + 1, p.column],\n        ]\n      : [\n          [p.row - 1, p.column],\n          [p.row, p.column - 1],\n          [p.row, p.column + 1],\n          [p.row + 1, p.column - 1],\n          [p.row + 1, p.column],\n          [p.row + 1, p.column + 1],\n        ]\n\n  return getFromNexts(pos.pos, nexts, p.piece)\n}\n","import { Gyoku0, Gyoku1 } from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\nimport { Position } from '../../../model/shogi/Position'\nimport getFromNexts from '../utils/getFromNexts'\n\nexport default function (pos: Position, p: Point): Point[] {\n  if (!p.piece || (p.piece !== Gyoku0 && p.piece !== Gyoku1))\n    throw new Error('Called validation for gyoku, but piece id was not gyoku.')\n\n  if (p.row === -1 && p.column === -1)\n    throw new Error('Gyoku must not be captured')\n\n  const nexts: number[][] = [\n    [p.row - 1, p.column - 1],\n    [p.row - 1, p.column],\n    [p.row - 1, p.column + 1],\n    [p.row, p.column - 1],\n    [p.row, p.column + 1],\n    [p.row + 1, p.column - 1],\n    [p.row + 1, p.column],\n    [p.row + 1, p.column + 1],\n  ]\n\n  return getFromNexts(pos.pos, nexts, p.piece)\n}\n","import { Uma0, Uma1 } from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\nimport { Position } from '../../../model/shogi/Position'\nimport { demote } from '../../game-handler/piece'\nimport { comp } from '../utils/algorithm'\nimport getFromNexts from '../utils/getFromNexts'\nimport kaku from './kaku'\n\nexport default function (pos: Position, p: Point): Point[] {\n  if (!p.piece || (p.piece !== Uma0 && p.piece !== Uma1))\n    throw new Error('Called validation for uma, but piece id was not uma.')\n\n  if (p.row === -1 || p.column === -1)\n    throw new Error('Uma must not be captured')\n\n  const nexts = [\n    [p.row - 1, p.column],\n    [p.row, p.column - 1],\n    [p.row, p.column + 1],\n    [p.row + 1, p.column],\n  ]\n\n  const kakuPoint = { row: p.row, column: p.column, piece: demote(p.piece) }\n  const kakuTargets = kaku(pos, kakuPoint)\n  const targets = getFromNexts(pos.pos, nexts, p.piece).concat(kakuTargets)\n  targets.sort(comp)\n  return targets\n}\n","import { Ryu0, Ryu1 } from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\nimport { Position } from '../../../model/shogi/Position'\nimport { demote } from '../../game-handler/piece'\nimport { comp } from '../utils/algorithm'\nimport getFromNexts from '../utils/getFromNexts'\nimport hisha from './hisha'\n\nexport default function (pos: Position, p: Point): Point[] {\n  if (!p.piece || (p.piece !== Ryu0 && p.piece !== Ryu1))\n    throw new Error('Called validation for ryu, but piece id was not ryu.')\n\n  if (p.row === -1 || p.column === -1)\n    throw new Error('Ryu must not be captured')\n\n  const nexts = [\n    [p.row - 1, p.column - 1],\n    [p.row - 1, p.column + 1],\n    [p.row + 1, p.column - 1],\n    [p.row + 1, p.column + 1],\n  ]\n\n  const hishaPoint = { row: p.row, column: p.column, piece: demote(p.piece) }\n  const hishaTargets = hisha(pos, hishaPoint)\n  const targets = getFromNexts(pos.pos, nexts, p.piece).concat(hishaTargets)\n  targets.sort(comp)\n  return targets\n}\n","import { Gyoku0, Piece } from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\nimport { Turn } from '../../../model/shogi/Turn'\n\n/**\n * 玉の位置を探す\n * @param pos number[][] 盤上の配置\n * @param turn Turn どっちの玉を探すか。先手玉を探したいときは Sente を渡す\n * @returns 見つかった場合 Point\n *          見つからなかった場合 undefined\n */\nexport default function (pos: number[][], turn: Turn): Point | undefined {\n  for (let r = 0; r < pos.length; r++) {\n    for (let c = 0; c < pos.length; c++) {\n      const piece: Piece = pos[r][c]\n      const isGyoku: boolean = Math.abs(piece) === Gyoku0\n      const isOwnersTurn: boolean = piece * turn > 0\n      if (isGyoku && isOwnersTurn) return { row: r, column: c, piece }\n    }\n  }\n}\n","import { Gyoku0, Piece } from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\nimport { Position } from '../../../model/shogi/Position'\nimport { Turn } from '../../../model/shogi/Turn'\nimport { moveBoardOnly } from '../../game-handler/position'\nimport getTargets from '../getTargets'\nimport { find } from './algorithm'\n\n/**\n * points が attacker の駒の効きに入っているか\n * 王手放置・打ち歩詰めチェックに使用する\n * 入っている: true\n * 入っていない: false\n *\n * 例. 初期局面で先手の59玉に、後手の駒の効きがあるかを調べるとき\n * pos は初期局面\n * point は、{ row: 8, column: 4 }\n * attacker は Gote(-1)\n * を渡し、false が返る\n *\n * @param pos Position 配置\n * @param point Point 調べたい位置\n * @param attacker Turn 攻め手番\n * @param ignoreCheckLeaving boolean | undefined 王手放置チェックを無視するか\n *                           無視する(チェックしない): true\n *                           無視しない(チェックする): false | undefined\n *                           基本的に外から呼ぶ時は undefined で\n */\nexport default function isPointed(\n  pos: Position,\n  point: Point,\n  attacker: Turn,\n  ignoreCheckLeaving?: boolean\n): boolean {\n  for (let row = 0; row < pos.pos.length; row++) {\n    for (let column = 0; column < pos.pos.length; column++) {\n      const piece: Piece = pos.pos[row][column]\n      // 受け側の駒か、空マスならスキップ\n      if (piece * attacker <= 0) continue\n\n      // 攻め側の駒の targets に point が含まれていなかったらスキップ\n      const targets: Point[] = getTargets(pos, { row, column, piece })\n      const foundIndex: number = find(targets, point)\n      if (foundIndex === -1) continue\n\n      // 王手放置チェックをしないとき、\n      // 攻め側の駒が玉じゃないとき、\n      // 受け側の駒が玉の時は\n      // 次に動けるので true\n      if (\n        ignoreCheckLeaving ||\n        Math.abs(piece) !== Gyoku0 ||\n        (point.piece && Math.abs(point.piece) === Gyoku0)\n      )\n        return true\n\n      // 攻め側の駒が玉なので動かした結果、攻め側の玉が王手放置にならないか調べる\n      const moved = moveBoardOnly({\n        pos,\n        source: { row, column },\n        dest: { row: point.row, column: point.column },\n        piece,\n      })\n      if (isPointed(moved, point, -attacker as Turn, true)) continue\n      return true\n    }\n  }\n\n  return false\n}\n","import { action, computed, observable } from 'mobx'\nimport { canPromote, mustPromote, promote } from '../../lib/game-handler/piece'\nimport { move } from '../../lib/game-handler/position'\nimport { changeIndex } from '../../lib/kif-handler/changeIndex'\nimport { genKifString } from '../../lib/kif-handler/genKifString'\nimport getCurrent from '../../lib/kif-handler/getCurrent'\nimport pushMove from '../../lib/kif-handler/pushMove'\nimport getTargets from '../../lib/validatior/getTargets'\nimport { find } from '../../lib/validatior/utils/algorithm'\nimport filterTargets from '../../lib/validatior/utils/filterTargets'\nimport { ClickProps } from '../../model/events/ClickProps'\nimport { MoveProps } from '../../model/events/MoveProps'\nimport Kif, { newKif } from '../../model/kif/Kif'\nimport { Move } from '../../model/kif/Move'\nimport Confirm from '../../model/shogi/Confirm'\nimport { GameState } from '../GameState'\nimport { Piece } from '../../model/shogi/Piece'\nimport Point from '../../model/shogi/Point'\nimport { Position } from '../../model/shogi/Position'\nimport { Turn, Gote, Sente } from '../../model/shogi/Turn'\n\nexport class DefaultGameState implements GameState {\n  @observable indexes: number[] = [-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n  @observable selected: Point | null = null\n  @observable confirm: Confirm | null = null\n  @observable moveTargets: Point[] = []\n  @observable kif: Kif = newKif()\n\n  @computed get currentMove(): Move {\n    return getCurrent(this.kif)\n  }\n\n  @action reverse(): void {\n    this.indexes = this.indexes.slice().reverse()\n  }\n\n  @action clickPiece(p: ClickProps): void {\n    const sel: Point | null = this.selected\n    const turn: Turn = this.currentMove.pos.turn\n\n    // Confirm 画面なのに、成・不成以外がクリックされたらなにもしない\n    if (!!this.confirm && isPiece(p.clicked)) return\n\n    // 選択された駒をクリックしたら選択解除\n    if (!!sel && isPiece(p.clicked) && selectedAgain(sel, p)) {\n      this.selected = null\n      this.moveTargets = []\n      return\n    }\n\n    // 手番側の駒なら選択する\n    if (isPiece(p.clicked) && ownerIsTurn(p.clicked, turn)) {\n      const { row, column, clicked, i } = p\n      const point: Point = { row, column, piece: clicked, i }\n      this.selected = point\n      const targets = getTargets(this.currentMove.pos, point)\n      const filtered = filterTargets(this.currentMove.pos, point, targets)\n      this.moveTargets = filtered\n      return\n    }\n\n    // 選択された駒がない場合は、手番ではない方の駒or空白マスがクリックされた\n    // ということなので何もしない\n    // `|| sel.piece === undefined` の部分は\n    // この後のコードで TypeScript のチェックを楽にするため\n    if (!sel || !sel.piece) return\n\n    // 動けない場所がクリックされたらなにもしない\n    const foundIndex: number = find(this.moveTargets, p)\n    if (foundIndex === -1) return\n\n    const source: Point = { row: sel.row, column: sel.column }\n    const dest: Point = { row: p.row, column: p.column }\n\n    const moveAndUpdateState = (piece: Piece, promote?: boolean) => {\n      const moveProps: MoveProps = {\n        pos: this.currentMove.pos,\n        source,\n        dest,\n        piece,\n        promote,\n      }\n      const pos: Position = move(moveProps)\n      const kifStr: string = genKifString(moveProps)\n      const moveForKif: Move = {\n        index: this.currentMove.index + 1,\n        str: kifStr,\n        pos,\n        source,\n        dest,\n        piece,\n        promote,\n      }\n      this.selected = null\n      this.confirm = null\n      this.moveTargets = []\n      this.kif = pushMove(this.kif, moveForKif)\n    }\n\n    // Confirm オブジェクトがクリックされたら動かす(成 or 不成の処理)\n    if (!isPiece(p.clicked)) {\n      const piece: Piece = p.promote ? p.clicked.promoted : p.clicked.preserved\n      moveAndUpdateState(piece, p.promote === true)\n      return\n    }\n\n    // 成を選択できるか\n    const cp: boolean = canPromote({\n      sourceRow: sel.row,\n      destRow: p.row,\n      piece: sel.piece,\n    })\n\n    // 強制的に成る必要があるか\n    const mp: boolean = mustPromote(sel.piece, p.row)\n\n    // 成・不成の選択ができるように、Confirm オブジェクトをセット\n    if (cp && !mp) {\n      this.confirm = {\n        promoted: promote(sel.piece),\n        preserved: sel.piece,\n        row: p.row,\n        column: p.column,\n      }\n      return\n    }\n\n    const piece: Piece = mp ? promote(sel.piece) : sel.piece\n    moveAndUpdateState(piece, mp || undefined)\n  }\n\n  @action clickKif(moveCount: number, branchIndex?: number): void {\n    if (this.confirm) return\n    this.kif = changeIndex(this.kif, moveCount, branchIndex)\n    this.selected = null\n    this.moveTargets = []\n  }\n}\n\nfunction isPiece(pc: Piece | Confirm): pc is Piece {\n  return typeof pc === 'number'\n}\n\nfunction ownerIsTurn(p: Piece, t: Turn): boolean {\n  return (p < 0 && t === Gote) || (p > 0 && t === Sente)\n}\n\nfunction selectedAgain(sel: Point, cp: ClickProps): boolean {\n  return (\n    sel.row === cp.row &&\n    sel.column === cp.column &&\n    sel.piece === cp.clicked &&\n    sel.i === cp.i\n  )\n}\n","import { Fu0, Gyoku0, Piece } from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\nimport { Position } from '../../../model/shogi/Position'\nimport { Gote, Sente, Turn } from '../../../model/shogi/Turn'\nimport { moveBoardOnly } from '../../game-handler/position'\nimport getTargets from '../getTargets'\nimport getGyokuPoint from './getGyokuPoint'\nimport isPointed from './isPointed'\n\n/**\n * 王手放置か打ち歩詰めだったら弾く\n * @param pos Position 動かす前の配置\n * @param point Point 動かしたい駒の場所情報\n * @param targets point を getTargets で取得したリスト\n * @returns targets にフィルターをかけた結果\n */\nexport default function filter(\n  pos: Position,\n  point: Point,\n  targets: Point[]\n): Point[] {\n  if (!point.piece) throw new Error('piece id is needed')\n\n  const turn: Turn = point.piece > 0 ? Sente : Gote\n\n  // 手番側の玉がある場所。駒を動かしたとき王手放置にならないようにメモしておく\n  let gp = getGyokuPoint(pos.pos, turn)\n\n  // 王手放置・打ち歩詰めチェックを通った場所を入れていく\n  const filtered: Point[] = []\n\n  for (let i = 0; i < targets.length; i++) {\n    // 盤上だけ動かす\n    const moved: Position = moveBoardOnly({\n      pos: pos,\n      source: { row: point.row, column: point.column },\n      dest: { row: targets[i].row, column: targets[i].column },\n      piece: point.piece as Piece,\n    })\n\n    // 玉自身の動きチェックをしていたら、玉が動くので、再セット\n    if (point.piece && Math.abs(point.piece) === Gyoku0)\n      gp = getGyokuPoint(moved.pos, turn)\n\n    // 王手放置ならpushしない\n    const isOute = gp !== undefined && isPointed(moved, gp, -turn as Turn)\n    if (isOute) continue\n\n    // 打ち歩詰めチェック\n    const isFu: boolean = Math.abs(point.piece) === Fu0\n    const isFromCapture: boolean = point.row === -1\n    const enemyGyoku = getGyokuPoint(moved.pos, -turn as Turn)\n    // 打った歩による王手である\n    if (\n      isFu &&\n      isFromCapture &&\n      enemyGyoku !== undefined &&\n      isPointed(moved, enemyGyoku, turn)\n    ) {\n      // 打った歩が次に取られるか\n      const fuIsPointed = isPointed(moved, targets[i], -turn as Turn)\n\n      // 相手玉が逃げられる場所があるか\n      const enemyGyokuTargets = getTargets(moved, enemyGyoku)\n      const filteredEnemyGyokuTargets = filter(\n        moved,\n        enemyGyoku,\n        enemyGyokuTargets\n      )\n\n      // 打った歩が取られない && 逃げ場所がないとき、打ち歩詰めである\n      if (!fuIsPointed && filteredEnemyGyokuTargets.length === 0) continue\n    }\n\n    // OK\n    filtered.push(targets[i])\n  }\n\n  return filtered\n}\n","import History, { isBranch, KifComponent } from '../../model/kif/History'\nimport Kif from '../../model/kif/Kif'\nimport { Move } from '../../model/kif/Move'\n\n/**\n * 棋譜の現在表示局面のMoveを返す\n * 開始局面は0なので、3手目を表示中なら3と3手目のMoveが返る\n * @param k Kif\n */\nexport default function (k: Kif): Move {\n  let history: History = k.history\n  let moveOrBranch: KifComponent = history.moves[history.index]\n\n  while (isBranch(moveOrBranch)) {\n    history = moveOrBranch.branches[moveOrBranch.index]\n    moveOrBranch = history.moves[history.index]\n  }\n\n  return moveOrBranch\n}\n","import { Position } from '../shogi/Position'\nimport { hirate } from '../shogi/PositionInit'\nimport History from './History'\nimport Meta from './Meta'\n\nexport default interface Kif {\n  // 対局者などの対局情報\n  meta: Meta\n\n  // 棋譜\n  history: History\n}\n\nexport function newKif(): Kif {\n  const initPos: Position = hirate()\n  return {\n    meta: {\n      version: '1',\n      player: { sente: '', gote: '' },\n      handicap: '平手',\n      initPos,\n    },\n    history: {\n      // TODO: 持ち方考える\n      moves: [\n        {\n          index: 0,\n          str: '開始局面',\n          pos: initPos,\n          source: { row: 0, column: 0 },\n          dest: { row: 0, column: 0 },\n          piece: 0,\n        },\n      ],\n      index: 0,\n    },\n  }\n}\n","import {\n  Empty,\n  Fu0,\n  Fu1,\n  Gin0,\n  Gin1,\n  Gyoku0,\n  Gyoku1,\n  Hisha0,\n  Hisha1,\n  Kaku0,\n  Kaku1,\n  Kei0,\n  Kei1,\n  Kin0,\n  Kin1,\n  Kyou0,\n  Kyou1,\n} from './Piece'\nimport { Position } from './Position'\nimport { Sente } from './Turn'\n\n/**\n * 初期局を返す\n * column は reverse() されているので、\n * 飛車と角の位置が逆に見える\n * 棋譜との互換性を保つため。\n * ３三角 → pos[2][2]、\n * ３四飛 → pos[3][2]、\n * ７六歩 → pos[5][6] という感じで変換が楽\n */\nexport function hirate(): Position {\n  return {\n    // prettier-ignore\n    pos: [\n      [Kyou1, Kei1,   Gin1,  Kin1,  Gyoku1, Kin1,  Gin1,  Kei1,   Kyou1],\n      [Empty, Kaku1,  Empty, Empty, Empty,  Empty, Empty, Hisha1, Empty],\n      [Fu1,   Fu1,    Fu1,   Fu1,   Fu1,    Fu1,   Fu1,   Fu1,    Fu1  ],\n      [Empty, Empty,  Empty, Empty, Empty,  Empty, Empty, Empty,  Empty],\n      [Empty, Empty,  Empty, Empty, Empty,  Empty, Empty, Empty,  Empty],\n      [Empty, Empty,  Empty, Empty, Empty,  Empty, Empty, Empty,  Empty],\n      [Fu0,   Fu0,    Fu0,   Fu0,   Fu0,    Fu0,   Fu0,   Fu0,    Fu0  ],\n      [Empty, Hisha0, Empty, Empty, Empty,  Empty, Empty, Kaku0,  Empty],\n      [Kyou0, Kei0,   Gin0,  Kin0,  Gyoku0, Kin0,  Gin0,  Kei0,   Kyou0],\n    ],\n    cap0: [0, 0, 0, 0, 0, 0, 0],\n    cap1: [0, 0, 0, 0, 0, 0, 0],\n    turn: Sente,\n    moveCount: 0,\n  }\n}\n","import { observable, observe } from 'mobx'\nimport { createContext } from 'react'\nimport { Connected } from '../model/engine/State'\nimport { Move } from '../model/kif/Move'\nimport { Config } from './Config'\nimport { DisplayState } from './DisplayState'\nimport { EngineState } from './EngineState'\nimport { GameState } from './GameState'\nimport { DefaultConfig } from './impl/Config'\nimport { DefaultDisplayState } from './impl/DisplayState'\nimport { DefaultEngineState } from './impl/EngineState'\nimport { DefaultGameState } from './impl/GameState'\n\nexport interface Store {\n  gameState: GameState\n  engineState: EngineState\n  displayState: DisplayState\n  config: Config\n\n  /**\n   * 将棋エンジンに対して setPosition を実行する\n   * @param move move が渡されなかった場合 gameState から局面を取得し実行する\n   *             move を渡さないのは connect 実行後に一度だけの想定\n   */\n  updatePosition(move?: Move): Promise<void>\n}\n\nclass DefaultStore implements Store {\n  constructor() {\n    this.engineState.setServerURL(this.config.serverURL)\n\n    // gameState で現在局面に変更があったら、将棋エンジンに局面をセットする\n    observe(this.gameState, 'currentMove', change =>\n      this.updatePosition(change.newValue)\n    )\n\n    // config の serverURL に変更があったら、engineState の serverURL を更新する\n    observe(this.config, 'serverURL', change =>\n      this.engineState.setServerURL(change.newValue)\n    )\n  }\n\n  @observable gameState: GameState = new DefaultGameState()\n  @observable engineState: EngineState = new DefaultEngineState()\n  @observable displayState: DisplayState = new DefaultDisplayState()\n  @observable config: Config = new DefaultConfig()\n\n  async updatePosition(move?: Move): Promise<void> {\n    const setPositionExecutable: boolean = this.engineState.state >= Connected\n    if (!setPositionExecutable) return\n\n    const m: Move = move || this.gameState.currentMove\n    this.engineState.updatePosition(m.pos)\n  }\n}\n\nexport const defaultStore: () => Store = () => new DefaultStore()\nexport const StoreContext = createContext<Store>(defaultStore())\n","import { observer } from 'mobx-react-lite'\nimport React, { FC } from 'react'\nimport { genKifString } from '../../../lib/kif-handler/genKifString'\nimport { StoreContext } from '../../../store/Store'\nimport './Columns.scss'\n\nconst Columns: FC = () => {\n  const { result } = React.useContext(StoreContext).engineState\n  if (!result) return <div />\n\n  const columns = result.map(i => {\n    const moves = i.moves.map((m, n) => {\n      const kif = genKifString(m, true)\n      // TODO: key\n      return (\n        <div key={n} className=\"EngineInfoRowContent\">\n          {kif}\n        </div>\n      )\n    })\n\n    return (\n      <div key={i.id} className=\"EngineInfoColumn\">\n        <div className=\"EngineInfoRow EngineInfoRowContainer\">\n          <div className=\"EngineInfoRowLabel\">score</div>\n          <div className=\"EngineInfoRowContent Center\">{i.score}</div>\n        </div>\n        <div className=\"EngineInfoRow EngineInfoRowContainer\">\n          <div className=\"EngineInfoRowLabel\">読み</div>\n          {moves}\n        </div>\n      </div>\n    )\n  })\n\n  return <>{columns}</>\n}\n\nexport default observer(Columns)\n","import React, { FC } from 'react'\nimport Columns from './Columns'\nimport './SideInfo.scss'\n\nconst SideInfo: FC = () => {\n  return (\n    <div className=\"EngineSideInfo\">\n      <div className=\"EngineSideInfoContainer\">\n        <Columns />\n      </div>\n    </div>\n  )\n}\n\nexport default SideInfo\n","import { observer } from 'mobx-react-lite'\nimport React, { FC, useEffect, useRef } from 'react'\nimport { StoreContext } from '../../store/Store'\nimport './WidthController.scss'\n\nconst Setting: FC = () => {\n  const { displayState, config } = React.useContext(StoreContext)\n  const displayStateRef = useRef(displayState)\n  const configRef = useRef(config)\n\n  const resizeOn = () => displayState.setResizing(true)\n  const resizeOff = () => {\n    displayStateRef.current.setResizing(false)\n    window.getSelection()?.removeAllRanges()\n  }\n  const onMove = (e: MouseEvent) => {\n    const displayState = displayStateRef.current\n    if (!displayState.resizing) return\n    const config = configRef.current\n\n    const container = document.getElementById('root') as HTMLDivElement\n    const containerWidth = container.clientWidth\n    const pos = containerWidth - e.clientX\n    if (pos <= 0) config.setAppWidth()\n    else config.setAppWidth(containerWidth - pos * 2)\n  }\n\n  useEffect(() => {\n    document.addEventListener('mouseup', () => resizeOff())\n    document.addEventListener('mousemove', e => onMove(e))\n  }, [])\n\n  return <div className=\"WidthController\" onMouseDown={resizeOn} />\n}\n\nexport default observer(Setting)\n","import React, { FC } from 'react'\nimport './Mockup.scss'\n\ninterface Props {\n  onClick: () => Promise<void>\n}\n\nconst CloseButton: FC<Props> = (props: Props) => {\n  const width = 20\n  const one = line(0, 0, width, width)\n  const two = line(width, 0, 0, width)\n\n  return (\n    <div onClick={() => props.onClick()}>\n      <svg width={width} height={width} className=\"MockupCloseButton\">\n        {one}\n        {two}\n      </svg>\n    </div>\n  )\n\n  function line(x1: number, y1: number, x2: number, y2: number) {\n    return (\n      <line x1={x1} y1={y1} x2={x2} y2={y2} stroke=\"black\" strokeWidth=\"2\" />\n    )\n  }\n}\n\nexport default CloseButton\n","import { observer } from 'mobx-react-lite'\nimport React, { FC } from 'react'\nimport './Button.scss'\n\nexport interface Props {\n  label: string\n  onClick: () => Promise<void>\n}\n\nconst Button: FC<Props> = (props: Props) => {\n  return (\n    <button className=\"FormButton\" onClick={() => props.onClick()}>\n      {props.label}\n    </button>\n  )\n}\n\nexport default observer(Button)\n","import { observer } from 'mobx-react-lite'\nimport React, { FC } from 'react'\nimport { ShogiBoardClient } from '../../../../infrastructure/ShogiBoardClient'\nimport { Button as OptionButton } from '../../../../model/engine/Optoin'\nimport Button from '../../../form/Button'\nimport './Buttons.scss'\n\nexport interface Props {\n  buttons: Map<string, OptionButton>\n  sbclient: ShogiBoardClient\n}\n\nconst Buttons: FC<Props> = (props: Props) => {\n  const buttons = Array.from(props.buttons)\n  const elms: JSX.Element[] = buttons.map(([name, option]) => {\n    const onClick = () => props.sbclient.updateButton(option)\n    return <Button key={name} label={name} onClick={onClick} />\n  })\n\n  return <div className=\"OptionButton\">{elms}</div>\n}\n\nexport default observer(Buttons)\n","import { observer } from 'mobx-react-lite'\nimport React, { FC } from 'react'\nimport './Check.scss'\n\nexport interface Props {\n  label: string\n  value: boolean\n  name: string\n  onChange: (b: boolean) => Promise<void>\n}\n\nconst Check: FC<Props> = (props: Props) => {\n  const { label, value, name } = props\n  const id = `FormCheck-${name}`\n\n  return (\n    <div className=\"FormCheck\">\n      <span>{label}</span>\n      <div className=\"FormCheckToggle\">\n        <input\n          id={id}\n          name={id}\n          type=\"checkbox\"\n          onChange={e => props.onChange(e.target.checked)}\n          checked={value}\n        />\n        <label htmlFor={id}>\n          <div\n            className=\"ToggleSwitch\"\n            data-checked=\"ON\"\n            data-unchecked=\"OFF\"\n          />\n        </label>\n      </div>\n    </div>\n  )\n}\n\nexport default observer(Check)\n","import { observer } from 'mobx-react-lite'\nimport React, { FC } from 'react'\nimport { ShogiBoardClient } from '../../../../infrastructure/ShogiBoardClient'\nimport { Check as OptionCheck } from '../../../../model/engine/Optoin'\nimport Check from '../../../form/Check'\n\nexport interface Props {\n  checks: Map<string, OptionCheck>\n  sbclient: ShogiBoardClient\n}\n\nconst Checks: FC<Props> = (props: Props) => {\n  const checks = Array.from(props.checks)\n  const elms: JSX.Element[] = checks.map(([name, option]) => {\n    const onChange = (b: boolean) => {\n      option.setValue(b)\n      return props.sbclient.updateCheck(option)\n    }\n\n    return (\n      <Check\n        key={name}\n        label={name}\n        name={name}\n        value={option.value}\n        onChange={onChange}\n      />\n    )\n  })\n\n  return <div>{elms}</div>\n}\n\nexport default observer(Checks)\n","import { observer } from 'mobx-react-lite'\nimport React, { FC } from 'react'\nimport { ShogiBoardClient } from '../../../../infrastructure/ShogiBoardClient'\nimport { Range as OptionRange } from '../../../../model/engine/Optoin'\n\nexport interface Props {\n  option: OptionRange\n  sbclient: ShogiBoardClient\n}\n\nconst Range: FC<Props> = (props: Props) => {\n  const { name, value, inputValue, min, max } = props.option\n  // inputValue が Number && inRange のとき、 val に値をセットするようにしているため\n  // val と inputValue が一致していれば正しい値\n  const isValid: boolean = value.toString() === inputValue\n  const className: string = 'FormTextInput' + (isValid ? '' : 'FormTextInvalid')\n  const labelText: string = `${name}(${min}~${max})`\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { option, sbclient } = props\n    option.setValue(e.target.value)\n    return sbclient.updateRange(option)\n  }\n\n  return (\n    <div className=\"FormText\">\n      <input\n        className={className}\n        type=\"text\"\n        value={inputValue}\n        placeholder=\" \"\n        onChange={onChange}\n        required\n        min={min}\n        max={max}\n      />\n      <label>{labelText}</label>\n    </div>\n  )\n}\n\nexport default observer(Range)\n","import { observer } from 'mobx-react-lite'\nimport React, { FC } from 'react'\nimport { ShogiBoardClient } from '../../../../infrastructure/ShogiBoardClient'\nimport { Range as OptionRange } from '../../../../model/engine/Optoin'\nimport Range from './Range'\n\nexport interface Props {\n  ranges: Map<string, OptionRange>\n  sbclient: ShogiBoardClient\n}\n\nconst Ranges: FC<Props> = (props: Props) => {\n  const { ranges, sbclient } = props\n\n  const elms: JSX.Element[] = Array.from(ranges).map(([name, option]) => (\n    <Range key={name} option={option} sbclient={sbclient} />\n  ))\n\n  return <div>{elms}</div>\n}\n\nexport default observer(Ranges)\n","import { observer } from 'mobx-react-lite'\nimport React, { ChangeEvent, FC } from 'react'\nimport './Select.scss'\n\nexport interface Props {\n  label: string\n  value: string\n  options: string[]\n  onChange: (s: string) => Promise<void>\n}\n\nconst Select: FC<Props> = (props: Props) => {\n  const { label, value, options } = props\n  const opts = options.map((value: string, i: number) => (\n    <option key={i} value={value}>\n      {value}\n    </option>\n  ))\n\n  const onChange = (e: ChangeEvent<HTMLSelectElement>) => {\n    props.onChange(e.target.value)\n  }\n\n  return (\n    <div className=\"FormSelectContainer\">\n      <label>{label}</label>\n      <div className=\"FormSelect SelectTriangle\">\n        <select onChange={onChange} value={value} required>\n          {opts}\n        </select>\n      </div>\n    </div>\n  )\n}\n\nexport default observer(Select)\n","import { observer } from 'mobx-react-lite'\nimport React, { FC } from 'react'\nimport { ShogiBoardClient } from '../../../../infrastructure/ShogiBoardClient'\nimport { Select as OptionSelect } from '../../../../model/engine/Optoin'\nimport Select from '../../../form/Select'\n\nexport interface Props {\n  selects: Map<string, OptionSelect>\n  sbclient: ShogiBoardClient\n}\n\nconst Selects: FC<Props> = (props: Props) => {\n  const selects = Array.from(props.selects)\n\n  const elms: JSX.Element[] = selects.map(([name, option]) => {\n    const onChange = (s: string) => {\n      option.setValue(s)\n      return props.sbclient.updateSelect(option)\n    }\n\n    return (\n      <Select\n        key={name}\n        label={name}\n        value={option.value}\n        options={option.vars}\n        onChange={onChange}\n      />\n    )\n  })\n\n  return <div>{elms}</div>\n}\n\nexport default observer(Selects)\n","import { observer } from 'mobx-react-lite'\nimport React, { ChangeEvent, FC } from 'react'\nimport './Text.scss'\n\nexport interface Props {\n  value: string\n  label: string\n  onChange: (s: string) => Promise<void>\n  allowEmpty?: boolean\n  placeholder?: string\n}\n\nconst Text: FC<Props> = (props: Props) => {\n  const { value, label, allowEmpty, placeholder } = props\n\n  const classes = ['FormTextInput']\n  if (!allowEmpty && value === '') classes.push('FormTextInvalid')\n  const className: string = classes.join(' ')\n\n  const onChange = (e: ChangeEvent<HTMLInputElement>) => {\n    props.onChange(e.target.value)\n  }\n\n  return (\n    <div className=\"FormText\">\n      <input\n        className={className}\n        type=\"text\"\n        value={value}\n        placeholder={placeholder || ' '}\n        onChange={onChange}\n        required\n      />\n      <label>{label}</label>\n    </div>\n  )\n}\n\nexport default observer(Text)\n","import { observer } from 'mobx-react-lite'\nimport React, { FC } from 'react'\nimport { ShogiBoardClient } from '../../../../infrastructure/ShogiBoardClient'\nimport { Text as OptionText } from '../../../../model/engine/Optoin'\nimport Text from '../../../form/Text'\n\nexport interface Props {\n  texts: Map<string, OptionText>\n  sbclient: ShogiBoardClient\n}\n\nconst Texts: FC<Props> = (props: Props) => {\n  const texts = Array.from(props.texts)\n\n  const strElms: JSX.Element[] = texts.map(([name, option]) => {\n    const onChange = (s: string) => {\n      option.setValue(s)\n      return props.sbclient.updateText(option)\n    }\n\n    return (\n      <Text key={name} label={name} value={option.value} onChange={onChange} />\n    )\n  })\n\n  return <div>{strElms}</div>\n}\n\nexport default observer(Texts)\n","import interval from 'interval-promise'\nimport { observer } from 'mobx-react-lite'\nimport React, { FC } from 'react'\nimport { Info } from '../../../model/engine/Info'\nimport { Thinking } from '../../../model/engine/State'\nimport { EngineState } from '../../../store/EngineState'\nimport { Store, StoreContext } from '../../../store/Store'\nimport './Detail.scss'\nimport Buttons from './form/Buttons'\nimport Checks from './form/Checks'\nimport Ranges from './form/Ranges'\nimport Selects from './form/Selects'\nimport Texts from './form/Texts'\n\nconst GET_RESULT_INTERVAL = 1000 // ms\n\nconst Detail: FC = () => {\n  const { gameState, displayState, engineState }: Store = React.useContext(\n    StoreContext\n  )\n  const { current, options, sbclient }: EngineState = engineState\n  if (!current || !options) return <div />\n\n  const { buttons, checks, ranges, selects, texts } = options\n\n  const disconnect = () => engineState.disconnect()\n  const start = () =>\n    engineState\n      .startThinking()\n      .then(() => displayState.closeMockup())\n      .then(fetchInterval)\n      .catch(e => console.error(e))\n\n  const disconnectBtn = (\n    <button className=\"ButtonDisconnect\" onClick={disconnect}>\n      接続解除\n    </button>\n  )\n\n  const startBtn = (\n    <button className=\"ButtonStartThinking\" onClick={start}>\n      思考開始\n    </button>\n  )\n\n  return (\n    <div className=\"DetailContainer\">\n      <h1 className=\"EngineName\">{current}</h1>\n      {disconnectBtn}\n      {startBtn}\n      <h2 className=\"EngineOption\">オプション</h2>\n      <Buttons buttons={buttons} sbclient={sbclient} />\n      <Checks checks={checks} sbclient={sbclient} />\n      <Ranges ranges={ranges} sbclient={sbclient} />\n      <Selects selects={selects} sbclient={sbclient} />\n      <Texts texts={texts} sbclient={sbclient} />\n      {disconnectBtn}\n      {startBtn}\n    </div>\n  )\n\n  function fetchInterval(): Promise<void> {\n    // 思考を開始したら、思考結果を定期的に取得する\n    return interval(async (_, stop) => {\n      const { current, state, sbclient } = engineState\n      if (!current || state !== Thinking) {\n        stop()\n        return\n      }\n\n      try {\n        const result: Info[] = await sbclient.getResult(gameState.currentMove)\n        await engineState.setResult(result)\n      } catch (e) {\n        console.error(e)\n      }\n    }, GET_RESULT_INTERVAL)\n  }\n}\n\nexport default observer(Detail)\n","import React, { FC } from 'react'\nimport './Loader.scss'\n\nconst Loader: FC = () => {\n  return (\n    <div className=\"Loader sk-fading-circle\">\n      <div className=\"sk-circle1 sk-circle\" />\n      <div className=\"sk-circle2 sk-circle\" />\n      <div className=\"sk-circle3 sk-circle\" />\n      <div className=\"sk-circle4 sk-circle\" />\n      <div className=\"sk-circle5 sk-circle\" />\n      <div className=\"sk-circle6 sk-circle\" />\n      <div className=\"sk-circle7 sk-circle\" />\n      <div className=\"sk-circle8 sk-circle\" />\n      <div className=\"sk-circle9 sk-circle\" />\n      <div className=\"sk-circle10 sk-circle\" />\n      <div className=\"sk-circle11 sk-circle\" />\n      <div className=\"sk-circle12 sk-circle\" />\n    </div>\n  )\n}\n\nexport default Loader\n","import { observer } from 'mobx-react-lite'\nimport React, { FC, useEffect, useRef } from 'react'\nimport { Connecting, NotConnected, State } from '../../../model/engine/State'\nimport { Store } from '../../../store/Store'\nimport { StoreContext } from '../../../store/Store'\nimport Loader from '../../util/Loader'\nimport './List.scss'\n\nconst List: FC = () => {\n  const store: Store = React.useContext(StoreContext)\n  const { engineState } = store\n  const latestEngineState = useRef(engineState)\n  const { names, current, state } = engineState\n\n  useEffect(() => {\n    const engineState = latestEngineState.current\n    engineState.sbclient\n      .init()\n      .then((list: string[]) => engineState.setNames(list))\n      .catch(err => {\n        const msg = [\n          '接続に失敗しました。以下を確認してください。',\n          '1. サーバーが起動しているか',\n          '2. サーバーのURLが正しいか',\n          '3. サーバーのログを確認し、エラー等が出ていないか',\n          '4. サーバーで将棋エンジンの実行パスを設定したか',\n          '5. 将棋エンジンが実行可能であるか',\n        ].join('\\n')\n        console.error(err)\n        engineState.disconnect()\n        alert(msg)\n      })\n  }, [])\n\n  if (names.length === 0)\n    return (\n      <div className=\"ListEngineName\">\n        <span>利用可能な将棋エンジンが設定されていません</span>\n      </div>\n    )\n\n  const engineNames = names.map((name, i) => {\n    const isCurrent: boolean = name === current\n    const loading: boolean = isCurrent && state === Connecting\n    const loader = loading ? <Loader /> : undefined\n    const onClick = () => setCurrentEngine(name, state)\n    return (\n      <div className=\"ListEngineName\" key={i} onClick={onClick}>\n        {loader}\n        <span>{name}</span>\n      </div>\n    )\n  })\n\n  return <>{engineNames}</>\n\n  async function setCurrentEngine(name: string, state: State): Promise<void> {\n    if (state !== NotConnected) return\n    await engineState.connect(name)\n    await store.updatePosition().catch(e => console.error(e))\n  }\n}\n\nexport default observer(List)\n","import { observer } from 'mobx-react-lite'\nimport React, { FC } from 'react'\nimport { MockupHidden } from '../../../model/display/MockupState'\nimport { Connecting, NotConnected } from '../../../model/engine/State'\nimport { EngineState } from '../../../store/EngineState'\nimport { Store, StoreContext } from '../../../store/Store'\nimport CloseButton from '../../util/CloseButton'\nimport Detail from './Detail'\nimport List from './List'\n\nconst Controller: FC = () => {\n  const { engineState, displayState }: Store = React.useContext(StoreContext)\n  const { state }: EngineState = engineState\n\n  // 接続前なら将棋エンジンの一覧画面を出す\n  const isList: boolean = state === NotConnected || state === Connecting\n  const child: JSX.Element = isList ? <List /> : <Detail />\n\n  const onClick = () => displayState.setMockupState(MockupHidden)\n\n  return (\n    <div className=\"Mockup\">\n      <CloseButton onClick={onClick} />\n      {child}\n    </div>\n  )\n}\n\nexport default observer(Controller)\n","import { observer } from 'mobx-react-lite'\nimport React, { FC } from 'react'\nimport { MockupHidden } from '../../model/display/MockupState'\nimport { StoreContext } from '../../store/Store'\nimport Check from '../form/Check'\nimport Text from '../form/Text'\nimport CloseButton from '../util/CloseButton'\n\nconst Setting: FC = () => {\n  const { config, displayState } = React.useContext(StoreContext)\n  const { paintTargets, serverURL, saveToLocalStorage, saveBoardWidth } = config\n\n  return (\n    <div className=\"Mockup\">\n      <CloseButton onClick={() => displayState.setMockupState(MockupHidden)} />\n      <h1>設定</h1>\n      <Text\n        label=\"shogi-board-server の URL\"\n        value={serverURL}\n        allowEmpty={true}\n        onChange={s => config.setServerURL(s)}\n        placeholder=\"(例)http://localhost:8080\"\n      />\n      <Check\n        label=\"駒が移動できるマスに色を付ける\"\n        value={paintTargets}\n        name=\"PaintTargets\"\n        onChange={b => config.setPaintTargets(b)}\n      />\n      <Check\n        label=\"ブラウザに設定を保存する\"\n        value={saveToLocalStorage}\n        name=\"SaveToLocalStorage\"\n        onChange={b => config.setSaveToLocalStorage(b)}\n      />\n      <Check\n        label=\"幅を記憶する\"\n        value={saveBoardWidth}\n        name=\"SaveBoardWidth\"\n        onChange={b => config.setSaveBoardWidth(b)}\n      />\n    </div>\n  )\n}\n\nexport default observer(Setting)\n","import { observer } from 'mobx-react-lite'\nimport React, { CSSProperties, FC } from 'react'\nimport Column1Img from '../../img/components/columns/1.svg'\nimport Column2Img from '../../img/components/columns/2.svg'\nimport Column3Img from '../../img/components/columns/3.svg'\nimport Column4Img from '../../img/components/columns/4.svg'\nimport Column5Img from '../../img/components/columns/5.svg'\nimport Column6Img from '../../img/components/columns/6.svg'\nimport Column7Img from '../../img/components/columns/7.svg'\nimport Column8Img from '../../img/components/columns/8.svg'\nimport Column9Img from '../../img/components/columns/9.svg'\nimport Row1Img from '../../img/components/rows/1.svg'\nimport Row2Img from '../../img/components/rows/2.svg'\nimport Row3Img from '../../img/components/rows/3.svg'\nimport Row4Img from '../../img/components/rows/4.svg'\nimport Row5Img from '../../img/components/rows/5.svg'\nimport Row6Img from '../../img/components/rows/6.svg'\nimport Row7Img from '../../img/components/rows/7.svg'\nimport Row8Img from '../../img/components/rows/8.svg'\nimport Row9Img from '../../img/components/rows/9.svg'\nimport { find } from '../../lib/validatior/utils/algorithm'\nimport { ClickProps } from '../../model/events/ClickProps'\nimport Confirm from '../../model/shogi/Confirm'\nimport { Empty, Piece } from '../../model/shogi/Piece'\nimport Point from '../../model/shogi/Point'\nimport { Gote, Sente, Turn } from '../../model/shogi/Turn'\nimport { StoreContext } from '../../store/Store'\nimport './Cell.scss'\n\nexport interface Props {\n  row: number\n  column: number\n}\n\nconst Cell: FC<Props> = (props: Props) => {\n  const { gameState, config } = React.useContext(StoreContext)\n  const { indexes, selected, confirm, currentMove, moveTargets } = gameState\n  const { row, column } = props\n\n  const getPiece = () => {\n    const isOnBoard: boolean = inRange(row) && inRange(column)\n    if (!isOnBoard) return Empty\n    return gameState.currentMove.pos.pos[row][column]\n  }\n\n  const piece: Piece = getPiece()\n\n  const turn: Turn = currentMove.pos.turn\n  const isTurn: boolean =\n    (piece > 0 && turn === Sente) || (piece < 0 && turn === Gote)\n\n  // 着色する設定 && 駒が移動できるマスである\n  const isTargeted =\n    config.paintTargets && find(moveTargets, { row, column }) !== -1\n\n  const className: string = getClassName({\n    r: row,\n    c: column,\n    rv: indexes[0] === 9,\n    p: piece,\n    sel: selected,\n    confirm: confirm,\n    isTurn,\n    isTargeted,\n  })\n\n  const bgImg = (url: string) => ({ backgroundImage: `url(${url})` })\n  let style: CSSProperties | undefined\n  if (inRange(column) && row === -1) {\n    if (column === 0) style = bgImg(Column1Img)\n    else if (column === 1) style = bgImg(Column2Img)\n    else if (column === 2) style = bgImg(Column3Img)\n    else if (column === 3) style = bgImg(Column4Img)\n    else if (column === 4) style = bgImg(Column5Img)\n    else if (column === 5) style = bgImg(Column6Img)\n    else if (column === 6) style = bgImg(Column7Img)\n    else if (column === 7) style = bgImg(Column8Img)\n    else style = bgImg(Column9Img)\n  } else if (inRange(row) && column === -1) {\n    if (row === 0) style = bgImg(Row1Img)\n    else if (row === 1) style = bgImg(Row2Img)\n    else if (row === 2) style = bgImg(Row3Img)\n    else if (row === 3) style = bgImg(Row4Img)\n    else if (row === 4) style = bgImg(Row5Img)\n    else if (row === 5) style = bgImg(Row6Img)\n    else if (row === 6) style = bgImg(Row7Img)\n    else if (row === 7) style = bgImg(Row8Img)\n    else style = bgImg(Row9Img)\n  }\n\n  return (\n    <div className={className} onClick={() => click()} style={style}>\n      {renderConfirm(confirm)}\n    </div>\n  )\n\n  function renderConfirm(cf: Confirm | null): JSX.Element | undefined {\n    if (!cf || cf.row !== row || cf.column !== column) return\n\n    const isReversed: boolean = indexes[0] === 9\n    const isGote =\n      (isReversed && cf.preserved > 0) || (!isReversed && cf.preserved < 0)\n\n    const className = 'Piece-Confirm Piece-Confirm' + Number(isGote)\n\n    const promote = () => click(cf, true)\n    const preserve = () => click(cf)\n\n    // TODO: この方法だと画面幅によって1pxずれる\n    return (\n      <div className={className}>\n        <div className=\"Piece-Confirm-Promote\" onClick={promote} />\n        <div className=\"Piece-Confirm-Preserve\" onClick={preserve} />\n      </div>\n    )\n  }\n\n  function click(cf?: Confirm, promote?: true) {\n    if (confirm && !cf) return\n    const clicked: Confirm | Piece = cf || getPiece()\n    const p: ClickProps = { clicked, row, column, promote }\n    gameState.clickPiece(p)\n  }\n}\n\ninterface GetClassNameProps {\n  r: number // row\n  c: number // column\n  rv: boolean // isReversed\n  p: Piece\n  sel: Point | null // selected\n  confirm: Confirm | null\n  isTurn: boolean\n  isTargeted: boolean\n}\n\n// つらい感じ\nfunction getClassName(p: GetClassNameProps): string {\n  const { r, c, sel, confirm, rv, isTurn, isTargeted } = p\n  if (\n    !!confirm &&\n    !!sel &&\n    ((r === sel.row && c === sel.column) ||\n      (r === confirm.row && c === confirm.column))\n  ) {\n    // 成・不成の選択ウィンドウができるとき、元の駒の表示は消す\n    // TODO: ひどい\n    p.p = Empty\n  }\n\n  const classes: string[] = ['Cell']\n\n  const rowInRange: boolean = inRange(r)\n  const colInRange: boolean = inRange(c)\n  const isLeft: boolean = rowInRange && ((!rv && c === 8) || (rv && c === 0))\n  const isTop: boolean = colInRange && ((!rv && r === 0) || (rv && r === 8))\n  const isStar: boolean =\n    (!rv &&\n      ((r === 2 && c === 6) ||\n        (r === 2 && c === 3) ||\n        (r === 5 && c === 6) ||\n        (r === 5 && c === 3))) ||\n    (rv &&\n      ((r === 6 && c === 2) ||\n        (r === 6 && c === 5) ||\n        (r === 3 && c === 2) ||\n        (r === 3 && c === 5)))\n  const isSelected: boolean =\n    rowInRange && colInRange && !!sel && sel.row === r && sel.column === c\n\n  if (rowInRange && colInRange) {\n    classes.push('Piece')\n    classes.push('Piece-Bordered')\n  }\n\n  const rvp: number | undefined = p.p && rv ? p.p * -1 : p.p\n  if (rvp) classes.push(`Piece-${rvp}`)\n  if (isTurn) classes.push('Piece-Turn')\n  if (isSelected) classes.push('Piece-Selected')\n  if (isTargeted) classes.push('Piece-Targeted')\n  if (isLeft) classes.push('Piece-Left')\n  if (isTop) classes.push('Piece-Top')\n\n  const isEdge = (c === -1 && rowInRange) || (r === -1 && colInRange)\n  if (isEdge) classes.push('Cell-Edge')\n  if (isStar) classes.push('Piece-Star')\n\n  return classes.join(' ')\n}\n\nfunction inRange(n: number): boolean {\n  return 0 <= n && n <= 8\n}\n\nexport default observer(Cell)\n","import { observer } from 'mobx-react-lite'\nimport React, { FC } from 'react'\nimport {\n  MockupEngineControl,\n  MockupServerSetting,\n  MockupSetting,\n} from '../../model/display/MockupState'\nimport { StoreContext } from '../../store/Store'\nimport Controller from '../engine/connection/Controller'\nimport Setting from '../setting/Setting'\nimport './Board.scss'\nimport Cell from './Cell'\n\nconst Board: FC = () => {\n  const { gameState, displayState } = React.useContext(StoreContext)\n  const idx = gameState.indexes\n  const rows = idx.map(r =>\n    idx\n      .slice()\n      .reverse()\n      .map(c => <Cell key={r * 10 + c} row={r} column={c} />)\n  )\n\n  return (\n    <div className=\"BoardContainer\">\n      <div className=\"ResetPseudo\">\n        <div className=\"Board\">{rows}</div>\n        {renderMockup()}\n      </div>\n    </div>\n  )\n\n  function renderMockup() {\n    const { mockup } = displayState\n    if (mockup === MockupEngineControl) return <Controller />\n    // TODO: server setting は別に分ける？\n    if (mockup === MockupSetting || mockup === MockupServerSetting)\n      return <Setting />\n  }\n}\n\nexport default observer(Board)\n","import History, { isBranch, KifComponent } from '../../model/kif/History'\nimport Kif from '../../model/kif/Kif'\n\nexport function getAsString(k: Kif): string {\n  if (k.history.moves.length < 1) return ''\n  return getRec({\n    moves: k.history.moves.slice(1),\n    index: k.history.index,\n  })\n}\n\nfunction getRec(h: History): string {\n  return h.moves\n    .map((kc: KifComponent) =>\n      isBranch(kc) ? getRec(kc.branches[kc.index]) : `${kc.index} ${kc.str}`\n    )\n    .join('\\n')\n}\n","import { observer } from 'mobx-react-lite'\nimport React, { FC } from 'react'\nimport ConfigurationImg from '../../img/components/buttons/configuration.svg'\nimport ConnectToEngineImg from '../../img/components/buttons/connect-to-engine.svg'\nimport CopyKifImg from '../../img/components/buttons/copy-kif.svg'\nimport NextFiveImg from '../../img/components/buttons/next-five.svg'\nimport NextOneImg from '../../img/components/buttons/next-one.svg'\nimport PrevFiveImg from '../../img/components/buttons/prev-five.svg'\nimport PrevOneImg from '../../img/components/buttons/prev-one.svg'\nimport ReverseImg from '../../img/components/buttons/reverse.svg'\nimport StopEngineImg from '../../img/components/buttons/stop-engine.svg'\nimport { getAsString } from '../../lib/kif-handler/getAsString'\nimport {\n  MockupEngineControl,\n  MockupServerSetting,\n  MockupSetting,\n} from '../../model/display/MockupState'\nimport { Thinking } from '../../model/engine/State'\nimport { StoreContext } from '../../store/Store'\nimport './Buttons.scss'\n\nconst Buttons: FC = () => {\n  const { gameState, displayState, engineState, config } = React.useContext(\n    StoreContext\n  )\n  const { currentMove, kif } = gameState\n  const i: number = currentMove.index\n\n  const prevOne: number = i - 1 < 0 ? 0 : i - 1\n  const nextOne: number = i + 1\n  const prevFive: number = i - 5 < 0 ? 0 : i - 5\n  const nextFive: number = i + 5\n  const skipKif = (i: number) => gameState.clickKif(i)\n\n  const engineOnClick: () => Promise<void> = async () => {\n    const { current, state } = engineState\n    if (!current || state !== Thinking) return await connectToEngine()\n    await engineState.stopThinking()\n  }\n\n  const bgImg = (url: string) => ({ backgroundImage: `url(${url})` })\n\n  return (\n    <div className=\"ButtonsContainer\">\n      <button\n        className=\"PrevOne\"\n        onClick={() => skipKif(prevOne)}\n        style={bgImg(PrevOneImg)}\n      />\n      <button\n        className=\"NextOne\"\n        onClick={() => skipKif(nextOne)}\n        style={bgImg(NextOneImg)}\n      />\n      <button\n        className=\"PrevFive\"\n        onClick={() => skipKif(prevFive)}\n        style={bgImg(PrevFiveImg)}\n      />\n      <button\n        className=\"NextFive\"\n        onClick={() => skipKif(nextFive)}\n        style={bgImg(NextFiveImg)}\n      />\n      <button\n        className=\"Reverse\"\n        onClick={() => gameState.reverse()}\n        style={bgImg(ReverseImg)}\n      />\n      <button\n        className=\"Copy\"\n        data-clipboard-text={getAsString(kif)}\n        style={bgImg(CopyKifImg)}\n      />\n      <button\n        className=\"ConnectToEngine\"\n        onClick={engineOnClick}\n        style={\n          engineState.state === Thinking\n            ? bgImg(StopEngineImg)\n            : bgImg(ConnectToEngineImg)\n        }\n      />\n      <button\n        className=\"Configuration\"\n        onClick={() => displayState.setMockupState(MockupSetting)}\n        style={bgImg(ConfigurationImg)}\n      />\n    </div>\n  )\n\n  async function connectToEngine() {\n    // サーバー URL が設定されてなかったら、設定画面を出す\n    if (config.serverURL === '')\n      return await displayState.setMockupState(MockupServerSetting)\n\n    await displayState.setMockupState(MockupEngineControl)\n  }\n}\n\nexport default observer(Buttons)\n","import { observer } from 'mobx-react-lite'\nimport React, { FC } from 'react'\nimport {\n  Fu0,\n  Gin0,\n  Hisha0,\n  Kaku0,\n  Kei0,\n  Kin0,\n  Kyou0,\n  Piece,\n} from '../../model/shogi/Piece'\nimport { Turn } from '../../model/shogi/Turn'\nimport { StoreContext } from '../../store/Store'\nimport './Captures.scss'\n\nexport interface Props {\n  isLeftSide: boolean\n  captures: number[]\n  isTurn: boolean\n}\n\nconst Captures: FC<Props> = (props: Props) => {\n  const { gameState } = React.useContext(StoreContext)\n  const { selected, currentMove } = gameState\n\n  const { captures, isLeftSide, isTurn } = props\n  const className: string = 'Captures Captures' + Number(isLeftSide)\n\n  return (\n    <div className={className}>\n      {cells('Hisha', Hisha0, captures[6])}\n      {cells('Kaku', Kaku0, captures[5])}\n      {cells('Kin', Kin0, captures[4])}\n      {cells('Gin', Gin0, captures[3])}\n      {cells('Kei', Kei0, captures[2])}\n      {cells('Kyou', Kyou0, captures[1])}\n      {cells('Fu', Fu0, captures[0])}\n    </div>\n  )\n\n  function cells(name: string, pieceId: Piece, count: number): JSX.Element {\n    const turn: Turn = currentMove.pos.turn\n\n    const children = Array.from(Array(count).keys()).map(i => {\n      const selectedClass = isTurn ? getSelectedClass(pieceId, i) : ''\n      const isTurnClass = isTurn ? 'Piece-Turn' : ''\n      const piece = isLeftSide ? -pieceId : pieceId\n      const sideNumber = Number(isLeftSide)\n      const captureClass = `Capture-${pieceId}${sideNumber}${count}${i + 1}`\n      const className = `Piece Piece-${piece} ${isTurnClass} ${selectedClass} ${captureClass}`\n      const key = `Cap-${sideNumber}-${name}-${i}`\n\n      const onClick = () => {\n        if (!isTurn) return\n        const clicked: number = turn * pieceId\n        gameState.clickPiece({ clicked, row: -1, column: -1, i })\n      }\n      return <div key={key} className={className} onClick={onClick} />\n    })\n    const className = `Captures-Inner Captures-${name}`\n    return <div className={className}>{children}</div>\n  }\n\n  function getSelectedClass(pieceId: Piece, index: number): string {\n    return !!selected &&\n    selected.piece &&\n    selected.row === -1 &&\n    selected.column === -1 &&\n    Math.abs(selected.piece) === pieceId /* TODO: すげー嫌 */ &&\n      selected.i === index\n      ? 'Piece-Selected'\n      : ''\n  }\n}\n\nexport default observer(Captures)\n","import { observer } from 'mobx-react-lite'\nimport React, { FC } from 'react'\nimport { Gote, Sente } from '../../model/shogi/Turn'\nimport { StoreContext } from '../../store/Store'\nimport Buttons from './Buttons'\nimport Captures from './Captures'\nimport './LeftSide.scss'\n\nconst LeftSide: FC = () => {\n  const { indexes, currentMove } = React.useContext(StoreContext).gameState\n  const { turn, cap0, cap1 } = currentMove.pos\n  const caps: number[] = indexes[0] === -1 ? cap1 : cap0\n  const isTurn: boolean = indexes[0] === -1 ? turn === Gote : turn === Sente\n\n  return (\n    <div className=\"LeftSide\">\n      <Captures isLeftSide={true} captures={caps} isTurn={isTurn} />\n      <div className=\"LeftInfo\">\n        <div />\n        <Buttons />\n      </div>\n    </div>\n  )\n}\n\nexport default observer(LeftSide)\n","import { observer } from 'mobx-react-lite'\nimport React, { FC, useEffect } from 'react'\nimport { intoView } from '../../lib/dom-handler/intoView'\nimport Branch from '../../model/kif/Branch'\nimport History, { isBranch, KifComponent } from '../../model/kif/History'\nimport { Move } from '../../model/kif/Move'\nimport { StoreContext } from '../../store/Store'\nimport './Kif.scss'\n\nconst CURRENT_KIF_ELM_ID = 'Move-Current'\n\nconst Kif: FC = () => {\n  const { gameState } = React.useContext(StoreContext)\n\n  useEffect(() => {\n    // 自動スクロール\n    // TODO: スマホで使いにくいし自前実装した方がいいかも\n    //       まぁスマホサポートしてないけど\n    intoView(CURRENT_KIF_ELM_ID)\n  })\n\n  const { moves } = gameState.kif.history\n  const elms: JSX.Element[] = renderKif(moves, 0)\n  return (\n    <div className=\"KifContainer\">\n      <div className=\"Kif-Inner\">{elms}</div>\n    </div>\n  )\n\n  function renderKif(moves: KifComponent[], n: number): JSX.Element[] {\n    return moves.flatMap((kc: KifComponent, i: number) => {\n      if (isBranch(kc)) return renderBranch(kc, n + i)\n      return renderMove(kc, n + i)\n    })\n  }\n\n  function renderBranch(b: Branch, n: number): JSX.Element[] {\n    const main: History = b.branches[b.index]\n    const [head, ...rest] = main.moves // head は必ず Move\n\n    const otherHeadsDom: JSX.Element[] = []\n    for (let i = 0; i < b.branches.length; i++) {\n      if (i === b.index) continue\n      const m: Move = b.branches[i].moves[0] as Move // head は必ず Move\n      const key: string = `${n}-${i}`\n      const txt: string = `-- ${m.str}`\n      const onClick = () => gameState.clickKif(n, i)\n      otherHeadsDom.push(\n        <div key={key} className=\"Branch\" onClick={onClick}>\n          <span>{txt}</span>\n        </div>\n      )\n    }\n\n    const restDom = rest.length !== 0 ? renderKif(rest, n + 1) : []\n\n    return [renderMove(head as Move, n)].concat(otherHeadsDom).concat(restDom)\n  }\n\n  function renderMove(m: Move, n: number): JSX.Element {\n    const { currentMove } = gameState\n    const id = currentMove.index === n ? CURRENT_KIF_ELM_ID : undefined\n    const onClick = () => gameState.clickKif(n)\n\n    return (\n      <div key={n} className=\"Move\" id={id} onClick={onClick}>\n        <div className=\"Number code\">{n + '.'}</div>\n        <div className=\"MoveText\">{m.str}</div>\n      </div>\n    )\n  }\n}\n\nexport default observer(Kif)\n","// ただ scrollIntoView を呼ぶだけ\nexport function intoView(id: string): void {\n  const current: HTMLElement | null = document.getElementById(id)\n  if (!current) return\n  if (!(current as any).scrollIntoViewIfNeeded) return\n  ;(current as any).scrollIntoViewIfNeeded()\n}\n","import { observer } from 'mobx-react-lite'\nimport React, { FC } from 'react'\nimport { Gote, Sente } from '../../model/shogi/Turn'\nimport { StoreContext } from '../../store/Store'\nimport Captures from './Captures'\nimport Kif from './Kif'\nimport './RightSide.scss'\n\nconst RightSide: FC = () => {\n  const { indexes, currentMove } = React.useContext(StoreContext).gameState\n  const { turn, cap0, cap1 } = currentMove.pos\n  const caps: number[] = indexes[0] === 9 ? cap1 : cap0\n  const isTurn: boolean = indexes[0] === 9 ? turn === Gote : turn === Sente\n\n  return (\n    <div className=\"RightSide\">\n      <div className=\"RightInfo\">\n        <Kif />\n      </div>\n      <Captures isLeftSide={false} captures={caps} isTurn={isTurn} />\n    </div>\n  )\n}\n\nexport default observer(RightSide)\n","import React, { FC } from 'react'\nimport Board from './Board'\nimport './BoardArea.scss'\nimport LeftSide from './LeftSide'\nimport RightSide from './RightSide'\n\nconst BoardArea: FC = () => {\n  return (\n    <div className=\"BoardArea\">\n      <LeftSide />\n      <Board />\n      <RightSide />\n    </div>\n  )\n}\n\nexport default BoardArea\n","import { observer } from 'mobx-react-lite'\nimport React, { CSSProperties, FC } from 'react'\nimport { Thinking } from '../model/engine/State'\nimport { StoreContext } from '../store/Store'\nimport './App.scss'\nimport SideInfo from './engine/info/SideInfo'\nimport WidthController from './setting/WidthController'\nimport BoardArea from './shogi/BoardArea'\n\nconst App: FC = () => {\n  const { engineState, config } = React.useContext(StoreContext)\n  const { appWidth } = config\n\n  const isThinking: boolean = engineState.state === Thinking\n  const className = 'App App-' + (isThinking ? 'SideInfo' : 'BoardOnly')\n\n  const style: CSSProperties = { width: appWidth ? `${appWidth}px` : '100%' }\n\n  return (\n    <div className=\"AppContainer\" style={style}>\n      <WidthController />\n      <div className={className}>\n        <BoardArea />\n        {isThinking ? <SideInfo /> : null}\n      </div>\n    </div>\n  )\n}\n\nexport default observer(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    )\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import ClipboardJS from 'clipboard'\n// https://github.com/mobxjs/mobx-react-lite/#observer-batching\nimport 'mobx-react-lite/batchingForReactDom'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\nimport './index.scss'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\nnew ClipboardJS('.Copy')\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register()\n"],"sourceRoot":""}