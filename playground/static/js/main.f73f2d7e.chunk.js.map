{"version":3,"sources":["model/engine/State.ts","model/shogi/Piece.ts","lib/game-handler/piece.ts","lib/strings.ts","lib/kif-handler/genKifString.ts","components/engine/info/Columns.tsx","components/engine/info/SideInfo.tsx","model/display/MockupState.ts","components/util/CloseButton.tsx","components/form/Button.tsx","components/engine/connection/form/Buttons.tsx","components/form/Check.tsx","components/engine/connection/form/Checks.tsx","components/engine/connection/form/Range.tsx","components/engine/connection/form/Ranges.tsx","components/form/Select.tsx","components/engine/connection/form/Selects.tsx","components/form/Text.tsx","components/engine/connection/form/Texts.tsx","components/engine/connection/Detail.tsx","components/util/Loader.tsx","components/engine/connection/List.tsx","components/engine/connection/Controller.tsx","components/setting/Setting.tsx","lib/validatior/utils/algorithm.ts","model/shogi/Turn.ts","components/shogi/Cell.tsx","components/shogi/Board.tsx","model/kif/History.ts","lib/kif-handler/getAsString.ts","components/shogi/Buttons.tsx","components/shogi/Captures.tsx","components/shogi/LeftSide.tsx","components/shogi/Kif.tsx","lib/dom-handler/intoView.ts","components/shogi/RightSide.tsx","components/shogi/BoardArea.tsx","components/App.tsx","serviceWorker.ts","config/Config.ts","store/DisplayState.ts","lib/game-handler/captures.ts","lib/game-handler/position.ts","model/engine/Optoin.ts","infrastructure/ShogiBoardClient.ts","store/EngineState.ts","lib/kif-handler/changeIndex.ts","lib/kif-handler/pushMove.ts","lib/validatior/utils/getEmpties.ts","lib/validatior/utils/getFromNexts.ts","lib/validatior/utils/getWithDiff.ts","lib/validatior/pieces/hisha.ts","lib/validatior/pieces/kaku.ts","lib/validatior/getTargets.ts","lib/validatior/pieces/fu.ts","lib/validatior/pieces/kyou.ts","lib/validatior/pieces/kei.ts","lib/validatior/pieces/gin.ts","lib/validatior/pieces/kin.ts","lib/validatior/pieces/gyoku.ts","lib/validatior/pieces/uma.ts","lib/validatior/pieces/ryu.ts","lib/validatior/utils/getGyokuPoint.ts","lib/validatior/utils/isPointed.ts","model/kif/Kif.ts","model/shogi/PositionInit.ts","store/GameState.ts","lib/validatior/utils/filterTargets.ts","lib/kif-handler/getCurrent.ts","store/Store.ts","index.tsx"],"names":["NotConnected","Thinking","Empty","Fu0","Kyou0","Kei0","Gin0","Kin0","Kaku0","Hisha0","Gyoku0","To0","NariKyou0","NariKei0","NariGin0","Uma0","Ryu0","Fu1","Kyou1","Kei1","Gin1","Kin1","Kaku1","Hisha1","Gyoku1","To1","NariKyou1","NariKei1","NariGin1","Uma1","Ryu1","promote","p","demote","Math","abs","canPromote","props","sourceRow","isPromotable","piece","rows","isInEnemyArea","includes","destRow","columns","rowString","r","columnString","c","genKifString","_ref","checkPromotable","source","dest","pc","Error","pieceString","dr","row","dc","column","concat","sr","sc","Columns","inject","observer","result","this","store","engineState","map","i","moves","m","n","kif","react_default","a","createElement","key","className","id","score","Component","SideInfo","Columns_Columns","MockupHidden","MockupEngineControl","MockupServerSetting","MockupSetting","CloseButton","_this","one","line","two","onClick","width","height","x1","y1","x2","y2","stroke","strokeWidth","Button","label","Buttons","getOnClick","option","Object","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","sbclient","updateButton","stop","_this2","buttons","elms","Array","from","_ref2","_ref3","slicedToArray","name","Button_Button","Check","_this$props","value","type","onChange","e","target","checked","htmlFor","data-checked","data-unchecked","Checks","getOnChange","b","setValue","updateCheck","_x","apply","arguments","checks","Check_Check","Range","update","updateRange","_this$props$option","inputValue","min","max","toString","labelText","placeholder","required","Ranges","ranges","Range_Range","Select","options","opts","renderOptions","vars","Selects","s","updateSelect","selects","Select_Select","Text","allowEmpty","classes","push","join","Texts","updateText","texts","strElms","Text_Text","GET_RESULT_INTERVAL","Detail","disconnect","start","displayState","startThinking","then","closeMockup","fetchInterval","catch","console","error","_callee2","_context2","interval","_","_ref4","gameState","current","state","abrupt","getResult","currentMove","sent","setResult","t0","_x2","_engineState","disconnectBtn","startBtn","Buttons_Buttons","Checks_Checks","Ranges_Ranges","Selects_Selects","Texts_Texts","Loader","List","names","length","loader","Loader_Loader","undefined","setCurrentEngine","connect","updatePosition","init","list","setNames","err","msg","alert","Controller","close","setMockupState","child","List_List","Detail_Detail","CloseButton_CloseButton","Setting","config","paintTargets","serverURL","saveToCookie","setServerURL","setPaintTargets","setSaveToCookie","comp","find","pts","l","Sente","Gote","Cell","getPiece","inRange","pos","_this$props2","indexes","selected","confirm","moveTargets","turn","isTurn","isTargeted","sel","rowInRange","colInRange","isLeft","rv","isTop","isStar","isSelected","rvp","pieceImg","pieceTurn","pieceSelected","pieceTargeted","left","top","edgeText","star","getClassName","click","renderConfirm","renderEdgeTextRow","renderEdgeTextColumn","cf","_this3","_this$props3","isReversed","isGote","preserved","Number","_this$props4","_this$props5","_this$props6","clicked","clickPiece","Board","idx","slice","reverse","Cell_Cell","renderMockup","mockup","Controller_Controller","Setting_Setting","isBranch","getAsString","k","history","getRec","h","kc","branches","index","str","kifHandler","clickKif","engineOnClick","connectToEngine","stopThinking","log","showSetting","_callee3","_context3","_ref6","engineButtonText","prevOne","nextOne","prevFive","nextFive","data-clipboard-text","Captures","captures","isLeftSide","cells","pieceId","count","children","keys","selectedClass","getSelectedClass","isTurnClass","sideNumber","captureClass","LeftSide","_gameState","_currentMove$pos","cap0","cap1","caps","Captures_Captures","shogi_Buttons_Buttons","Kif","renderKif","nested","renderBranch","renderMove","prototype","main","_main$moves","toArray","head","rest","otherHeadsDom","_loop","txt","restDom","document","getElementById","scrollIntoViewIfNeeded","intoView","RightSide","Kif_Kif","BoardArea","LeftSide_LeftSide","Board_Board","RightSide_RightSide","App","isThinking","en","renderEngineInfo","BoardArea_BoardArea","SideInfo_SideInfo","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","DefaultConfig","Config_class","classCallCheck","initializerDefineProperty","_descriptor","_descriptor2","_descriptor3","expire","expires","Cookies","get","createClass","_setPaintTargets","set","String","_setServerURL","_setSaveToCookie","values","forEach","remove","_x3","applyDecoratedDescriptor","observable","configurable","enumerable","writable","initializer","action","getOwnPropertyDescriptor","DefaultDisplayState","DisplayState_class","DisplayState_descriptor","_setMockupState","_closeMockup","handle","cap","f","v","move","handleCaptures","d","increaseCaptures","decreaseCaptures","updatedCap0","updatedCap1","moveOnBoard","moveCount","moveBoardOnly","Optoin_class","initial","Optoin_descriptor","default","_class3","Optoin_descriptor2","Optoin_descriptor3","isNaN","_class5","_descriptor4","_class7","_descriptor5","DEBOUNCE_MILLIS","ShogiBoardClient","engineName","_engineName","_serverURL","engineNameKey","debounce","rng","post","_init","url","res","buildUrl","axios","data","_connect","_callee4","_context4","_close","_callee5","_context5","_start","_callee6","_context6","_stop","_callee7","_context7","_getOptions","_callee8","_context8","Map","t","_updateButton","_callee9","btn","_context9","_updateCheck","_callee10","chk","_context10","_x4","_updateSelect","_callee11","_context11","_x5","_getResult","_callee12","resp","_context12","entries","sort","info","mp","isPromoted","_ref5","shortid","generate","_x6","_setPosition","_callee13","_context13","_x7","_get","_callee14","path","_context14","_x8","_post","_callee15","body","_context15","headers","Content-Type","_x9","_x10","_buildUrl","_callee16","withName","query","_context16","encodeURIComponent","_x11","_x12","DefaultEngineState","EngineState_class","EngineState_descriptor","EngineState_descriptor2","EngineState_descriptor3","EngineState_descriptor4","EngineState_descriptor5","_descriptor6","_setNames","_setState","setState","getOptions","_disconnect","finish","_startThinking","_stopThinking","_setResult","_updatePosition","setPosition","computed","changeHistory","x","y","lastIndex","last","xPassesIfBranch","changeBranch","pushToHistory","lastIsCurrent","pushToBranch","nextIndex","moveEquals","tail","createBranch","recursive","indexOfNewMove","findIndex","toHistory","getEmpties","invalidRows","invalidColumns","points","getFromNexts","nexts","getWithDiff","rowDiff","columnDiff","hisha","diffList","kaku","getTargets","point","columnsOfContainingFu","col","invalidRow","nextRow","fu","diff","kyou","invalidRow1","invalidRow2","kei","gin","kin","gyoku","kakuPoint","kakuTargets","targets","uma","hishaPoint","hishaTargets","ryu","getGyokuPoint","isPointed","attacker","ignoreCheckLeaving","newKif","initPos","meta","version","player","sente","gote","handicap","DefaultGameState","GameState_class","GameState_descriptor","GameState_descriptor2","GameState_descriptor3","GameState_descriptor4","GameState_descriptor5","isPiece","cp","selectedAgain","ownerIsTurn","filtered","filter","gp","moved","isFu","isFromCapture","enemyGyoku","fuIsPointed","filteredEnemyGyokuTargets","filterTargets","moveAndUpdateState","old","moveProps","kifStr","moveForKif","mustPromote","promoted","branchIndex","moveOrBranch","getCurrent","Store_class","DefaultStore","Store_descriptor","Store_descriptor2","Store_descriptor3","Store_descriptor4","observe","change","newValue","ReactDOM","render","index_module","App_App","ClipboardJS","URL","process","href","origin","addEventListener","fetch","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.f73f2d7e.chunk.js","sourcesContent":["// 将棋エンジンの状態を表すID\nexport type State = 0 | 1 | 2 | 3 | 4\n\n// 接続前\nexport const NotConnected: State = 0\n\n// 接続中・ローディング中のComponentを表示するため\nexport const Connecting: State = 1\n\n// 接続済\nexport const Connected: State = 2\n\n// 将棋エンジン、待機中(思考中ではない)\nexport const StandBy: State = 3\n\n// 将棋エンジン思考中\nexport const Thinking: State = 4\n","export type Piece = number\n\nexport const Empty: Piece = 0\n\nexport const Fu0: Piece = 1\nexport const Kyou0: Piece = 2\nexport const Kei0: Piece = 3\nexport const Gin0: Piece = 4\nexport const Kin0: Piece = 5\nexport const Kaku0: Piece = 6\nexport const Hisha0: Piece = 7\nexport const Gyoku0: Piece = 8\nexport const To0: Piece = 11\nexport const NariKyou0: Piece = 12\nexport const NariKei0: Piece = 13\nexport const NariGin0: Piece = 14\nexport const Uma0: Piece = 16\nexport const Ryu0: Piece = 17\n\nexport const Fu1: Piece = -Fu0\nexport const Kyou1: Piece = -Kyou0\nexport const Kei1: Piece = -Kei0\nexport const Gin1: Piece = -Gin0\nexport const Kin1: Piece = -Kin0\nexport const Kaku1: Piece = -Kaku0\nexport const Hisha1: Piece = -Hisha0\nexport const Gyoku1: Piece = -Gyoku0\nexport const To1: Piece = -To0\nexport const NariKyou1: Piece = -NariKyou0\nexport const NariKei1: Piece = -NariKei0\nexport const NariGin1: Piece = -NariGin0\nexport const Uma1: Piece = -Uma0\nexport const Ryu1: Piece = -Ryu0\n","import {\n  Piece,\n  Empty,\n  Hisha0,\n  Kin0,\n  Fu0,\n  Fu1,\n  Kyou0,\n  Kyou1,\n  Kei0,\n  Kei1,\n} from '../../model/shogi/Piece'\n\n/**\n * 駒を成る\n * canPromote を通っている前提\n * @param p Piece 成る前の駒\n */\nexport function promote(p: Piece): Piece {\n  if (p > 0) return p + 10\n  return p - 10\n}\n\n/**\n * 駒を成る前の駒にする\n * @param p Piece 成駒\n */\nexport function demote(p: Piece): Piece {\n  if (Math.abs(p) < 10) return p\n\n  if (p < 0) return p + 10\n  return p - 10\n}\n\nexport interface CanPromoteProps {\n  // 移動前の行\n  sourceRow: number\n\n  // 移動後の行\n  destRow: number\n\n  // 移動する駒\n  piece: Piece\n}\n\n/**\n * 成・不成の選択ができるかどうか\n * 選択可能: true\n * 選択不可: false\n * @param props CanPromoteProps\n * @returns boolean\n *          成れる駒 && sourceRow か destRow が敵陣なら true\n *          成れない駒(金とか、既に成駒の場合)なら false\n */\nexport function canPromote(props: CanPromoteProps): boolean {\n  // 持ち駒\n  if (props.sourceRow === -1) return false\n\n  const isPromotable: boolean =\n    props.piece !== Empty &&\n    Math.abs(props.piece) !== Kin0 &&\n    Math.abs(props.piece) <= Hisha0\n\n  const rows: number[] = props.piece > 0 ? [0, 1, 2] : [6, 7, 8]\n  const isInEnemyArea: boolean =\n    rows.includes(props.sourceRow) || rows.includes(props.destRow)\n\n  return isPromotable && isInEnemyArea\n}\n\n/**\n * 移動後に、必ず成る必要があるか\n * 歩・香・桂が不成の場合に次に動けないとき true\n * @param p Piece 動かす駒\n * @param row 移動後の行\n * @returns boolean\n *          成必要がある場合 true\n */\nexport function mustPromote(p: Piece, row: number): boolean {\n  return (\n    ((p === Fu0 || p === Kyou0) && row === 0) ||\n    ((p === Fu1 || p === Kyou1) && row === 8) ||\n    (p === Kei0 && (row === 0 || row === 1)) ||\n    (p === Kei1 && (row === 8 || row === 7))\n  )\n}\n","import {\n  Fu0,\n  Gin0,\n  Gyoku0,\n  Hisha0,\n  Kaku0,\n  Kei0,\n  Kin0,\n  Kyou0,\n  NariGin0,\n  NariKei0,\n  NariKyou0,\n  Piece,\n  Ryu0,\n  To0,\n  Uma0,\n} from '../model/shogi/Piece'\n\nconst rows = ['一', '二', '三', '四', '五', '六', '七', '八', '九']\nconst columns = ['１', '２', '３', '４', '５', '６', '７', '８', '９']\n\nexport function rowString(r: number): string {\n  return rows[r]\n}\n\nexport function columnString(c: number): string {\n  return columns[c]\n}\n\nexport function pieceString(piece: Piece): string {\n  const p = Math.abs(piece)\n\n  if (p === Fu0) return '歩'\n  if (p === Kyou0) return '香'\n  if (p === Kei0) return '桂'\n  if (p === Gin0) return '銀'\n  if (p === Kin0) return '金'\n  if (p === Kaku0) return '角'\n  if (p === Hisha0) return '飛'\n  if (p === Gyoku0) return '玉'\n  if (p === To0) return 'と'\n  if (p === NariKyou0) return '成香'\n  if (p === NariKei0) return '成桂'\n  if (p === NariGin0) return '成銀'\n  if (p === Uma0) return '馬'\n  if (p === Ryu0) return '龍'\n\n  throw new Error('Failed to ident piece name. received: ' + piece)\n}\n","import { MoveProps } from '../../model/events/MoveProps'\nimport { canPromote, demote } from '../game-handler/piece'\nimport { columnString, pieceString, rowString } from '../strings'\n\n/**\n * 棋譜の文字列を生成する\n * @param p MoveProps\n * @param checkPromotable 将棋エンジンからもらう値では、不成or無印の判定が難しいので、\n *                        ここでチェックする。\n */\nexport function genKifString(\n  { source, dest, piece, promote }: MoveProps,\n  checkPromotable?: boolean\n): string {\n  const pc: string = pieceString(promote ? demote(piece) : piece)\n  const dr: string = rowString(dest.row)\n  const dc: string = columnString(dest.column)\n\n  if (source.row === -1) return `${dc}${dr}${pc}打`\n\n  const sr: number = source.row + 1\n  const sc: number = source.column + 1\n  const promoteStr: () => string = () => {\n    if (promote === true) return '成'\n\n    // undefined は無印\n    if (promote !== false) return ''\n\n    // promote === false && チェックしない\n    // or\n    // promote === false && 成れる駒\n    // なら不成\n    if (\n      !checkPromotable ||\n      canPromote({ sourceRow: source.row, destRow: dest.row, piece: piece })\n    )\n      return '不成'\n\n    return ''\n  }\n\n  return `${dc}${dr}${pc}${promoteStr()}(${sc}${sr})`\n}\n","import { inject, observer } from 'mobx-react'\nimport React, { Component } from 'react'\nimport { genKifString } from '../../../lib/kif-handler/genKifString'\nimport { Store } from '../../../model/store/Store'\nimport './Columns.scss'\n\ninterface Props {\n  store?: Store\n}\n\n@inject('store')\n@observer\nexport default class Columns extends Component<Props> {\n  render(): JSX.Element[] | JSX.Element {\n    const { result } = this.props.store!.engineState\n    if (!result) return <div />\n\n    return result.map(i => {\n      const moves = i.moves.map((m, n) => {\n        const kif = genKifString(m, true)\n        // TODO: key\n        return (\n          <div key={n} className=\"EngineInfoRowContent\">\n            {kif}\n          </div>\n        )\n      })\n\n      return (\n        <div key={i.id} className=\"EngineInfoColumn\">\n          <div className=\"EngineInfoRow EngineInfoRowContainer\">\n            <div className=\"EngineInfoRowLabel\">score</div>\n            <div className=\"EngineInfoRowContent Center\">{i.score}</div>\n          </div>\n          <div className=\"EngineInfoRow EngineInfoRowContainer\">\n            <div className=\"EngineInfoRowLabel\">読み</div>\n            {moves}\n          </div>\n        </div>\n      )\n    })\n  }\n}\n","import React, { Component } from 'react'\nimport Columns from './Columns'\nimport './SideInfo.scss'\n\nexport default class SideInfo extends Component {\n  render() {\n    return (\n      <div className=\"EngineSideInfo\">\n        <div className=\"EngineSideInfoContainer\">\n          <Columns />\n        </div>\n      </div>\n    )\n  }\n}\n","// モックアップの表示をコントロールするための情報\nexport type MockupState = number\n\n// 非表示\nexport const MockupHidden: MockupState = 1\n\n// 将棋エンジンとの接続を制御したりする画面\nexport const MockupEngineControl: MockupState = 2\n\n// shogi-board-server の URL が設定されていないとき\n// 将棋エンジンに接続するボタンが押されたときに出す画面\nexport const MockupServerSetting: MockupState = 3\n\n// 設定画面\nexport const MockupSetting: MockupState = 4\n","import React, { Component } from 'react'\nimport './Mockup.scss'\n\ninterface Props {\n  onClick: () => Promise<void>\n}\n\nexport default class CloseButton extends Component<Props> {\n  render() {\n    const width = 20\n    const one = this.line(0, 0, width, width)\n    const two = this.line(width, 0, 0, width)\n\n    return (\n      <div onClick={() => this.props.onClick()}>\n        <svg width={width} height={width} className=\"MockupCloseButton\">\n          {one}\n          {two}\n        </svg>\n      </div>\n    )\n  }\n\n  line(x1: number, y1: number, x2: number, y2: number) {\n    return (\n      <line x1={x1} y1={y1} x2={x2} y2={y2} stroke=\"black\" strokeWidth=\"2\" />\n    )\n  }\n}\n","import { observer } from 'mobx-react'\nimport React, { Component } from 'react'\nimport './Button.scss'\n\nexport interface Props {\n  label: string\n  onClick: () => Promise<void>\n}\n\n@observer\nexport default class Button extends Component<Props> {\n  render() {\n    const { label } = this.props\n    return (\n      <button className=\"FormButton\" onClick={() => this.props.onClick()}>\n        {label}\n      </button>\n    )\n  }\n}\n","import { observer } from 'mobx-react'\nimport React, { Component } from 'react'\nimport { ShogiBoardClient } from '../../../../infrastructure/ShogiBoardClient'\nimport { Button as OptionButton } from '../../../../model/engine/Optoin'\nimport Button from '../../../form/Button'\nimport './Buttons.scss'\n\nexport interface Props {\n  buttons: Map<string, OptionButton>\n  sbclient: ShogiBoardClient\n}\n\n@observer\nexport default class Buttons extends Component<Props> {\n  render() {\n    const { buttons } = this.props\n\n    const elms: JSX.Element[] = Array.from(buttons).map(([name, option]) => {\n      const onClick = this.getOnClick(option)\n      return <Button key={name} label={name} onClick={onClick} />\n    })\n\n    return <div className=\"OptionButton\">{elms}</div>\n  }\n\n  getOnClick = (option: OptionButton) => async () => {\n    const { sbclient } = this.props\n    sbclient.updateButton(option)\n  }\n}\n","import { observer } from 'mobx-react'\nimport React, { Component } from 'react'\nimport './Check.scss'\n\nexport interface Props {\n  label: string\n  value: boolean\n  name: string\n  onChange: (b: boolean) => Promise<void>\n}\n\n@observer\nexport default class Check extends Component<Props> {\n  render() {\n    const { label, value, name } = this.props\n    const id = `FormCheck-${name}`\n\n    return (\n      <div className=\"FormCheck\">\n        <span>{label}</span>\n        <div className=\"FormCheckToggle\">\n          <input\n            id={id}\n            name={id}\n            type=\"checkbox\"\n            onChange={e => this.props.onChange(e.target.checked)}\n            checked={value}\n          />\n          <label htmlFor={id}>\n            <div\n              className=\"ToggleSwitch\"\n              data-checked=\"ON\"\n              data-unchecked=\"OFF\"\n            />\n          </label>\n        </div>\n      </div>\n    )\n  }\n}\n","import { observer } from 'mobx-react'\nimport React, { Component } from 'react'\nimport { ShogiBoardClient } from '../../../../infrastructure/ShogiBoardClient'\nimport { Check as OptionCheck } from '../../../../model/engine/Optoin'\nimport Check from '../../../form/Check'\n\nexport interface Props {\n  checks: Map<string, OptionCheck>\n  sbclient: ShogiBoardClient\n}\n\n@observer\nexport default class Checks extends Component<Props> {\n  render() {\n    const { checks } = this.props\n\n    const elms: JSX.Element[] = Array.from(checks).map(([name, option]) => {\n      const onChange = this.getOnChange(option)\n      return (\n        <Check\n          key={name}\n          label={name}\n          name={name}\n          value={option.value}\n          onChange={onChange}\n        />\n      )\n    })\n\n    return <div>{elms}</div>\n  }\n\n  getOnChange = (option: OptionCheck) => async (b: boolean) => {\n    const { sbclient } = this.props\n    option.setValue(b)\n    sbclient.updateCheck(option)\n  }\n}\n","import { observer } from 'mobx-react'\nimport React, { Component } from 'react'\nimport { ShogiBoardClient } from '../../../../infrastructure/ShogiBoardClient'\nimport { Range as OptionRange } from '../../../../model/engine/Optoin'\n\nexport interface Props {\n  option: OptionRange\n  sbclient: ShogiBoardClient\n}\n\n@observer\nexport default class Range extends Component<Props> {\n  render(): JSX.Element {\n    const { name, value, inputValue, min, max } = this.props.option\n    // inputValue が Number && inRange のとき、 val に値をセットするようにしているため\n    // val と inputValue が一致していれば正しい値\n    const isValid: boolean = value.toString() === inputValue\n    const className: string = isValid\n      ? 'FormTextInput'\n      : 'FormTextInput FormTextInvalid'\n    const labelText: string = `${name}(${min}~${max})`\n\n    return (\n      <div className=\"FormText\">\n        <input\n          className={className}\n          type=\"text\"\n          value={inputValue}\n          placeholder=\" \"\n          onChange={this.update}\n          required\n          min={min}\n          max={max}\n        />\n        <label>{labelText}</label>\n      </div>\n    )\n  }\n\n  private update = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { option, sbclient } = this.props\n    option.setValue(e.target.value)\n    sbclient.updateRange(option)\n  }\n}\n","import { observer } from 'mobx-react'\nimport React, { Component } from 'react'\nimport { ShogiBoardClient } from '../../../../infrastructure/ShogiBoardClient'\nimport { Range as OptionRange } from '../../../../model/engine/Optoin'\nimport Range from './Range'\n\nexport interface Props {\n  ranges: Map<string, OptionRange>\n  sbclient: ShogiBoardClient\n}\n\n@observer\nexport default class Ranges extends Component<Props> {\n  render() {\n    const { ranges, sbclient } = this.props\n\n    const elms: JSX.Element[] = Array.from(ranges).map(([name, option]) => (\n      <Range key={name} option={option} sbclient={sbclient} />\n    ))\n\n    return <div>{elms}</div>\n  }\n}\n","import { observer } from 'mobx-react'\nimport React, { Component } from 'react'\nimport './Select.scss'\n\nexport interface Props {\n  label: string\n  value: string\n  options: string[]\n  onChange: (s: string) => Promise<void>\n}\n\n@observer\nexport default class Select extends Component<Props> {\n  render(): JSX.Element {\n    const { label, value, options } = this.props\n    const opts = this.renderOptions(options)\n\n    return (\n      <div className=\"FormSelectContainer\">\n        <label>{label}</label>\n        <div className=\"FormSelect SelectTriangle\">\n          <select onChange={this.update} value={value} required>\n            {opts}\n          </select>\n        </div>\n      </div>\n    )\n  }\n\n  private renderOptions(vars: string[]): JSX.Element[] {\n    return vars.map((value: string, i: number) => (\n      <option key={i} value={value}>\n        {value}\n      </option>\n    ))\n  }\n\n  private update = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    this.props.onChange(e.target.value)\n  }\n}\n","import { observer } from 'mobx-react'\nimport React, { Component } from 'react'\nimport { ShogiBoardClient } from '../../../../infrastructure/ShogiBoardClient'\nimport { Select as OptionSelect } from '../../../../model/engine/Optoin'\nimport Select from '../../../form/Select'\n\nexport interface Props {\n  selects: Map<string, OptionSelect>\n  sbclient: ShogiBoardClient\n}\n\n@observer\nexport default class Selects extends Component<Props> {\n  render() {\n    const { selects } = this.props\n\n    const elms: JSX.Element[] = Array.from(selects).map(([name, option]) => {\n      const onChange = this.getOnChange(option)\n      return (\n        <Select\n          key={name}\n          label={name}\n          value={option.value}\n          options={option.vars}\n          onChange={onChange}\n        />\n      )\n    })\n\n    return <div>{elms}</div>\n  }\n\n  getOnChange = (option: OptionSelect) => async (s: string) => {\n    const { sbclient } = this.props\n    option.setValue(s)\n    sbclient.updateSelect(option)\n  }\n}\n","import { observer } from 'mobx-react'\nimport React, { Component } from 'react'\nimport './Text.scss'\n\nexport interface Props {\n  value: string\n  label: string\n  onChange: (s: string) => Promise<void>\n  allowEmpty?: boolean\n  placeholder?: string\n}\n\n@observer\nexport default class Text extends Component<Props> {\n  render(): JSX.Element {\n    const { value, label, allowEmpty, placeholder } = this.props\n\n    const classes = ['FormTextInput']\n    if (allowEmpty !== true && value === '') classes.push('FormTextInvalid')\n    const className: string = classes.join(' ')\n\n    return (\n      <div className=\"FormText\">\n        <input\n          className={className}\n          type=\"text\"\n          value={value}\n          placeholder={placeholder || ' '}\n          onChange={this.onChange}\n          required\n        />\n        <label>{label}</label>\n      </div>\n    )\n  }\n\n  private onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    this.props.onChange(e.target.value)\n  }\n}\n","import { observer } from 'mobx-react'\nimport React, { Component } from 'react'\nimport { ShogiBoardClient } from '../../../../infrastructure/ShogiBoardClient'\nimport { Text as OptionText } from '../../../../model/engine/Optoin'\nimport Text from '../../../form/Text'\n\nexport interface Props {\n  texts: Map<string, OptionText>\n  sbclient: ShogiBoardClient\n}\n\n@observer\nexport default class Texts extends Component<Props> {\n  render() {\n    const { texts } = this.props\n\n    const strElms: JSX.Element[] = Array.from(texts).map(([name, option]) => {\n      const onChange = this.getOnChange(option)\n      return (\n        <Text\n          key={name}\n          label={name}\n          value={option.value}\n          onChange={onChange}\n        />\n      )\n    })\n\n    return <div>{strElms}</div>\n  }\n\n  getOnChange = (option: OptionText) => async (s: string) => {\n    const { sbclient } = this.props\n    option.setValue(s)\n    sbclient.updateText(option)\n  }\n}\n","import interval from 'interval-promise'\nimport { inject, observer } from 'mobx-react'\nimport React, { Component } from 'react'\nimport { Info } from '../../../model/engine/Info'\nimport { Thinking } from '../../../model/engine/State'\nimport { Store } from '../../../model/store/Store'\nimport './Detail.scss'\nimport Buttons from './form/Buttons'\nimport Checks from './form/Checks'\nimport Ranges from './form/Ranges'\nimport Selects from './form/Selects'\nimport Texts from './form/Texts'\n\nconst GET_RESULT_INTERVAL = 1000 // ms\n\nexport interface Props {\n  store?: Store\n}\n\n@inject('store')\n@observer\nexport default class Detail extends Component<Props> {\n  render() {\n    const { current, options, sbclient } = this.props.store!.engineState\n    if (!current || !options) return <div />\n\n    const { buttons, checks, ranges, selects, texts } = options\n\n    const disconnectBtn = (\n      <button className=\"ButtonDisconnect\" onClick={this.disconnect}>\n        接続解除\n      </button>\n    )\n\n    const startBtn = (\n      <button className=\"ButtonStartThinking\" onClick={this.start}>\n        思考開始\n      </button>\n    )\n\n    return (\n      <div className=\"DetailContainer\">\n        <h1 className=\"EngineName\">{current}</h1>\n        {disconnectBtn}\n        {startBtn}\n        <h2 className=\"EngineOption\">オプション</h2>\n        <Buttons buttons={buttons} sbclient={sbclient} />\n        <Checks checks={checks} sbclient={sbclient} />\n        <Ranges ranges={ranges} sbclient={sbclient} />\n        <Selects selects={selects} sbclient={sbclient} />\n        <Texts texts={texts} sbclient={sbclient} />\n        {disconnectBtn}\n        {startBtn}\n      </div>\n    )\n  }\n\n  private disconnect = () => this.props.store!.engineState.disconnect()\n  private start = () => {\n    const { engineState, displayState } = this.props.store!\n    engineState\n      .startThinking()\n      .then(() => displayState.closeMockup())\n      .then(this.fetchInterval)\n      .catch(e => console.error(e))\n  }\n\n  private fetchInterval = async () => {\n    // 思考を開始したら、思考結果を定期的に取得する\n    interval(async (_, stop) => {\n      const { gameState, engineState } = this.props.store!\n      const { current, state, sbclient } = engineState\n      if (!current || state !== Thinking) {\n        stop()\n        return\n      }\n      try {\n        const result: Info[] = await sbclient.getResult(gameState.currentMove)\n        await engineState.setResult(result)\n      } catch (e) {\n        console.error(e)\n      }\n    }, GET_RESULT_INTERVAL)\n  }\n}\n","import React, { Component } from 'react'\nimport './Loader.scss'\n\nexport default class Loader extends Component {\n  render() {\n    return (\n      <div className=\"Loader sk-fading-circle\">\n        <div className=\"sk-circle1 sk-circle\" />\n        <div className=\"sk-circle2 sk-circle\" />\n        <div className=\"sk-circle3 sk-circle\" />\n        <div className=\"sk-circle4 sk-circle\" />\n        <div className=\"sk-circle5 sk-circle\" />\n        <div className=\"sk-circle6 sk-circle\" />\n        <div className=\"sk-circle7 sk-circle\" />\n        <div className=\"sk-circle8 sk-circle\" />\n        <div className=\"sk-circle9 sk-circle\" />\n        <div className=\"sk-circle10 sk-circle\" />\n        <div className=\"sk-circle11 sk-circle\" />\n        <div className=\"sk-circle12 sk-circle\" />\n      </div>\n    )\n  }\n}\n","import { inject, observer } from 'mobx-react'\nimport React, { Component } from 'react'\nimport { Connecting, NotConnected, State } from '../../../model/engine/State'\nimport { Store } from '../../../model/store/Store'\nimport Loader from '../../util/Loader'\nimport './List.scss'\n\nexport interface Props {\n  store?: Store\n}\n\n@inject('store')\n@observer\nexport default class List extends Component<Props> {\n  render() {\n    const { names, current, state } = this.props.store!.engineState\n    if (names.length === 0)\n      return (\n        <div className=\"ListEngineName\">\n          <span>利用可能な将棋エンジンが設定されていません</span>\n        </div>\n      )\n\n    return names.map((name, i) => {\n      const isCurrent: boolean = name === current\n      const loading: boolean = isCurrent && state === Connecting\n      const loader = loading ? <Loader /> : undefined\n      const onClick = () => this.setCurrentEngine(name, state)\n      return (\n        <div className=\"ListEngineName\" key={i} onClick={onClick}>\n          {loader}\n          <span>{name}</span>\n        </div>\n      )\n    })\n  }\n\n  private async setCurrentEngine(name: string, state: State): Promise<void> {\n    if (state !== NotConnected) return\n    const { store } = this.props\n    await store!.engineState.connect(name)\n    await store!.updatePosition().catch(e => console.error(e))\n  }\n\n  componentWillMount() {\n    const { engineState }: Store = this.props.store!\n    engineState.sbclient\n      .init()\n      .then((list: string[]) => engineState.setNames(list))\n      .catch(err => {\n        const msg = [\n          '接続に失敗しました。以下を確認してください。',\n          '1. サーバーが起動しているか',\n          '2. サーバーのURLが正しいか',\n          '3. サーバーのログを確認し、エラー等が出ていないか',\n          '4. サーバーで将棋エンジンの実行パスを設定したか',\n          '5. 将棋エンジンが実行可能であるか',\n        ].join('\\n')\n        console.error(err)\n        engineState.disconnect()\n        alert(msg)\n      })\n  }\n}\n","import { inject, observer } from 'mobx-react'\nimport React, { Component } from 'react'\nimport { MockupHidden } from '../../../model/display/MockupState'\nimport { EngineState } from '../../../model/engine/EngineState'\nimport { Connecting, NotConnected } from '../../../model/engine/State'\nimport { Store } from '../../../model/store/Store'\nimport CloseButton from '../../util/CloseButton'\nimport Detail from './Detail'\nimport List from './List'\n\nexport interface Props {\n  store?: Store\n}\n\n@inject('store')\n@observer\nexport default class Controller extends Component<Props> {\n  render() {\n    const { engineState }: Store = this.props.store!\n    const { state }: EngineState = engineState\n\n    // 接続前なら将棋エンジンの一覧画面を出す\n    const isList: boolean = state === NotConnected || state === Connecting\n    const child: JSX.Element = isList ? <List /> : <Detail />\n\n    return (\n      <div className=\"Mockup\">\n        <CloseButton onClick={this.close} />\n        {child}\n      </div>\n    )\n  }\n\n  private close = () =>\n    this.props.store!.displayState.setMockupState(MockupHidden)\n}\n","import { inject, observer } from 'mobx-react'\nimport React, { Component } from 'react'\nimport { MockupHidden } from '../../model/display/MockupState'\nimport { Store } from '../../model/store/Store'\nimport Text from '../form/Text'\nimport CloseButton from '../util/CloseButton'\nimport Check from '../form/Check'\n\nexport interface Props {\n  store?: Store\n}\n\n@inject('store')\n@observer\nexport default class Setting extends Component<Props> {\n  render() {\n    const { config } = this.props.store!\n    const { paintTargets, serverURL, saveToCookie } = config\n    return (\n      <div className=\"Mockup\">\n        <CloseButton onClick={this.close} />\n        <h1>設定</h1>\n        <Text\n          label=\"shogi-board-server の URL\"\n          value={serverURL}\n          allowEmpty={true}\n          onChange={s => config.setServerURL(s)}\n          placeholder=\"(例)http://localhost:8080\"\n        />\n        <Check\n          label=\"駒が移行できるマスに色を付ける\"\n          value={paintTargets}\n          name=\"PaintTargets\"\n          onChange={b => config.setPaintTargets(b)}\n        />\n        <Check\n          label=\"Cookie に設定を保存する\"\n          value={saveToCookie}\n          name=\"SaveToCookie\"\n          onChange={b => config.setSaveToCookie(b)}\n        />\n      </div>\n    )\n  }\n\n  private close = () =>\n    this.props.store!.displayState.setMockupState(MockupHidden)\n}\n","import Point from '../../../model/shogi/Point'\n\nexport function comp(a: Point, b: Point): number {\n  return a.row - b.row || a.column - b.column\n}\n\nexport function find(pts: Point[], p: Point): number {\n  let i = pts.length >> 1\n  let l = 0\n  let r = pts.length - 1\n\n  while (l <= r) {\n    if (pts[i].row === p.row && pts[i].column === p.column) return i\n    if (pts[i].row < p.row) l = i + 1\n    else if (pts[i].row > p.row) r = i - 1\n    else if (pts[i].column < p.column) l = i + 1\n    else r = i - 1\n    i = l + ((r - l) >> 1)\n  }\n\n  return -1\n}\n","// 手番\n//  1: 先手\n// -1: 後手\nexport type Turn = 1 | -1\n\nexport const Sente: Turn = 1\nexport const Gote: Turn = -1\n","import { inject, observer } from 'mobx-react'\nimport React, { Component } from 'react'\nimport { columnString, rowString } from '../../lib/strings'\nimport { find } from '../../lib/validatior/utils/algorithm'\nimport { ClickProps } from '../../model/events/ClickProps'\nimport Confirm from '../../model/shogi/Confirm'\nimport { Empty, Piece } from '../../model/shogi/Piece'\nimport Point from '../../model/shogi/Point'\nimport { Gote, Sente, Turn } from '../../model/shogi/Turn'\nimport { Store } from '../../model/store/Store'\nimport './Cell.scss'\n\nexport interface Props {\n  store?: Store\n  row: number\n  column: number\n}\n\n@inject('store')\n@observer\nexport default class Cell extends Component<Props> {\n  getPiece = () => {\n    const { row, column, store } = this.props\n    const isOnBoard: boolean = inRange(row) && inRange(column)\n    if (!isOnBoard) return Empty\n    return store!.gameState.currentMove.pos.pos[row][column]\n  }\n\n  render(): JSX.Element | undefined {\n    const { row, column, store } = this.props\n    const { config, gameState } = store!\n    const { indexes, selected, confirm, currentMove, moveTargets } = gameState\n    const piece: Piece = this.getPiece()\n\n    const turn: Turn = currentMove.pos.turn\n    const isTurn: boolean =\n      (piece > 0 && turn === Sente) || (piece < 0 && turn === Gote)\n\n    // 着色する設定 && 駒が移動できるマスである\n    const isTargeted =\n      config.paintTargets && find(moveTargets, { row, column }) !== -1\n\n    const className: string = getClassName({\n      r: row,\n      c: column,\n      rv: indexes[0] === 9,\n      p: piece,\n      sel: selected,\n      confirm: confirm,\n      isTurn,\n      isTargeted,\n    })\n\n    return (\n      <div className={className} onClick={() => this.click()}>\n        {this.renderConfirm(confirm)}\n        {this.renderEdgeTextRow()}\n        {this.renderEdgeTextColumn()}\n      </div>\n    )\n  }\n\n  renderConfirm(cf: Confirm | null): JSX.Element | undefined {\n    const { row, column, store } = this.props\n    if (!cf || cf.row !== row || cf.column !== column) return\n\n    const isReversed: boolean = store!.gameState.indexes[0] === 9\n    const isGote =\n      (isReversed && cf.preserved > 0) || (!isReversed && cf.preserved < 0)\n\n    const className = 'Piece-Confirm Piece-Confirm' + Number(isGote)\n\n    const promote = () => this.click(cf, true)\n    const preserve = () => this.click(cf)\n\n    // TODO: この方法だと画面幅によって1pxずれる\n    return (\n      <div className={className}>\n        <div className=\"Piece-Confirm-Promote\" onClick={promote} />\n        <div className=\"Piece-Confirm-Preserve\" onClick={preserve} />\n      </div>\n    )\n  }\n\n  renderEdgeTextRow(): JSX.Element | undefined {\n    const { row, column } = this.props\n    const needText = inRange(column) && row === -1\n    if (needText) return <span>{columnString(column)}</span>\n  }\n\n  renderEdgeTextColumn(): JSX.Element | undefined {\n    const { row, column } = this.props\n    const needText = inRange(row) && column === -1\n    if (needText) return <span>{rowString(row)}</span>\n  }\n\n  click(cf?: Confirm, promote?: true) {\n    const { row, column, store } = this.props\n    if (store!.gameState.confirm && !cf) return\n    const clicked: Confirm | Piece = cf || this.getPiece()\n    const p: ClickProps = { clicked, row, column, promote }\n    store!.gameState.clickPiece(p)\n  }\n}\n\ninterface GetClassNameProps {\n  r: number // row\n  c: number // column\n  rv: boolean // isReversed\n  p: Piece\n  sel: Point | null // selected\n  confirm: Confirm | null\n  isTurn: boolean\n  isTargeted: boolean\n}\n\n// つらい感じ\nfunction getClassName(p: GetClassNameProps): string {\n  if (\n    !!p.confirm &&\n    !!p.sel &&\n    ((p.r === p.sel.row && p.c === p.sel.column) ||\n      (p.r === p.confirm.row && p.c === p.confirm.column))\n  ) {\n    // TODO: ヒドス。あとで必ず修正すること!!\n    p.p = Empty\n  }\n\n  const rowInRange: boolean = inRange(p.r)\n  const colInRange: boolean = inRange(p.c)\n  const isLeft: boolean =\n    rowInRange && ((!p.rv && p.c === 8) || (p.rv && p.c === 0))\n  const isTop: boolean =\n    colInRange && ((!p.rv && p.r === 0) || (p.rv && p.r === 8))\n  const isStar: boolean =\n    (!p.rv &&\n      ((p.r === 2 && p.c === 6) ||\n        (p.r === 2 && p.c === 3) ||\n        (p.r === 5 && p.c === 6) ||\n        (p.r === 5 && p.c === 3))) ||\n    (p.rv &&\n      ((p.r === 6 && p.c === 2) ||\n        (p.r === 6 && p.c === 5) ||\n        (p.r === 3 && p.c === 2) ||\n        (p.r === 3 && p.c === 5)))\n  const isSelected: boolean =\n    rowInRange &&\n    colInRange &&\n    !!p.sel &&\n    p.sel.row === p.r &&\n    p.sel.column === p.c\n\n  const piece: string = rowInRange && colInRange ? 'Piece Piece-Bordered ' : ''\n  const rvp: number | undefined = p.p && p.rv ? p.p * -1 : p.p\n  const pieceImg: string = rvp ? `Piece-${rvp} ` : ''\n  const pieceTurn: string = p.isTurn ? 'Piece-Turn ' : ''\n  const pieceSelected: string = isSelected ? 'Piece-Selected ' : ''\n  const pieceTargeted: string = p.isTargeted ? 'Piece-Targeted ' : ''\n  const left: string = isLeft ? 'Piece-Left ' : ''\n  const top: string = isTop ? 'Piece-Top ' : ''\n  const edgeText: string =\n    (p.c === -1 && rowInRange) || (p.r === -1 && colInRange)\n      ? 'Cell-EdgeText '\n      : ''\n  const star: string = isStar ? 'Piece-Star' : ''\n\n  return `Cell ${piece}${pieceImg}${pieceTurn}${pieceSelected}${pieceTargeted}${left}${top}${edgeText}${star}`\n}\n\nfunction inRange(n: number): boolean {\n  return 0 <= n && n <= 8\n}\n","import { inject, observer } from 'mobx-react'\nimport React, { Component } from 'react'\nimport {\n  MockupEngineControl,\n  MockupSetting,\n  MockupServerSetting,\n} from '../../model/display/MockupState'\nimport { Store } from '../../model/store/Store'\nimport Controller from '../engine/connection/Controller'\nimport Setting from '../setting/Setting'\nimport './Board.scss'\nimport Cell from './Cell'\n\nexport interface Props {\n  store?: Store\n}\n\n@inject('store')\n@observer\nexport default class Board extends Component<Props> {\n  render() {\n    const idx = this.props.store!.gameState.indexes\n    const rows = idx.map(r =>\n      idx\n        .slice()\n        .reverse()\n        .map(c => <Cell key={r * 10 + c} row={r} column={c} />)\n    )\n\n    return (\n      <div className=\"BoardContainer\">\n        <div className=\"ResetPseudo\">\n          <div className=\"Board\">{rows}</div>\n          {this.renderMockup()}\n        </div>\n      </div>\n    )\n  }\n\n  renderMockup() {\n    const { mockup } = this.props.store!.displayState\n    if (mockup === MockupEngineControl) return <Controller />\n    // TODO: server setting は別に分ける？\n    if (mockup === MockupSetting || mockup === MockupServerSetting)\n      return <Setting />\n  }\n}\n","import Branch from './Branch'\nimport { Move } from './Move'\n\nexport type KifComponent = Move | Branch\n\n// TODO: もうちょい持ち方考える\n// 理想は\n// {\n//   head: Move,\n//   next: History,\n//   isCurrent: boolean\n// }\n// だが、JSON互換的に苦しい感じ\nexport default interface History {\n  moves: KifComponent[]\n\n  // history のインデックス\n  // ブラウザで表示するときに現在局面がどこか探せるように\n  index: number\n}\n\nexport function isBranch(m: KifComponent): m is Branch {\n  return 'branches' in m\n}\n","import History, { isBranch, KifComponent } from '../../model/kif/History'\nimport Kif from '../../model/kif/Kif'\n\nexport function getAsString(k: Kif): string {\n  if (k.history.moves.length < 1) return ''\n  return getRec({\n    moves: k.history.moves.slice(1),\n    index: k.history.index,\n  })\n}\n\nfunction getRec(h: History): string {\n  return h.moves\n    .map((kc: KifComponent) =>\n      isBranch(kc) ? getRec(kc.branches[kc.index]) : `${kc.index} ${kc.str}`\n    )\n    .join('\\n')\n}\n","import { inject, observer } from 'mobx-react'\nimport React, { Component } from 'react'\nimport { getAsString } from '../../lib/kif-handler/getAsString'\nimport {\n  MockupEngineControl,\n  MockupServerSetting,\n  MockupSetting,\n} from '../../model/display/MockupState'\nimport { Thinking } from '../../model/engine/State'\nimport { Store } from '../../model/store/Store'\nimport './Buttons.scss'\n\nexport interface Props {\n  store?: Store\n}\n\n@inject('store')\n@observer\nexport default class Buttons extends Component<Props> {\n  render(): JSX.Element {\n    const { gameState, engineState } = this.props.store!\n    const { currentMove, kif } = gameState\n    const i: number = currentMove.index\n\n    const engineIsThinking: boolean = engineState.state === Thinking\n    const engineButtonText: string = engineIsThinking\n      ? '思考停止'\n      : '将棋エンジン'\n\n    const prevOne: number = i - 1 < 0 ? 0 : i - 1\n    const nextOne: number = i + 1\n    const prevFive: number = i - 5 < 0 ? 0 : i - 5\n    const nextFive: number = i + 5\n\n    return (\n      <div className=\"ButtonsContainer\">\n        <button className=\"PrevOne\" onClick={this.kifHandler(prevOne)}>\n          ＜\n        </button>\n        <button className=\"NextOne\" onClick={this.kifHandler(nextOne)}>\n          ＞\n        </button>\n        <button className=\"PrevFive\" onClick={this.kifHandler(prevFive)}>\n          ＜ 5\n        </button>\n        <button className=\"NextFive\" onClick={this.kifHandler(nextFive)}>\n          5 ＞\n        </button>\n        <button className=\"Reverse\" onClick={this.reverse}>\n          盤面反転\n        </button>\n        <button className=\"Copy\" data-clipboard-text={getAsString(kif)}>\n          棋譜コピー\n        </button>\n        <button className=\"ConnectToEngine\" onClick={this.engineOnClick}>\n          {engineButtonText}\n        </button>\n        <button className=\"Configuration\" onClick={this.showSetting}>\n          設定\n        </button>\n      </div>\n    )\n  }\n\n  private reverse = () => this.props.store!.gameState.reverse()\n\n  private kifHandler = (i: number) => () =>\n    this.props.store!.gameState.clickKif(i)\n\n  private engineOnClick: () => Promise<void> = async () => {\n    const { engineState } = this.props.store!\n    const { current, state } = engineState\n    if (!current || state !== Thinking) return await this.connectToEngine()\n    await engineState.stopThinking()\n  }\n\n  private connectToEngine = async () => {\n    const { displayState, config } = this.props.store!\n\n    // サーバー URL が設定されてなかったら、設定画面を出す\n    if (config.serverURL === '') {\n      console.log('here')\n      return await displayState.setMockupState(MockupServerSetting)\n    }\n\n    await displayState.setMockupState(MockupEngineControl)\n  }\n\n  private showSetting = async () =>\n    this.props.store!.displayState.setMockupState(MockupSetting)\n}\n","import { inject, observer } from 'mobx-react'\nimport React, { Component } from 'react'\nimport {\n  Fu0,\n  Gin0,\n  Hisha0,\n  Kaku0,\n  Kei0,\n  Kin0,\n  Kyou0,\n  Piece,\n} from '../../model/shogi/Piece'\nimport Point from '../../model/shogi/Point'\nimport { Turn } from '../../model/shogi/Turn'\nimport { Store } from '../../model/store/Store'\nimport './Captures.scss'\n\nexport interface Props {\n  store?: Store\n  isLeftSide: boolean\n  captures: number[]\n  isTurn: boolean\n}\n\n@inject('store')\n@observer\nexport default class Captures extends Component<Props> {\n  render(): JSX.Element {\n    const { captures, isLeftSide } = this.props\n    const className: string = 'Captures Captures' + Number(isLeftSide)\n    return (\n      <div className={className}>\n        {this.cells('Hisha', Hisha0, captures[6])}\n        {this.cells('Kaku', Kaku0, captures[5])}\n        {this.cells('Kin', Kin0, captures[4])}\n        {this.cells('Gin', Gin0, captures[3])}\n        {this.cells('Kei', Kei0, captures[2])}\n        {this.cells('Kyou', Kyou0, captures[1])}\n        {this.cells('Fu', Fu0, captures[0])}\n      </div>\n    )\n  }\n\n  cells(name: string, pieceId: Piece, count: number): JSX.Element {\n    const { store, isTurn, isLeftSide } = this.props\n    const { selected } = store!.gameState\n    const turn: Turn = store!.gameState.currentMove.pos.turn\n\n    const children = Array.from(Array(count).keys()).map(i => {\n      const selectedClass = isTurn ? getSelectedClass(selected, pieceId, i) : ''\n      const isTurnClass = isTurn ? 'Piece-Turn' : ''\n      const piece = isLeftSide ? -pieceId : pieceId\n      const sideNumber = Number(isLeftSide)\n      const captureClass = `Capture-${pieceId}${sideNumber}${count}${i + 1}`\n      const className = `Piece Piece-${piece} ${isTurnClass} ${selectedClass} ${captureClass}`\n      const key = `Cap-${sideNumber}-${name}-${i}`\n\n      const onClick = () => {\n        if (!isTurn) return\n        const clicked: number = turn * pieceId\n        store!.gameState.clickPiece({ clicked, row: -1, column: -1, i })\n      }\n      return <div key={key} className={className} onClick={onClick} />\n    })\n    const className = `Captures-Inner Captures-${name}`\n    return <div className={className}>{children}</div>\n  }\n}\n\nfunction getSelectedClass(\n  selected: Point | null,\n  pieceId: Piece,\n  index: number\n): string {\n  return !!selected &&\n  selected.piece &&\n  selected.row === -1 &&\n  selected.column === -1 &&\n  Math.abs(selected.piece) === pieceId /* TODO: すげー嫌 */ &&\n    selected.i === index\n    ? 'Piece-Selected'\n    : ''\n}\n","import { inject, observer } from 'mobx-react'\nimport React, { Component } from 'react'\nimport { Gote, Sente } from '../../model/shogi/Turn'\nimport { Store } from '../../model/store/Store'\nimport Buttons from './Buttons'\nimport Captures from './Captures'\nimport './LeftSide.scss'\n\nexport interface Props {\n  store?: Store\n}\n\n@inject('store')\n@observer\nexport default class LeftSide extends Component<Props> {\n  render() {\n    const { indexes, currentMove } = this.props.store!.gameState\n    const { turn, cap0, cap1 } = currentMove.pos\n    const caps: number[] = indexes[0] === -1 ? cap1 : cap0\n    const isTurn: boolean = indexes[0] === -1 ? turn === Gote : turn === Sente\n\n    return (\n      <div className=\"LeftSide\">\n        <Captures isLeftSide={true} captures={caps} isTurn={isTurn} />\n        <div className=\"LeftInfo\">\n          <div />\n          <Buttons />\n        </div>\n      </div>\n    )\n  }\n}\n","import { inject, observer } from 'mobx-react'\nimport React, { Component } from 'react'\nimport { intoView } from '../../lib/dom-handler/intoView'\nimport Branch from '../../model/kif/Branch'\nimport History, { isBranch, KifComponent } from '../../model/kif/History'\nimport { Move } from '../../model/kif/Move'\nimport { Store } from '../../model/store/Store'\nimport './Kif.scss'\n\ninterface Props {\n  store?: Store\n}\n\nconst CURRENT_KIF_ID = 'Move-Current'\n\n@inject('store')\n@observer\nexport default class Kif extends Component<Props> {\n  render() {\n    const { moves } = this.props.store!.gameState.kif.history\n    const elms: JSX.Element[] = this.renderKif(moves, 0)\n    return (\n      <div className=\"KifContainer\">\n        <div className=\"Kif-Inner\">{elms}</div>\n      </div>\n    )\n  }\n\n  renderKif(moves: KifComponent[], n: number): JSX.Element[] {\n    const nested = moves.map((kc: KifComponent, i: number) => {\n      if (isBranch(kc)) return this.renderBranch(kc, n + i)\n      return this.renderMove(kc, n + i)\n    })\n\n    // TODO: flatMap 使いてぇ\n    return Array.prototype.concat.apply([], nested)\n  }\n\n  renderBranch(b: Branch, n: number): JSX.Element[] {\n    const main: History = b.branches[b.index]\n    const [head, ...rest] = main.moves // head は必ず Move\n\n    const otherHeadsDom: JSX.Element[] = []\n    for (let i = 0; i < b.branches.length; i++) {\n      if (i === b.index) continue\n      const m: Move = b.branches[i].moves[0] as Move // head は必ず Move\n      const key: string = `${n}-${i}`\n      const txt: string = `-- ${m.str}`\n      const onClick = () => this.props.store!.gameState.clickKif(n, i)\n      otherHeadsDom.push(\n        <div key={key} className=\"Branch\" onClick={onClick}>\n          <span>{txt}</span>\n        </div>\n      )\n    }\n\n    const restDom = rest.length !== 0 ? this.renderKif(rest, n + 1) : []\n\n    return [this.renderMove(head as Move, n)]\n      .concat(otherHeadsDom)\n      .concat(restDom)\n  }\n\n  renderMove(m: Move, n: number): JSX.Element {\n    const { currentMove } = this.props.store!.gameState\n    const id = currentMove.index === n ? CURRENT_KIF_ID : undefined\n    const onClick = () => this.props.store!.gameState.clickKif(n)\n\n    return (\n      <div key={n} className=\"Move\" id={id} onClick={onClick}>\n        <div className=\"Number code\">{n + '.'}</div>\n        <div className=\"MoveText\">{m.str}</div>\n      </div>\n    )\n  }\n\n  // 自動スクロール\n  // TODO: スマホで使いにくいし自前実装した方がいいかも\n  componentDidUpdate() {\n    intoView(CURRENT_KIF_ID)\n  }\n}\n","// ただ scrollIntoView を呼ぶだけ\nexport function intoView(id: string): void {\n  const current: HTMLElement | null = document.getElementById(id)\n  if (current) (current as any).scrollIntoViewIfNeeded()\n}\n","import { inject, observer } from 'mobx-react'\nimport React, { Component } from 'react'\nimport { Gote, Sente } from '../../model/shogi/Turn'\nimport { Store } from '../../model/store/Store'\nimport Captures from './Captures'\nimport Kif from './Kif'\nimport './RightSide.scss'\n\nexport interface Props {\n  store?: Store\n}\n\n@inject('store')\n@observer\nexport default class RightSide extends Component<Props> {\n  render() {\n    const { indexes, currentMove } = this.props.store!.gameState\n    const { turn, cap0, cap1 } = currentMove.pos\n    const caps: number[] = indexes[0] === 9 ? cap1 : cap0\n    const isTurn: boolean = indexes[0] === 9 ? turn === Gote : turn === Sente\n\n    return (\n      <div className=\"RightSide\">\n        <div className=\"RightInfo\">\n          <Kif />\n        </div>\n        <Captures isLeftSide={false} captures={caps} isTurn={isTurn} />\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport Board from './Board'\nimport './BoardArea.scss'\nimport LeftSide from './LeftSide'\nimport RightSide from './RightSide'\n\nexport default class BoardArea extends Component {\n  render() {\n    return (\n      <div className=\"BoardArea\">\n        <LeftSide />\n        <Board />\n        <RightSide />\n      </div>\n    )\n  }\n}\n","import { inject, observer } from 'mobx-react'\nimport React, { Component } from 'react'\nimport { Thinking } from '../model/engine/State'\nimport { Store } from '../model/store/Store'\nimport './App.scss'\nimport SideInfo from './engine/info/SideInfo'\nimport BoardArea from './shogi/BoardArea'\n\ninterface Props {\n  store?: Store\n}\n\n@inject('store')\n@observer\nexport default class App extends Component<Props> {\n  render(): JSX.Element {\n    const { state } = this.props.store!.engineState\n    const isThinking: boolean = state === Thinking\n\n    const en = this.renderEngineInfo(isThinking)\n    const className = isThinking ? 'App App-SideInfo' : 'App App-BoardOnly'\n\n    return (\n      <div className={className}>\n        <BoardArea />\n        {en}\n      </div>\n    )\n  }\n\n  renderEngineInfo(isThinking: boolean): JSX.Element | undefined {\n    if (!isThinking) return\n    return <SideInfo />\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    )\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import Cookies, { CookieAttributes } from 'js-cookie'\nimport { action, observable } from 'mobx'\nimport { Config } from '../model/config/Config'\n\nexport class DefaultConfig implements Config {\n  @observable paintTargets: boolean\n  @observable serverURL: string\n  @observable saveToCookie: boolean\n\n  private readonly keys = {\n    paintTargets: 'paintTargets',\n    serverURL: 'serverURL',\n    saveToCookie: 'saveToCookie',\n  }\n\n  // 1年\n  private readonly expire: CookieAttributes = { expires: 86400 * 365 }\n\n  constructor() {\n    this.paintTargets = !(Cookies.get(this.keys.paintTargets) === 'false')\n    this.serverURL = Cookies.get(this.keys.serverURL) || ''\n    this.saveToCookie = Cookies.get(this.keys.saveToCookie) === 'true'\n  }\n\n  @action\n  async setPaintTargets(b: boolean): Promise<void> {\n    this.paintTargets = b\n    if (this.saveToCookie)\n      Cookies.set(this.keys.paintTargets, String(b), this.expire)\n  }\n\n  @action\n  async setServerURL(s: string): Promise<void> {\n    this.serverURL = s\n    if (this.saveToCookie) Cookies.set(this.keys.serverURL, s, this.expire)\n  }\n\n  @action\n  async setSaveToCookie(b: boolean): Promise<void> {\n    this.saveToCookie = b\n    if (this.saveToCookie)\n      return Cookies.set(this.keys.saveToCookie, String(b), this.expire)\n\n    // false なら削除する\n    Object.values(this.keys).forEach(key => Cookies.remove(key))\n  }\n}\n","import { action, observable } from 'mobx'\nimport { DisplayState } from '../model/display/DisplayState'\nimport { MockupHidden, MockupState } from '../model/display/MockupState'\n\nexport class DefaultDisplayState implements DisplayState {\n  @observable mockup: MockupState\n\n  constructor() {\n    this.mockup = MockupHidden\n  }\n\n  @action\n  async setMockupState(state: MockupState): Promise<void> {\n    this.mockup = state\n  }\n\n  @action\n  async closeMockup(): Promise<void> {\n    this.mockup = MockupHidden\n  }\n}\n","import { Gyoku0, Gyoku1, Piece } from '../../model/shogi/Piece'\n\n/**\n * 持ち駒を1つ増やす\n * @param cap number[] 持ち駒を表す配列。詳細は Position.ts\n * @param p Piece 増やしたい駒\n */\nexport function increaseCaptures(cap: number[], p: Piece): number[] {\n  return handle(cap, Math.abs(p), i => i + 1)\n}\n\n/**\n * 持ち駒を1つ減らす\n * @param cap number[] 持ち駒を表す配列。詳細は Position.ts\n * @param p Piece 減らしたい駒\n */\nexport function decreaseCaptures(cap: number[], p: Piece): number[] {\n  return handle(cap, Math.abs(p), i => i - 1)\n}\n\nfunction handle(cap: number[], p: Piece, f: (i: number) => number): number[] {\n  if (p === Gyoku0 || p === Gyoku1 || p > 10)\n    throw new Error('Piece ID of Captures must not be Gyoku or over 10.')\n\n  return cap.map((count, index) => {\n    // 駒IDが一致しなければそのまま\n    // p は Math.abs() を通っている\n    if (index !== p - 1) return count\n\n    const v = f(count)\n    if (v < 0)\n      throw new Error(\n        'Invalid function call. Captures must not contain negative value.'\n      )\n\n    return v\n  })\n}\n","import { MoveProps } from '../../model/events/MoveProps'\nimport { Empty, Piece } from '../../model/shogi/Piece'\nimport { Position } from '../../model/shogi/Position'\nimport { Gote, Sente, Turn } from '../../model/shogi/Turn'\nimport { decreaseCaptures, increaseCaptures } from './captures'\nimport { demote } from './piece'\n\nexport function move(p: MoveProps): Position {\n  // 持ち駒を更新する\n  type CaptureHandler = (cap: number[], turn: Turn) => number[]\n  const handleCaptures: CaptureHandler = (cap: number[], turn: Turn) => {\n    // 手番ではない場合、何もしない\n    if (p.pos.turn !== turn) return cap.slice()\n\n    // 移動先が相手の駒なら持ち駒を増やす\n    const d: Piece = p.pos.pos[p.dest.row][p.dest.column]\n    if (d * turn < 0) return increaseCaptures(cap, demote(d))\n\n    // 移動元が持ち駒なら減らす\n    if (p.source.row === -1 && p.source.column === -1)\n      return decreaseCaptures(cap, p.piece)\n\n    return cap.slice()\n  }\n\n  const updatedCap0: number[] = handleCaptures(p.pos.cap0, Sente)\n  const updatedCap1: number[] = handleCaptures(p.pos.cap1, Gote)\n\n  return {\n    pos: moveOnBoard(p),\n    cap0: updatedCap0,\n    cap1: updatedCap1,\n    turn: -p.pos.turn as Turn,\n    moveCount: p.pos.moveCount + 1,\n  }\n}\n\nexport function moveBoardOnly(p: MoveProps): Position {\n  return {\n    pos: moveOnBoard(p),\n    cap0: p.pos.cap0.slice(),\n    cap1: p.pos.cap1.slice(),\n    turn: -p.pos.turn as Turn,\n    moveCount: p.pos.moveCount + 1,\n  }\n}\n\nfunction moveOnBoard(p: MoveProps): number[][] {\n  return p.pos.pos.map((line, r) =>\n    line.map((piece, c) => {\n      // 移動前の位置なら空マスに\n      if (p.source.row === r && p.source.column === c) return Empty\n\n      // 移動先の位置なら更新\n      if (p.dest.row === r && p.dest.column === c) return p.piece\n\n      return piece\n    })\n  )\n}\n","import { action, observable } from 'mobx'\n\ninterface Option<T> {\n  readonly name: string\n  setValue(value: T): void\n}\n\nexport class Button implements Option<any> {\n  readonly name: string\n  constructor(name: string) {\n    this.name = name\n  }\n\n  setValue(_: any): void {}\n}\n\nexport class Check implements Option<boolean> {\n  @observable value: boolean\n  readonly name: string\n  readonly default: boolean\n  constructor(name: string, value: boolean, initial: boolean) {\n    this.name = name\n    this.value = value\n    this.default = initial\n  }\n\n  @action setValue(value: boolean): void {\n    this.value = value\n  }\n}\n\nexport class Range implements Option<string> {\n  @observable value: number\n  @observable inputValue: string\n  readonly name: string\n  readonly default: number\n  readonly min: number\n  readonly max: number\n  constructor(\n    name: string,\n    value: number,\n    initial: number,\n    min: number,\n    max: number\n  ) {\n    this.name = name\n    this.value = value\n    this.inputValue = value.toString()\n    this.default = initial\n    this.min = min\n    this.max = max\n  }\n\n  @action setValue(value: string): void {\n    this.inputValue = value\n    const n: number = Number(this.inputValue)\n    if (Number.isNaN(n) || n < this.min || n > this.max) return\n    this.value = n\n  }\n}\n\nexport class Select implements Option<string> {\n  @observable value: string\n  readonly name: string\n  readonly default: string\n  readonly vars: string[]\n  constructor(name: string, value: string, initial: string, vars: string[]) {\n    this.name = name\n    this.value = value\n    this.default = initial\n    this.vars = vars\n  }\n\n  @action setValue(value: string) {\n    this.value = value\n  }\n}\n\nexport class Text implements Option<string> {\n  @observable value: string\n  readonly name: string\n  readonly default: string\n\n  constructor(name: string, value: string, initial: string) {\n    this.name = name\n    this.value = value\n    this.default = initial\n  }\n\n  @action setValue(value: string) {\n    this.value = value\n  }\n}\n\nexport interface Options {\n  buttons: Map<string, Button>\n  checks: Map<string, Check>\n  ranges: Map<string, Range>\n  selects: Map<string, Select>\n  texts: Map<string, Text>\n}\n","import axios from 'axios'\nimport debounce from 'lodash.debounce'\nimport shortid from 'shortid'\nimport { move } from '../lib/game-handler/position'\nimport { Info } from '../model/engine/Info'\nimport {\n  Button,\n  Check,\n  Options,\n  Range,\n  Select,\n  Text,\n} from '../model/engine/Optoin'\nimport { MoveProps } from '../model/events/MoveProps'\nimport { Move } from '../model/kif/Move'\nimport { ResponseInfo } from '../model/response/ResponseInfo'\nimport { Empty } from '../model/shogi/Piece'\nimport { Position } from '../model/shogi/Position'\n\nconst DEBOUNCE_MILLIS = 1000\n\nexport class ShogiBoardClient {\n  private _engineName?: string\n  private _serverURL?: string\n\n  private readonly engineNameKey = 'key'\n\n  constructor(engineName?: string, serverURL?: string) {\n    this._engineName = engineName\n    this._serverURL = serverURL\n  }\n\n  set engineName(name: string) {\n    this._engineName = name\n  }\n\n  get engineName(): string {\n    if (!this._engineName) throw new Error('engineName is not defined.')\n    return this._engineName\n  }\n\n  set serverURL(url: string) {\n    this._serverURL = url\n  }\n\n  get serverURL(): string {\n    if (!this._serverURL) throw new Error('serverURL is not defined. serverURL')\n    return this._serverURL\n  }\n\n  async init(): Promise<string[]> {\n    const url = await this.buildUrl('init', false)\n    const res = await axios.post(url)\n    return res.data\n  }\n\n  async connect(): Promise<void> {\n    return await this.post('connect')\n  }\n\n  async close(): Promise<void> {\n    return await this.post('close')\n  }\n\n  async start(): Promise<void> {\n    return await this.post('start')\n  }\n\n  async stop(): Promise<void> {\n    return await this.post('stop')\n  }\n\n  async getOptions(): Promise<Options> {\n    // res は Options と言いつつ、中身は Map じゃなくて object\n    // TODO: データの持ち方考える\n    const res: Options = await this.get('options/get')\n    const m: Options = {\n      buttons: new Map(),\n      checks: new Map(),\n      ranges: new Map(),\n      selects: new Map(),\n      texts: new Map(),\n    }\n    Object.values(res.buttons).forEach(b =>\n      m.buttons.set(b.name, new Button(b.name))\n    )\n    Object.values(res.checks).forEach(c =>\n      m.checks.set(c.name, new Check(c.name, c.value, c.default))\n    )\n    Object.values(res.ranges).forEach(r =>\n      m.ranges.set(r.name, new Range(r.name, r.value, r.default, r.min, r.max))\n    )\n    Object.values(res.selects).forEach(s =>\n      m.selects.set(s.name, new Select(s.name, s.value, s.default, s.vars))\n    )\n    Object.values(res.texts).forEach(t =>\n      m.texts.set(t.name, new Text(t.name, t.value, t.default))\n    )\n    return m\n  }\n\n  async updateButton(btn: Button): Promise<void> {\n    return await this.post('options/update/button', btn)\n  }\n\n  async updateCheck(chk: Check): Promise<void> {\n    return await this.post('options/update/check', chk)\n  }\n\n  updateRange = debounce(async (rng: Range): Promise<void> => {\n    return await this.post('options/update/range', rng)\n  }, DEBOUNCE_MILLIS)\n\n  async updateSelect(sel: Select): Promise<void> {\n    return await this.post('options/update/select', sel)\n  }\n\n  updateText = debounce(async (txt: Text): Promise<void> => {\n    return await this.post('options/update/text', txt)\n  }, DEBOUNCE_MILLIS)\n\n  async getResult(current: Move): Promise<Info[]> {\n    const resp: { number: ResponseInfo } = await this.get('result/get')\n    let p: Position = current.pos\n\n    // レスポンスのキーでソートされた ResponseInfo を取り出し、\n    // move メソッドで局面を動かしながら Info を生成していく\n    return Object.entries(resp)\n      .sort((a, b) => {\n        if (a[0] < b[0]) return -1\n        if (a[0] > b[0]) return 1\n        return 0\n      })\n      .map(([_, info]) => {\n        let i: number = 0\n        p = current.pos\n        const moves: MoveProps[] = []\n\n        try {\n          while (i < info.moves.length) {\n            const m = info.moves[i]\n            const source = { row: m.source!.row, column: m.source!.column }\n            const dest = { row: m.dest!.row, column: m.dest!.column }\n            const piece = m.pieceId || p.pos[source.row][source.column]\n            if (piece === Empty) break\n            const mp: MoveProps = {\n              pos: p,\n              source,\n              dest,\n              piece,\n              promote: m.isPromoted,\n            }\n            moves.push(mp)\n            p = move(mp)\n            i = (i + 1) | 0\n          }\n        } catch (e) {\n          // ズレは出るのでエラーは握りつぶす\n          // console.error(i, p, e)\n        }\n\n        const values = new Map()\n        Object.entries(info.values).forEach(([k, v]) => values.set(k, v))\n\n        return {\n          id: shortid.generate(),\n          values, // 一旦捨てる\n          score: info.score,\n          moves,\n        }\n      })\n  }\n\n  async setPosition(p: Position): Promise<void> {\n    const pos: Position = {\n      pos: p.pos.map(r => r.slice().reverse()),\n      cap0: p.cap0,\n      cap1: p.cap1,\n      turn: p.turn,\n      moveCount: p.moveCount,\n    }\n    return await this.post('position/set', pos)\n  }\n\n  private async get<T>(path: string): Promise<T> {\n    const url = await this.buildUrl(path, true)\n    const res = await axios.get(url)\n    return res.data\n  }\n\n  private async post(path: string, body?: object): Promise<void> {\n    const url = await this.buildUrl(path, true)\n    await axios.post(url, body, {\n      headers: { 'Content-Type': 'application/json' },\n    })\n  }\n\n  private async buildUrl(path: string, withName: boolean) {\n    const e = (s: string) => encodeURIComponent(s)\n    const query = withName ? `?${this.engineNameKey}=${e(this.engineName)}` : ''\n    return `${this.serverURL}/${path}${query}`\n  }\n\n  private e(s: any): string {\n    return encodeURIComponent(s)\n  }\n}\n","import { action, computed, observable } from 'mobx'\nimport { ShogiBoardClient } from '../infrastructure/ShogiBoardClient'\nimport { EngineState } from '../model/engine/EngineState'\nimport { Info } from '../model/engine/Info'\nimport { Options } from '../model/engine/Optoin'\nimport {\n  Connected,\n  Connecting,\n  NotConnected,\n  StandBy,\n  State,\n  Thinking,\n} from '../model/engine/State'\nimport { Position } from '../model/shogi/Position'\n\nexport class DefaultEngineState implements EngineState {\n  @observable names: string[]\n  @observable current: string | null\n  @observable options: Options | null\n  @observable state: State\n  @observable result: Info[] | null\n  @observable serverURL: string\n\n  constructor() {\n    this.names = []\n    this.current = null\n    this.options = null\n    this.state = NotConnected\n    this.result = null\n    this.serverURL = ''\n  }\n\n  @computed get sbclient(): ShogiBoardClient {\n    return new ShogiBoardClient(this.current || '', this.serverURL)\n  }\n\n  @action async setNames(names: string[]): Promise<void> {\n    this.names = names\n  }\n\n  @action async setState(state: State): Promise<void> {\n    this.state = state\n  }\n\n  @action async connect(name: string): Promise<void> {\n    if (!this.names.includes(name))\n      throw new Error('Unknown engine name. name=' + name)\n\n    this.current = name\n    try {\n      this.setState(Connecting)\n      await this.sbclient.connect()\n      this.options = await this.sbclient.getOptions()\n      this.setState(Connected)\n    } catch (e) {\n      console.error('Failed to connect', e)\n      alert('接続に失敗しました') // TODO\n      await this.disconnect()\n    }\n  }\n\n  @action async disconnect(): Promise<void> {\n    try {\n      await this.sbclient.close()\n    } catch (e) {\n      console.error('接続解除に失敗しました', e)\n    } finally {\n      this.current = null\n      this.options = null\n      this.state = NotConnected\n    }\n  }\n\n  @action async startThinking(): Promise<void> {\n    if (!this.current)\n      throw new Error('[startThinking] current engine is not set')\n\n    await this.sbclient.start()\n    await this.setState(Thinking)\n  }\n\n  @action async stopThinking(): Promise<void> {\n    if (!this.current)\n      throw new Error('[stopThinking] current engine is not set')\n    if (this.state !== Thinking) return\n\n    await this.sbclient.stop()\n    await this.setState(StandBy)\n  }\n\n  @action async setResult(i: Info[]): Promise<void> {\n    this.result = i\n  }\n\n  async updatePosition(p: Position): Promise<void> {\n    await this.sbclient.setPosition(p)\n  }\n\n  @action async setServerURL(s: string): Promise<void> {\n    this.serverURL = s\n  }\n}\n","import Branch from '../../model/kif/Branch'\nimport History, { isBranch, KifComponent } from '../../model/kif/History'\nimport Kif from '../../model/kif/Kif'\n\n/**\n * 現在局面を更新した新しい棋譜を返す\n * @param k Kif 更新したい棋譜\n * @param x number 現在局面にしたい手数\n * @param y number | undefined 分岐を切り替える場合のみ、分岐のインデックス\n */\nexport function changeIndex(k: Kif, x: number, y?: number): Kif {\n  return {\n    meta: k.meta,\n    history: changeHistory(k.history, x, y),\n  }\n}\n\n// TODO: Move にインデックスを入れたので、少しシンプルにできる\nfunction changeHistory(h: History, x: number, y?: number): History {\n  const lastIndex: number = h.moves.length - 1\n  const last: KifComponent = h.moves[lastIndex]\n  const init: KifComponent[] = h.moves.slice(0, lastIndex)\n\n  const xPassesIfBranch: number = x <= lastIndex ? 0 : x - lastIndex\n\n  const moves: KifComponent[] = isBranch(last)\n    ? init.concat(changeBranch(last, xPassesIfBranch, y))\n    : h.moves.slice()\n\n  const index: number = x <= lastIndex ? x : lastIndex\n\n  return { moves, index }\n}\n\nfunction changeBranch(b: Branch, x: number, y?: number): Branch {\n  const index = x === 0 && y !== undefined ? y : b.index\n\n  if (x === 0)\n    return {\n      branches: b.branches.map(h => changeHistory(h, 0)),\n      index,\n    }\n\n  const branches = b.branches.map((h: History, i: number) =>\n    i === b.index ? changeHistory(h, x, y) : h\n  )\n\n  return { branches, index }\n}\n","import Branch from '../../model/kif/Branch'\nimport History, { isBranch, KifComponent } from '../../model/kif/History'\nimport Kif from '../../model/kif/Kif'\nimport { Move } from '../../model/kif/Move'\n\n/**\n * 棋譜に新しいMoveを追加する\n * @param old Kif\n * @param m Move 追加する一手\n */\nexport default function(old: Kif, m: Move): Kif {\n  return {\n    meta: old.meta,\n    history: pushToHistory(old.history, m),\n  }\n}\n\nfunction pushToHistory(h: History, m: Move): History {\n  const lastIsCurrent: boolean = h.index === h.moves.length - 1\n  const last: KifComponent = h.moves[h.index]\n\n  if (lastIsCurrent && isBranch(last))\n    return {\n      moves: h.moves\n        .slice(0, h.moves.length - 1)\n        .concat(pushToBranch(last, m, true)),\n      index: h.index,\n    }\n\n  const nextIndex: number = h.index + 1\n\n  if (lastIsCurrent)\n    return {\n      moves: h.moves.concat(m),\n      index: nextIndex,\n    }\n\n  const next: KifComponent = h.moves[nextIndex]\n  const init: KifComponent[] = h.moves.slice(0, nextIndex)\n\n  if (isBranch(next))\n    return {\n      moves: init.concat(pushToBranch(next, m, false)),\n      index: nextIndex,\n    }\n\n  // 追加しようとしてる Move が次と一緒ならインデックスだけ更新\n  if (moveEquals(m, next))\n    return {\n      moves: h.moves.slice(),\n      index: nextIndex,\n    }\n\n  const tail: KifComponent[] = h.moves.slice(nextIndex, h.moves.length)\n  return {\n    moves: init.concat(createBranch(tail, m)),\n    index: nextIndex,\n  }\n}\n\nfunction pushToBranch(b: Branch, m: Move, recursive: boolean): Branch {\n  // 分岐の先頭は現在表示局面ではないので、再帰的に更新する\n  if (recursive)\n    return {\n      branches: b.branches.map((h: History, i: number) => {\n        if (i === b.index) return pushToHistory(h, m)\n        return h\n      }),\n      index: b.index,\n    }\n\n  const indexOfNewMove: number = b.branches.findIndex(h =>\n    moveEquals(h.moves[0] as Move, m)\n  )\n\n  // 追加しようとしてる Move がすでに分岐の先頭にある\n  if (indexOfNewMove !== -1)\n    return {\n      branches: b.branches.slice(),\n      index: indexOfNewMove,\n    }\n\n  return {\n    branches: b.branches.concat(toHistory([m])),\n    index: b.branches.length,\n  }\n}\n\nfunction createBranch(tail: KifComponent[], m: Move): Branch {\n  return {\n    branches: [toHistory(tail), toHistory([m])],\n    index: 1,\n  }\n}\n\nfunction toHistory(c: KifComponent[]): History {\n  return { moves: c, index: 0 }\n}\n\nfunction moveEquals(a: Move, b: Move): boolean {\n  return (\n    a.index === b.index &&\n    a.source.row === b.source.row &&\n    a.source.column === b.source.column &&\n    a.dest.row === b.dest.row &&\n    a.dest.column === b.dest.column &&\n    a.piece === b.piece &&\n    a.promote === b.promote\n  )\n}\n","import { Piece, Empty } from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\n\nexport default function(\n  pos: Piece[][],\n  invalidRows?: number[],\n  invalidColumns?: number[]\n): Point[] {\n  const points: Point[] = []\n\n  for (let r = 0; r < 9; r++) {\n    if (invalidRows && invalidRows.includes(r)) continue\n\n    for (let c = 0; c < 9; c++) {\n      const columnIsInvalid = invalidColumns && invalidColumns.includes(c)\n      if (columnIsInvalid || pos[r][c] !== Empty) continue\n      points.push({ row: r, column: c })\n    }\n  }\n\n  return points\n}\n","import { Piece } from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\n\nexport default function(pos: Piece[][], nexts: number[][], p: Piece): Point[] {\n  const points: Point[] = []\n\n  for (let i = 0; i < nexts.length; i++) {\n    const row = nexts[i][0]\n    const column = nexts[i][1]\n    if (\n      row >= 0 &&\n      row <= 8 &&\n      column >= 0 &&\n      column <= 8 &&\n      pos[row][column] * p <= 0\n    )\n      points.push({ row, column })\n  }\n\n  return points\n}\n","import { Piece } from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\n\nexport default function(\n  pos: Piece[][],\n  row: number,\n  column: number,\n  piece: Piece,\n  points: Point[],\n  rowDiff: number,\n  columnDiff: number\n): void {\n  while (0 <= row && row <= 8 && 0 <= column && column <= 8) {\n    const target: Piece = pos[row][column]\n    if (target * piece > 0) break\n    points.push({ row, column })\n    if (target * piece < 0) break\n    row += rowDiff\n    column += columnDiff\n  }\n}\n","import { Hisha0, Hisha1 } from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\nimport { Position } from '../../../model/shogi/Position'\nimport { comp } from '../utils/algorithm'\nimport getEmpties from '../utils/getEmpties'\nimport getWithDiff from '../utils/getWithDiff'\n\nexport default function(pos: Position, p: Point): Point[] {\n  if (!p.piece || (p.piece !== Hisha0 && p.piece !== Hisha1))\n    throw new Error('Called validation for hisha, but piece id was not hisha.')\n\n  if (p.row === -1 && p.column === -1) return getEmpties(pos.pos)\n\n  const diffList = [[-1, 0], [0, -1], [0, 1], [1, 0]]\n  const points: Point[] = []\n\n  for (let i = 0; i < diffList.length; i++) {\n    getWithDiff(\n      pos.pos,\n      p.row + diffList[i][0],\n      p.column + diffList[i][1],\n      p.piece,\n      points,\n      diffList[i][0],\n      diffList[i][1]\n    )\n  }\n\n  points.sort(comp)\n  return points\n}\n","import { Kaku0, Kaku1 } from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\nimport { Position } from '../../../model/shogi/Position'\nimport { comp } from '../utils/algorithm'\nimport getEmpties from '../utils/getEmpties'\nimport getWithDiff from '../utils/getWithDiff'\n\nexport default function(pos: Position, p: Point): Point[] {\n  if (!p.piece || (p.piece !== Kaku0 && p.piece !== Kaku1))\n    throw new Error('Called validation for kaku, but piece id was not kaku.')\n\n  if (p.row === -1 && p.column === -1) return getEmpties(pos.pos)\n\n  const diffList = [[-1, -1], [-1, 1], [1, -1], [1, 1]]\n  const points: Point[] = []\n\n  for (let i = 0; i < diffList.length; i++) {\n    getWithDiff(\n      pos.pos,\n      p.row + diffList[i][0],\n      p.column + diffList[i][1],\n      p.piece,\n      points,\n      diffList[i][0],\n      diffList[i][1]\n    )\n  }\n\n  points.sort(comp)\n  return points\n}\n","import {\n  Empty,\n  Fu0,\n  Fu1,\n  Gin0,\n  Gin1,\n  Gyoku0,\n  Gyoku1,\n  Hisha0,\n  Hisha1,\n  Kaku0,\n  Kaku1,\n  Kei0,\n  Kei1,\n  Kin0,\n  Kin1,\n  Kyou0,\n  Kyou1,\n  NariGin0,\n  NariGin1,\n  NariKei0,\n  NariKei1,\n  NariKyou0,\n  NariKyou1,\n  Ryu0,\n  Ryu1,\n  To0,\n  To1,\n  Uma0,\n  Uma1,\n} from '../../model/shogi/Piece'\nimport Point from '../../model/shogi/Point'\nimport { Position } from '../../model/shogi/Position'\nimport fu from './pieces/fu'\nimport gin from './pieces/gin'\nimport gyoku from './pieces/gyoku'\nimport hisha from './pieces/hisha'\nimport kaku from './pieces/kaku'\nimport kei from './pieces/kei'\nimport kin from './pieces/kin'\nimport kyou from './pieces/kyou'\nimport ryu from './pieces/ryu'\nimport uma from './pieces/uma'\n\n/**\n * 駒を動かせる場所を取得する\n * @param pos Position 駒の配置\n * @param point Point 動ける場所を取得したい駒の位置\n */\nexport default function(pos: Position, point: Point): Point[] {\n  const piece = point.piece\n\n  if (piece === Empty)\n    throw new Error('Cannot get targets to move for empty cell.')\n  if (piece === Fu0 || piece === Fu1) return fu(pos, point)\n  if (piece === Kyou0 || piece === Kyou1) return kyou(pos, point)\n  if (piece === Kei0 || piece === Kei1) return kei(pos, point)\n  if (piece === Gin0 || piece === Gin1) return gin(pos, point)\n  if (\n    piece === Kin0 ||\n    piece === Kin1 ||\n    piece === To0 ||\n    piece === To1 ||\n    piece === NariKyou0 ||\n    piece === NariKyou1 ||\n    piece === NariKei0 ||\n    piece === NariKei1 ||\n    piece === NariGin0 ||\n    piece === NariGin1\n  )\n    return kin(pos, point)\n  if (piece === Kaku0 || piece === Kaku1) return kaku(pos, point)\n  if (piece === Hisha0 || piece === Hisha1) return hisha(pos, point)\n  if (piece === Gyoku0 || piece === Gyoku1) return gyoku(pos, point)\n  if (piece === Uma0 || piece === Uma1) return uma(pos, point)\n  if (piece === Ryu0 || piece === Ryu1) return ryu(pos, point)\n\n  throw new Error('Could not get targets to move. Got invalid piece ID')\n}\n","import { Fu0, Fu1 } from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\nimport { Position } from '../../../model/shogi/Position'\nimport getEmpties from '../utils/getEmpties'\n\nexport default function(pos: Position, p: Point): Point[] {\n  if (!p.piece || (p.piece !== Fu0 && p.piece !== Fu1))\n    throw new Error('Called validation for fu, but piece id was not fu.')\n\n  // 二歩チェックのため、すでに歩がある列を入れておく\n  const columnsOfContainingFu: number[] = []\n  for (let col = 0; col < 9; col++) {\n    for (let row = 0; row < 9; row++) {\n      if (pos.pos[row][col] === p.piece) {\n        columnsOfContainingFu.push(col)\n        break\n      }\n    }\n  }\n\n  if (p.row === -1 && p.column === -1) {\n    const invalidRow: number = p.piece > 0 ? 0 : 8\n    return getEmpties(pos.pos, [invalidRow], columnsOfContainingFu)\n  }\n\n  const nextRow: number = p.piece > 0 ? p.row - 1 : p.row + 1\n\n  // 盤外か味方の駒ならなし\n  if (nextRow < 0 || nextRow > 8 || pos.pos[nextRow][p.column] * p.piece > 0)\n    return []\n\n  // 空マスか、相手の駒ならOK\n  return [{ row: nextRow, column: p.column }]\n}\n","import { Kyou0, Kyou1 } from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\nimport { Position } from '../../../model/shogi/Position'\nimport getEmpties from '../utils/getEmpties'\nimport getWithDiff from '../utils/getWithDiff'\n\nexport default function(pos: Position, p: Point): Point[] {\n  if (!p.piece || (p.piece !== Kyou0 && p.piece !== Kyou1))\n    throw new Error('Called validation for kyou, but piece id was not kyou.')\n\n  if (p.row === -1 && p.column === -1) {\n    const invalidRow: number = p.piece > 0 ? 0 : 8\n    return getEmpties(pos.pos, [invalidRow])\n  }\n\n  const diff = p.piece > 0 ? -1 : 1\n  const points: Point[] = []\n  getWithDiff(pos.pos, p.row + diff, p.column, p.piece, points, diff, 0)\n  if (p.piece > 0) points.reverse()\n  return points\n}\n","import { Kei0, Kei1 } from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\nimport { Position } from '../../../model/shogi/Position'\nimport getEmpties from '../utils/getEmpties'\nimport getFromNexts from '../utils/getFromNexts'\n\nexport default function(pos: Position, p: Point): Point[] {\n  if (!p.piece || (p.piece !== Kei0 && p.piece !== Kei1))\n    throw new Error('Called validation for kei, but piece id was not kei.')\n\n  if (p.row === -1 && p.column === -1) {\n    const invalidRow1: number = p.piece > 0 ? 0 : 8\n    const invalidRow2: number = p.piece > 0 ? invalidRow1 + 1 : invalidRow1 - 1\n    return getEmpties(pos.pos, [invalidRow1, invalidRow2])\n  }\n\n  const nextRow: number = p.piece > 0 ? p.row - 2 : p.row + 2\n  if (nextRow < 0 || nextRow > 8) return []\n  const nexts: number[][] = [[nextRow, p.column - 1], [nextRow, p.column + 1]]\n  return getFromNexts(pos.pos, nexts, p.piece)\n}\n","import { Gin0, Gin1 } from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\nimport { Position } from '../../../model/shogi/Position'\nimport getEmpties from '../utils/getEmpties'\nimport getFromNexts from '../utils/getFromNexts'\n\nexport default function(pos: Position, p: Point): Point[] {\n  if (!p.piece || (p.piece !== Gin0 && p.piece !== Gin1))\n    throw new Error('Called validation for gin, but piece id was not gin.')\n\n  if (p.row === -1 && p.column === -1) return getEmpties(pos.pos)\n\n  const nexts: number[][] =\n    p.piece > 0\n      ? [\n          [p.row - 1, p.column - 1],\n          [p.row - 1, p.column],\n          [p.row - 1, p.column + 1],\n          [p.row + 1, p.column - 1],\n          [p.row + 1, p.column + 1],\n        ]\n      : [\n          [p.row - 1, p.column - 1],\n          [p.row - 1, p.column + 1],\n          [p.row + 1, p.column - 1],\n          [p.row + 1, p.column],\n          [p.row + 1, p.column + 1],\n        ]\n\n  return getFromNexts(pos.pos, nexts, p.piece)\n}\n","import {\n  Kin0,\n  Kin1,\n  NariGin0,\n  NariGin1,\n  NariKei0,\n  NariKei1,\n  NariKyou0,\n  NariKyou1,\n  To0,\n  To1,\n} from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\nimport { Position } from '../../../model/shogi/Position'\nimport getEmpties from '../utils/getEmpties'\nimport getFromNexts from '../utils/getFromNexts'\n\nexport default function(pos: Position, p: Point): Point[] {\n  if (\n    !p.piece ||\n    (p.piece !== Kin0 &&\n      p.piece !== Kin1 &&\n      p.piece !== To0 &&\n      p.piece !== To1 &&\n      p.piece !== NariKyou0 &&\n      p.piece !== NariKyou1 &&\n      p.piece !== NariKei0 &&\n      p.piece !== NariKei1 &&\n      p.piece !== NariGin0 &&\n      p.piece !== NariGin1)\n  )\n    throw new Error(\n      'Called validation for kin(or promoted piece moves as same as kin), but piece id was not as expected.'\n    )\n\n  if (p.row === -1 && p.column === -1) return getEmpties(pos.pos)\n\n  const nexts: number[][] =\n    p.piece > 0\n      ? [\n          [p.row - 1, p.column - 1],\n          [p.row - 1, p.column],\n          [p.row - 1, p.column + 1],\n          [p.row, p.column - 1],\n          [p.row, p.column + 1],\n          [p.row + 1, p.column],\n        ]\n      : [\n          [p.row - 1, p.column],\n          [p.row, p.column - 1],\n          [p.row, p.column + 1],\n          [p.row + 1, p.column - 1],\n          [p.row + 1, p.column],\n          [p.row + 1, p.column + 1],\n        ]\n\n  return getFromNexts(pos.pos, nexts, p.piece)\n}\n","import { Gyoku0, Gyoku1 } from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\nimport { Position } from '../../../model/shogi/Position'\nimport getFromNexts from '../utils/getFromNexts'\n\nexport default function(pos: Position, p: Point): Point[] {\n  if (!p.piece || (p.piece !== Gyoku0 && p.piece !== Gyoku1))\n    throw new Error('Called validation for gyoku, but piece id was not gyoku.')\n\n  if (p.row === -1 && p.column === -1)\n    throw new Error('Gyoku must not be captured')\n\n  const nexts: number[][] = [\n    [p.row - 1, p.column - 1],\n    [p.row - 1, p.column],\n    [p.row - 1, p.column + 1],\n    [p.row, p.column - 1],\n    [p.row, p.column + 1],\n    [p.row + 1, p.column - 1],\n    [p.row + 1, p.column],\n    [p.row + 1, p.column + 1],\n  ]\n\n  return getFromNexts(pos.pos, nexts, p.piece)\n}\n","import { Uma0, Uma1 } from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\nimport { Position } from '../../../model/shogi/Position'\nimport { demote } from '../../game-handler/piece'\nimport { comp } from '../utils/algorithm'\nimport getFromNexts from '../utils/getFromNexts'\nimport kaku from './kaku'\n\nexport default function(pos: Position, p: Point): Point[] {\n  if (!p.piece || (p.piece !== Uma0 && p.piece !== Uma1))\n    throw new Error('Called validation for uma, but piece id was not uma.')\n\n  if (p.row === -1 || p.column === -1)\n    throw new Error('Uma must not be captured')\n\n  const nexts = [\n    [p.row - 1, p.column],\n    [p.row, p.column - 1],\n    [p.row, p.column + 1],\n    [p.row + 1, p.column],\n  ]\n\n  const kakuPoint = { row: p.row, column: p.column, piece: demote(p.piece) }\n  const kakuTargets = kaku(pos, kakuPoint)\n  const targets = getFromNexts(pos.pos, nexts, p.piece).concat(kakuTargets)\n  targets.sort(comp)\n  return targets\n}\n","import { Ryu0, Ryu1 } from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\nimport { Position } from '../../../model/shogi/Position'\nimport { demote } from '../../game-handler/piece'\nimport { comp } from '../utils/algorithm'\nimport getFromNexts from '../utils/getFromNexts'\nimport hisha from './hisha'\n\nexport default function(pos: Position, p: Point): Point[] {\n  if (!p.piece || (p.piece !== Ryu0 && p.piece !== Ryu1))\n    throw new Error('Called validation for ryu, but piece id was not ryu.')\n\n  if (p.row === -1 || p.column === -1)\n    throw new Error('Ryu must not be captured')\n\n  const nexts = [\n    [p.row - 1, p.column - 1],\n    [p.row - 1, p.column + 1],\n    [p.row + 1, p.column - 1],\n    [p.row + 1, p.column + 1],\n  ]\n\n  const hishaPoint = { row: p.row, column: p.column, piece: demote(p.piece) }\n  const hishaTargets = hisha(pos, hishaPoint)\n  const targets = getFromNexts(pos.pos, nexts, p.piece).concat(hishaTargets)\n  targets.sort(comp)\n  return targets\n}\n","import { Gyoku0, Piece } from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\nimport { Turn } from '../../../model/shogi/Turn'\n\n/**\n * 玉の位置を探す\n * @param pos number[][] 盤上の配置\n * @param turn Turn どっちの玉を探すか。先手玉を探したいときは Sente を渡す\n * @returns 見つかった場合 Point\n *          見つからなかった場合 undefined\n */\nexport default function(pos: number[][], turn: Turn): Point | undefined {\n  for (let r = 0; r < pos.length; r++) {\n    for (let c = 0; c < pos.length; c++) {\n      const piece: Piece = pos[r][c]\n      const isGyoku: boolean = Math.abs(piece) === Gyoku0\n      const isOwnersTurn: boolean = piece * turn > 0\n      if (isGyoku && isOwnersTurn) return { row: r, column: c, piece }\n    }\n  }\n}\n","import { Gyoku0, Piece } from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\nimport { Position } from '../../../model/shogi/Position'\nimport { Turn } from '../../../model/shogi/Turn'\nimport { moveBoardOnly } from '../../game-handler/position'\nimport getTargets from '../getTargets'\nimport { find } from './algorithm'\n\n/**\n * points が attacker の駒の効きに入っているか\n * 王手放置・打ち歩詰めチェックに使用する\n * 入っている: true\n * 入っていない: false\n *\n * 例. 初期局面で先手の59玉に、後手の駒の効きがあるかを調べるとき\n * pos は初期局面\n * point は、{ row: 8, column: 4 }\n * attacker は Gote(-1)\n * を渡し、false が返る\n *\n * @param pos Position 配置\n * @param point Point 調べたい位置\n * @param attacker Turn 攻め手番\n * @param ignoreCheckLeaving boolean | undefined 王手放置チェックを無視するか\n *                           無視する(チェックしない): true\n *                           無視しない(チェックする): false | undefined\n *                           基本的に外から呼ぶ時は undefined で\n */\nexport default function isPointed(\n  pos: Position,\n  point: Point,\n  attacker: Turn,\n  ignoreCheckLeaving?: boolean\n): boolean {\n  for (let row = 0; row < pos.pos.length; row++) {\n    for (let column = 0; column < pos.pos.length; column++) {\n      const piece: Piece = pos.pos[row][column]\n      // 受け側の駒か、空マスならスキップ\n      if (piece * attacker <= 0) continue\n\n      // 攻め側の駒の targets に point が含まれていなかったらスキップ\n      const targets: Point[] = getTargets(pos, { row, column, piece })\n      const foundIndex: number = find(targets, point)\n      if (foundIndex === -1) continue\n\n      // 王手放置チェックをしないとき、\n      // 攻め側の駒が玉じゃないとき、\n      // 受け側の駒が玉の時は\n      // 次に動けるので true\n      if (\n        ignoreCheckLeaving ||\n        Math.abs(piece) !== Gyoku0 ||\n        (point.piece && Math.abs(point.piece) === Gyoku0)\n      )\n        return true\n\n      // 攻め側の駒が玉なので動かした結果、攻め側の玉が王手放置にならないか調べる\n      const moved = moveBoardOnly({\n        pos,\n        source: { row, column },\n        dest: { row: point.row, column: point.column },\n        piece,\n      })\n      if (isPointed(moved, point, -attacker as Turn, true)) continue\n      return true\n    }\n  }\n\n  return false\n}\n","import { Position } from '../shogi/Position'\nimport { hirate } from '../shogi/PositionInit'\nimport History from './History'\nimport Meta from './Meta'\n\nexport default interface Kif {\n  // 対局者などの対局情報\n  meta: Meta\n\n  // 棋譜\n  history: History\n}\n\nexport function newKif(): Kif {\n  const initPos: Position = hirate()\n  return {\n    meta: {\n      version: '1',\n      player: { sente: '', gote: '' },\n      handicap: '平手',\n      initPos,\n    },\n    history: {\n      // TODO: 持ち方考える\n      moves: [\n        {\n          index: 0,\n          str: '開始局面',\n          pos: initPos,\n          source: { row: 0, column: 0 },\n          dest: { row: 0, column: 0 },\n          piece: 0,\n        },\n      ],\n      index: 0,\n    },\n  }\n}\n","import {\n  Empty,\n  Fu0,\n  Fu1,\n  Gin0,\n  Gin1,\n  Gyoku0,\n  Gyoku1,\n  Hisha0,\n  Hisha1,\n  Kaku0,\n  Kaku1,\n  Kei0,\n  Kei1,\n  Kin0,\n  Kin1,\n  Kyou0,\n  Kyou1,\n} from './Piece'\nimport { Position } from './Position'\nimport { Sente } from './Turn'\n\n/**\n * 初期局を返す\n * column は reverse() されているので、\n * 飛車と角の位置が逆に見える\n * 棋譜との互換性を保つため。\n * ３三角 → pos[2][2]、\n * ３四飛 → pos[3][2]、\n * ７六歩 → pos[5][6] という感じで変換が楽\n */\nexport function hirate(): Position {\n  return {\n    pos: [\n      [Kyou1, Kei1, Gin1, Kin1, Gyoku1, Kin1, Gin1, Kei1, Kyou1],\n      [Empty, Kaku1, Empty, Empty, Empty, Empty, Empty, Hisha1, Empty],\n      [Fu1, Fu1, Fu1, Fu1, Fu1, Fu1, Fu1, Fu1, Fu1],\n      [Empty, Empty, Empty, Empty, Empty, Empty, Empty, Empty, Empty],\n      [Empty, Empty, Empty, Empty, Empty, Empty, Empty, Empty, Empty],\n      [Empty, Empty, Empty, Empty, Empty, Empty, Empty, Empty, Empty],\n      [Fu0, Fu0, Fu0, Fu0, Fu0, Fu0, Fu0, Fu0, Fu0],\n      [Empty, Hisha0, Empty, Empty, Empty, Empty, Empty, Kaku0, Empty],\n      [Kyou0, Kei0, Gin0, Kin0, Gyoku0, Kin0, Gin0, Kei0, Kyou0],\n    ],\n    cap0: [0, 0, 0, 0, 0, 0, 0],\n    cap1: [0, 0, 0, 0, 0, 0, 0],\n    turn: Sente,\n    moveCount: 0,\n  }\n}\n","import { action, computed, observable } from 'mobx'\nimport { canPromote, mustPromote, promote } from '../lib/game-handler/piece'\nimport { move } from '../lib/game-handler/position'\nimport { changeIndex } from '../lib/kif-handler/changeIndex'\nimport { genKifString } from '../lib/kif-handler/genKifString'\nimport getCurrent from '../lib/kif-handler/getCurrent'\nimport pushMove from '../lib/kif-handler/pushMove'\nimport getTargets from '../lib/validatior/getTargets'\nimport { find } from '../lib/validatior/utils/algorithm'\nimport filterTargets from '../lib/validatior/utils/filterTargets'\nimport { ClickProps } from '../model/events/ClickProps'\nimport { MoveProps } from '../model/events/MoveProps'\nimport Kif, { newKif } from '../model/kif/Kif'\nimport { Move } from '../model/kif/Move'\nimport Confirm from '../model/shogi/Confirm'\nimport { GameState } from '../model/shogi/GameState'\nimport { Piece } from '../model/shogi/Piece'\nimport Point from '../model/shogi/Point'\nimport { Position } from '../model/shogi/Position'\nimport { Turn, Gote, Sente } from '../model/shogi/Turn'\n\nexport class DefaultGameState implements GameState {\n  @observable indexes: number[]\n  @observable selected: Point | null\n  @observable confirm: Confirm | null\n  @observable moveTargets: Point[]\n  @observable kif: Kif\n\n  constructor() {\n    this.indexes = [-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n    this.selected = null\n    this.confirm = null\n    this.moveTargets = []\n    this.kif = newKif() // TODO\n  }\n\n  @computed get currentMove(): Move {\n    return getCurrent(this.kif)\n  }\n\n  @action reverse(): void {\n    this.indexes = this.indexes.slice().reverse()\n  }\n\n  @action clickPiece(p: ClickProps): void {\n    const sel: Point | null = this.selected\n    const turn: Turn = this.currentMove.pos.turn\n\n    // Confirm 画面なのに、成・不成以外がクリックされたらなにもしない\n    if (!!this.confirm && isPiece(p.clicked)) return\n\n    // 選択された駒をクリックしたら選択解除\n    if (!!sel && isPiece(p.clicked) && selectedAgain(sel, p)) {\n      this.selected = null\n      this.moveTargets = []\n      return\n    }\n\n    // 手番側の駒なら選択する\n    if (isPiece(p.clicked) && ownerIsTurn(p.clicked, turn)) {\n      const { row, column, clicked, i } = p\n      const point: Point = { row, column, piece: clicked, i }\n      this.selected = point\n      const targets = getTargets(this.currentMove.pos, point)\n      const filtered = filterTargets(this.currentMove.pos, point, targets)\n      this.moveTargets = filtered\n      return\n    }\n\n    // 選択された駒がない場合は、手番ではない方の駒or空白マスがクリックされた\n    // ということなので何もしない\n    // `|| sel.piece === undefined` の部分は\n    // この後のコードで TypeScript のチェックを楽にするため\n    if (!sel || !sel.piece) return\n\n    // 動けない場所がクリックされたらなにもしない\n    const foundIndex: number = find(this.moveTargets, p)\n    if (foundIndex === -1) return\n\n    const source: Point = { row: sel.row, column: sel.column }\n    const dest: Point = { row: p.row, column: p.column }\n\n    const moveAndUpdateState = (piece: Piece, promote?: boolean) => {\n      const moveProps: MoveProps = {\n        pos: this.currentMove.pos,\n        source,\n        dest,\n        piece,\n        promote,\n      }\n      const pos: Position = move(moveProps)\n      const kifStr: string = genKifString(moveProps)\n      const moveForKif: Move = {\n        index: this.currentMove.index + 1,\n        str: kifStr,\n        pos,\n        source,\n        dest,\n        piece,\n        promote,\n      }\n      this.selected = null\n      this.confirm = null\n      this.moveTargets = []\n      this.kif = pushMove(this.kif, moveForKif)\n    }\n\n    // Confirm オブジェクトがクリックされたら動かす(成 or 不成の処理)\n    if (!isPiece(p.clicked)) {\n      const piece: Piece = p.promote ? p.clicked.promoted : p.clicked.preserved\n      moveAndUpdateState(piece, p.promote === true)\n      return\n    }\n\n    // 成を選択できるか\n    const cp: boolean = canPromote({\n      sourceRow: sel.row,\n      destRow: p.row,\n      piece: sel.piece,\n    })\n\n    // 強制的に成る必要があるか\n    const mp: boolean = mustPromote(sel.piece, p.row)\n\n    // 成・不成の選択ができるように、Confirm オブジェクトをセット\n    if (cp && !mp) {\n      this.confirm = {\n        promoted: promote(sel.piece),\n        preserved: sel.piece,\n        row: p.row,\n        column: p.column,\n      }\n      return\n    }\n\n    const piece: Piece = mp ? promote(sel.piece) : sel.piece\n    moveAndUpdateState(piece, mp || undefined)\n  }\n\n  @action clickKif(moveCount: number, branchIndex?: number): void {\n    if (this.confirm) return\n    this.kif = changeIndex(this.kif, moveCount, branchIndex)\n    this.selected = null\n    this.moveTargets = []\n  }\n}\n\nfunction isPiece(pc: Piece | Confirm): pc is Piece {\n  return typeof pc === 'number'\n}\n\nfunction ownerIsTurn(p: Piece, t: Turn): boolean {\n  return (p < 0 && t === Gote) || (p > 0 && t === Sente)\n}\n\nfunction selectedAgain(sel: Point, cp: ClickProps): boolean {\n  return (\n    sel.row === cp.row &&\n    sel.column === cp.column &&\n    sel.piece === cp.clicked &&\n    sel.i === cp.i\n  )\n}\n","import { Fu0, Gyoku0, Piece } from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\nimport { Position } from '../../../model/shogi/Position'\nimport { Gote, Sente, Turn } from '../../../model/shogi/Turn'\nimport { moveBoardOnly } from '../../game-handler/position'\nimport getTargets from '../getTargets'\nimport getGyokuPoint from './getGyokuPoint'\nimport isPointed from './isPointed'\n\n/**\n * 王手放置か打ち歩詰めだったら弾く\n * @param pos Position 動かす前の配置\n * @param point Point 動かしたい駒の場所情報\n * @param targets point を getTargets で取得したリスト\n * @returns targets にフィルターをかけた結果\n */\nexport default function filter(\n  pos: Position,\n  point: Point,\n  targets: Point[]\n): Point[] {\n  if (!point.piece) throw new Error('piece id is needed')\n\n  const turn: Turn = point.piece > 0 ? Sente : Gote\n\n  // 手番側の玉がある場所。駒を動かしたとき王手放置にならないようにメモしておく\n  let gp = getGyokuPoint(pos.pos, turn)\n\n  // 王手放置・打ち歩詰めチェックを通った場所を入れていく\n  const filtered: Point[] = []\n\n  for (let i = 0; i < targets.length; i++) {\n    // 盤上だけ動かす\n    const moved: Position = moveBoardOnly({\n      pos: pos,\n      source: { row: point.row, column: point.column },\n      dest: { row: targets[i].row, column: targets[i].column },\n      piece: point.piece as Piece,\n    })\n\n    // 玉自身の動きチェックをしていたら、玉が動くので、再セット\n    if (point.piece && Math.abs(point.piece) === Gyoku0)\n      gp = getGyokuPoint(moved.pos, turn)\n\n    // 王手放置ならpushしない\n    const isOute = gp !== undefined && isPointed(moved, gp, -turn as Turn)\n    if (isOute) continue\n\n    // 打ち歩詰めチェック\n    const isFu: boolean = Math.abs(point.piece) === Fu0\n    const isFromCapture: boolean = point.row === -1\n    const enemyGyoku = getGyokuPoint(moved.pos, -turn as Turn)\n    // 打った歩による王手である\n    if (\n      isFu &&\n      isFromCapture &&\n      enemyGyoku !== undefined &&\n      isPointed(moved, enemyGyoku, turn)\n    ) {\n      // 打った歩が次に取られるか\n      const fuIsPointed = isPointed(moved, targets[i], -turn as Turn)\n\n      // 相手玉が逃げられる場所があるか\n      const enemyGyokuTargets = getTargets(moved, enemyGyoku)\n      const filteredEnemyGyokuTargets = filter(\n        moved,\n        enemyGyoku,\n        enemyGyokuTargets\n      )\n\n      // 打った歩が取られない && 逃げ場所がないとき、打ち歩詰めである\n      if (!fuIsPointed && filteredEnemyGyokuTargets.length === 0) continue\n    }\n\n    // OK\n    filtered.push(targets[i])\n  }\n\n  return filtered\n}\n","import History, { isBranch, KifComponent } from '../../model/kif/History'\nimport Kif from '../../model/kif/Kif'\nimport { Move } from '../../model/kif/Move'\n\n/**\n * 棋譜の現在表示局面のMoveを返す\n * 開始局面は0なので、3手目を表示中なら3と3手目のMoveが返る\n * @param k Kif\n */\nexport default function(k: Kif): Move {\n  let history: History = k.history\n  let moveOrBranch: KifComponent = history.moves[history.index]\n\n  while (isBranch(moveOrBranch)) {\n    history = moveOrBranch.branches[moveOrBranch.index]\n    moveOrBranch = history.moves[history.index]\n  }\n\n  return moveOrBranch\n}\n","import { observable, observe } from 'mobx'\nimport { DefaultConfig } from '../config/Config'\nimport { Config } from '../model/config/Config'\nimport { DisplayState } from '../model/display/DisplayState'\nimport { EngineState } from '../model/engine/EngineState'\nimport { Connected } from '../model/engine/State'\nimport { Move } from '../model/kif/Move'\nimport { GameState } from '../model/shogi/GameState'\nimport { Store } from '../model/store/Store'\nimport { DefaultDisplayState } from './DisplayState'\nimport { DefaultEngineState } from './EngineState'\nimport { DefaultGameState } from './GameState'\n\nexport class DefaultStore implements Store {\n  @observable gameState: GameState\n  @observable engineState: EngineState\n  @observable displayState: DisplayState\n  @observable config: Config\n\n  constructor() {\n    this.gameState = new DefaultGameState()\n    this.engineState = new DefaultEngineState()\n    this.displayState = new DefaultDisplayState()\n    this.config = new DefaultConfig()\n    this.engineState.setServerURL(this.config.serverURL)\n\n    // gameState で現在局面に変更があったら、将棋エンジンに局面をセットする\n    observe(this.gameState, 'currentMove', change =>\n      this.updatePosition(change.newValue)\n    )\n\n    // config の serverURL に変更があったら、engineState の serverURL を更新する\n    observe(this.config, 'serverURL', change =>\n      this.engineState.setServerURL(change.newValue)\n    )\n  }\n\n  async updatePosition(move?: Move): Promise<void> {\n    const setPositionExecutable: boolean = this.engineState.state >= Connected\n    if (!setPositionExecutable) return\n\n    const m: Move = move || this.gameState.currentMove\n    this.engineState.updatePosition(m.pos)\n  }\n}\n","import ClipboardJS from 'clipboard'\nimport { Provider } from 'mobx-react'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\nimport './index.scss'\nimport { Store } from './model/store/Store'\nimport * as serviceWorker from './serviceWorker'\nimport { DefaultStore } from './store/Store'\n\nconst store: Store = new DefaultStore()\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\nnew ClipboardJS('.Copy')\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register()\n"],"sourceRoot":""}