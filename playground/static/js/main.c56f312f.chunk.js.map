{"version":3,"sources":["config/Config.ts","store/DisplayState.ts","model/display/MockupState.ts","lib/game-handler/captures.ts","model/shogi/Piece.ts","lib/game-handler/piece.ts","lib/game-handler/position.ts","model/shogi/Turn.ts","model/engine/Optoin.ts","infrastructure/ShogiBoardClient.ts","store/EngineState.ts","model/engine/State.ts","model/kif/History.ts","lib/kif-handler/changeIndex.ts","lib/strings.ts","lib/kif-handler/genKifString.ts","lib/kif-handler/pushMove.ts","lib/validatior/utils/getEmpties.ts","lib/validatior/utils/getFromNexts.ts","lib/validatior/utils/algorithm.ts","lib/validatior/utils/getWithDiff.ts","lib/validatior/pieces/hisha.ts","lib/validatior/pieces/kaku.ts","lib/validatior/getTargets.ts","lib/validatior/pieces/fu.ts","lib/validatior/pieces/kyou.ts","lib/validatior/pieces/kei.ts","lib/validatior/pieces/gin.ts","lib/validatior/pieces/kin.ts","lib/validatior/pieces/gyoku.ts","lib/validatior/pieces/uma.ts","lib/validatior/pieces/ryu.ts","lib/validatior/utils/getGyokuPoint.ts","lib/validatior/utils/isPointed.ts","store/GameState.ts","lib/validatior/utils/filterTargets.ts","lib/kif-handler/getCurrent.ts","model/kif/Kif.ts","model/shogi/PositionInit.ts","store/Store.ts","components/engine/info/Columns.tsx","components/engine/info/SideInfo.tsx","components/util/CloseButton.tsx","components/form/Button.tsx","components/engine/connection/form/Buttons.tsx","components/form/Check.tsx","components/engine/connection/form/Checks.tsx","components/engine/connection/form/Range.tsx","components/engine/connection/form/Ranges.tsx","components/form/Select.tsx","components/engine/connection/form/Selects.tsx","components/form/Text.tsx","components/engine/connection/form/Texts.tsx","components/engine/connection/Detail.tsx","components/util/Loader.tsx","components/engine/connection/List.tsx","components/engine/connection/Controller.tsx","components/setting/Setting.tsx","components/shogi/Cell.tsx","components/shogi/Board.tsx","lib/kif-handler/getAsString.ts","components/shogi/Buttons.tsx","components/shogi/Captures.tsx","components/shogi/LeftSide.tsx","components/shogi/Kif.tsx","lib/dom-handler/intoView.ts","components/shogi/RightSide.tsx","components/shogi/BoardArea.tsx","components/App.tsx","serviceWorker.ts","index.tsx"],"names":["DefaultConfig","keys","paintTargets","serverURL","saveToLocalStorage","this","get","b","set","String","s","Object","values","forEach","key","remove","value","localStorage","setItem","getItem","removeItem","observable","action","DefaultDisplayState","state","mockup","handle","cap","p","f","Error","map","count","index","v","promote","demote","Math","abs","canPromote","props","sourceRow","isPromotable","piece","rows","isInEnemyArea","includes","destRow","move","handleCaptures","turn","pos","slice","d","dest","row","column","i","increaseCaptures","source","decreaseCaptures","updatedCap0","cap0","updatedCap1","cap1","moveOnBoard","moveCount","moveBoardOnly","line","r","c","Button","name","_","Check","initial","default","Range","min","max","inputValue","toString","n","Number","isNaN","Select","vars","Text","ShogiBoardClient","engineName","_engineName","_serverURL","engineNameKey","updateRange","debounce","rng","a","post","updateText","txt","buildUrl","url","axios","res","data","m","buttons","Map","checks","ranges","selects","texts","t","btn","chk","sel","current","resp","entries","sort","info","moves","length","pieceId","mp","isPromoted","push","e","k","id","shortid","generate","score","reverse","path","body","headers","withName","encodeURIComponent","query","DefaultEngineState","names","setState","sbclient","connect","getOptions","options","console","error","alert","disconnect","close","start","stop","result","setPosition","computed","isBranch","changeHistory","h","x","y","lastIndex","last","init","xPassesIfBranch","concat","undefined","branches","changeBranch","columns","rowString","columnString","genKifString","checkPromotable","pc","pieceString","dr","dc","sr","sc","pushToHistory","lastIsCurrent","pushToBranch","nextIndex","next","moveEquals","tail","createBranch","recursive","indexOfNewMove","findIndex","toHistory","invalidRows","invalidColumns","points","nexts","comp","find","pts","l","rowDiff","columnDiff","target","getEmpties","diffList","getWithDiff","point","columnsOfContainingFu","col","invalidRow","nextRow","fu","diff","kyou","invalidRow1","invalidRow2","getFromNexts","kei","gin","kin","kaku","hisha","gyoku","kakuPoint","kakuTargets","targets","uma","hishaPoint","hishaTargets","ryu","isPointed","attacker","ignoreCheckLeaving","getTargets","DefaultGameState","indexes","selected","currentMove","confirm","isPiece","clicked","cp","selectedAgain","moveTargets","ownerIsTurn","filtered","filter","gp","getGyokuPoint","moved","isFu","isFromCapture","enemyGyoku","fuIsPointed","filteredEnemyGyokuTargets","filterTargets","moveAndUpdateState","old","moveProps","kifStr","moveForKif","str","kif","meta","history","mustPromote","promoted","preserved","branchIndex","moveOrBranch","getCurrent","initPos","version","player","sente","gote","handicap","newKif","DefaultStore","engineState","setServerURL","config","observe","gameState","change","updatePosition","newValue","StoreContext","createContext","observer","React","useContext","className","SideInfo","CloseButton","one","two","onClick","width","height","x1","y1","x2","y2","stroke","strokeWidth","label","elms","Array","from","option","updateButton","type","onChange","checked","htmlFor","data-checked","data-unchecked","setValue","updateCheck","labelText","placeholder","required","opts","updateSelect","allowEmpty","classes","join","strElms","displayState","disconnectBtn","startBtn","startThinking","then","closeMockup","fetchInterval","catch","interval","getResult","setResult","Loader","store","latestEngineState","useRef","useEffect","list","setNames","err","msg","engineNames","loader","setCurrentEngine","child","setMockupState","setPaintTargets","setSaveToLocalStorage","inRange","getPiece","isTurn","isTargeted","rowInRange","colInRange","isLeft","rv","isTop","isStar","isSelected","rvp","pieceImg","pieceTurn","pieceSelected","pieceTargeted","left","top","edgeText","star","getClassName","click","cf","isReversed","isGote","renderConfirm","renderEdgeTextRow","renderEdgeTextColumn","clickPiece","idx","renderMockup","getAsString","getRec","kc","prevOne","nextOne","prevFive","nextFive","skipKif","clickKif","engineOnClick","connectToEngine","stopThinking","data-clipboard-text","log","captures","isLeftSide","cells","children","selectedClass","getSelectedClass","isTurnClass","sideNumber","captureClass","caps","document","getElementById","scrollIntoViewIfNeeded","intoView","renderKif","flatMap","main","head","rest","otherHeadsDom","restDom","renderMove","renderBranch","BoardArea","isThinking","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","ClipboardJS","URL","process","href","origin","addEventListener","fetch","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.c56f312f.chunk.js","sourcesContent":["import { action, observable } from 'mobx'\nimport { Config } from '../model/config/Config'\n\nexport class DefaultConfig implements Config {\n  @observable paintTargets: boolean\n  @observable serverURL: string\n  @observable saveToLocalStorage: boolean\n\n  private readonly keys = {\n    paintTargets: 'paintTargets',\n    serverURL: 'serverURL',\n    saveToLocalStorage: 'saveToLocalStorage',\n  }\n\n  constructor() {\n    this.paintTargets = !(this.get(this.keys.paintTargets) === 'false')\n    this.serverURL = this.get(this.keys.serverURL) || ''\n    this.saveToLocalStorage = this.get(this.keys.saveToLocalStorage) === 'true'\n  }\n\n  @action\n  async setPaintTargets(b: boolean): Promise<void> {\n    this.paintTargets = b\n    if (this.saveToLocalStorage) this.set(this.keys.paintTargets, String(b))\n  }\n\n  @action\n  async setServerURL(s: string): Promise<void> {\n    this.serverURL = s\n    if (this.saveToLocalStorage) this.set(this.keys.serverURL, s)\n  }\n\n  @action\n  async setSaveToLocalStorage(b: boolean): Promise<void> {\n    this.saveToLocalStorage = b\n\n    if (this.saveToLocalStorage) {\n      const { saveToLocalStorage, serverURL, paintTargets } = this.keys\n      this.set(saveToLocalStorage, String(b))\n      this.set(serverURL, this.serverURL)\n      this.set(paintTargets, String(this.paintTargets))\n      return\n    }\n\n    // false なら削除する\n    Object.values(this.keys).forEach(key => this.remove(key))\n  }\n\n  private set(key: string, value: string): void {\n    localStorage.setItem(key, value)\n  }\n  private get(key: string): string | null {\n    return localStorage.getItem(key)\n  }\n  private remove(key: string): void {\n    localStorage.removeItem(key)\n  }\n}\n","import { action, observable } from 'mobx'\nimport { DisplayState } from '../model/display/DisplayState'\nimport { MockupHidden, MockupState } from '../model/display/MockupState'\n\nexport class DefaultDisplayState implements DisplayState {\n  @observable mockup: MockupState = MockupHidden\n\n  @action\n  async setMockupState(state: MockupState): Promise<void> {\n    this.mockup = state\n  }\n\n  @action\n  async closeMockup(): Promise<void> {\n    this.mockup = MockupHidden\n  }\n}\n","// モックアップの表示をコントロールするための情報\nexport type MockupState = number\n\n// 非表示\nexport const MockupHidden: MockupState = 1\n\n// 将棋エンジンとの接続を制御したりする画面\nexport const MockupEngineControl: MockupState = 2\n\n// shogi-board-server の URL が設定されていないとき\n// 将棋エンジンに接続するボタンが押されたときに出す画面\nexport const MockupServerSetting: MockupState = 3\n\n// 設定画面\nexport const MockupSetting: MockupState = 4\n","import { Gyoku0, Gyoku1, Piece } from '../../model/shogi/Piece'\n\n/**\n * 持ち駒を1つ増やす\n * @param cap number[] 持ち駒を表す配列。詳細は Position.ts\n * @param p Piece 増やしたい駒\n */\nexport function increaseCaptures(cap: number[], p: Piece): number[] {\n  return handle(cap, Math.abs(p), i => i + 1)\n}\n\n/**\n * 持ち駒を1つ減らす\n * @param cap number[] 持ち駒を表す配列。詳細は Position.ts\n * @param p Piece 減らしたい駒\n */\nexport function decreaseCaptures(cap: number[], p: Piece): number[] {\n  return handle(cap, Math.abs(p), i => i - 1)\n}\n\nfunction handle(cap: number[], p: Piece, f: (i: number) => number): number[] {\n  if (p === Gyoku0 || p === Gyoku1 || p > 10)\n    throw new Error('Piece ID of Captures must not be Gyoku or over 10.')\n\n  return cap.map((count, index) => {\n    // 駒IDが一致しなければそのまま\n    // p は Math.abs() を通っている\n    if (index !== p - 1) return count\n\n    const v = f(count)\n    if (v < 0)\n      throw new Error(\n        'Invalid function call. Captures must not contain negative value.'\n      )\n\n    return v\n  })\n}\n","export type Piece = number\n\nexport const Empty: Piece = 0\n\nexport const Fu0: Piece = 1\nexport const Kyou0: Piece = 2\nexport const Kei0: Piece = 3\nexport const Gin0: Piece = 4\nexport const Kin0: Piece = 5\nexport const Kaku0: Piece = 6\nexport const Hisha0: Piece = 7\nexport const Gyoku0: Piece = 8\nexport const To0: Piece = 11\nexport const NariKyou0: Piece = 12\nexport const NariKei0: Piece = 13\nexport const NariGin0: Piece = 14\nexport const Uma0: Piece = 16\nexport const Ryu0: Piece = 17\n\nexport const Fu1: Piece = -Fu0\nexport const Kyou1: Piece = -Kyou0\nexport const Kei1: Piece = -Kei0\nexport const Gin1: Piece = -Gin0\nexport const Kin1: Piece = -Kin0\nexport const Kaku1: Piece = -Kaku0\nexport const Hisha1: Piece = -Hisha0\nexport const Gyoku1: Piece = -Gyoku0\nexport const To1: Piece = -To0\nexport const NariKyou1: Piece = -NariKyou0\nexport const NariKei1: Piece = -NariKei0\nexport const NariGin1: Piece = -NariGin0\nexport const Uma1: Piece = -Uma0\nexport const Ryu1: Piece = -Ryu0\n","import {\n  Piece,\n  Empty,\n  Hisha0,\n  Kin0,\n  Fu0,\n  Fu1,\n  Kyou0,\n  Kyou1,\n  Kei0,\n  Kei1,\n} from '../../model/shogi/Piece'\n\n/**\n * 駒を成る\n * canPromote を通っている前提\n * @param p Piece 成る前の駒\n */\nexport function promote(p: Piece): Piece {\n  if (p > 0) return p + 10\n  return p - 10\n}\n\n/**\n * 駒を成る前の駒にする\n * @param p Piece 成駒\n */\nexport function demote(p: Piece): Piece {\n  if (Math.abs(p) < 10) return p\n\n  if (p < 0) return p + 10\n  return p - 10\n}\n\nexport interface CanPromoteProps {\n  // 移動前の行\n  sourceRow: number\n\n  // 移動後の行\n  destRow: number\n\n  // 移動する駒\n  piece: Piece\n}\n\n/**\n * 成・不成の選択ができるかどうか\n * 選択可能: true\n * 選択不可: false\n * @param props CanPromoteProps\n * @returns boolean\n *          成れる駒 && sourceRow か destRow が敵陣なら true\n *          成れない駒(金とか、既に成駒の場合)なら false\n */\nexport function canPromote(props: CanPromoteProps): boolean {\n  // 持ち駒\n  if (props.sourceRow === -1) return false\n\n  const isPromotable: boolean =\n    props.piece !== Empty &&\n    Math.abs(props.piece) !== Kin0 &&\n    Math.abs(props.piece) <= Hisha0\n\n  const rows: number[] = props.piece > 0 ? [0, 1, 2] : [6, 7, 8]\n  const isInEnemyArea: boolean =\n    rows.includes(props.sourceRow) || rows.includes(props.destRow)\n\n  return isPromotable && isInEnemyArea\n}\n\n/**\n * 移動後に、必ず成る必要があるか\n * 歩・香・桂が不成の場合に次に動けないとき true\n * @param p Piece 動かす駒\n * @param row 移動後の行\n * @returns boolean\n *          成必要がある場合 true\n */\nexport function mustPromote(p: Piece, row: number): boolean {\n  return (\n    ((p === Fu0 || p === Kyou0) && row === 0) ||\n    ((p === Fu1 || p === Kyou1) && row === 8) ||\n    (p === Kei0 && (row === 0 || row === 1)) ||\n    (p === Kei1 && (row === 8 || row === 7))\n  )\n}\n","import { MoveProps } from '../../model/events/MoveProps'\nimport { Empty, Piece } from '../../model/shogi/Piece'\nimport { Position } from '../../model/shogi/Position'\nimport { Gote, Sente, Turn } from '../../model/shogi/Turn'\nimport { decreaseCaptures, increaseCaptures } from './captures'\nimport { demote } from './piece'\n\nexport function move(p: MoveProps): Position {\n  // 持ち駒を更新する\n  type CaptureHandler = (cap: number[], turn: Turn) => number[]\n  const handleCaptures: CaptureHandler = (cap: number[], turn: Turn) => {\n    // 手番ではない場合、何もしない\n    if (p.pos.turn !== turn) return cap.slice()\n\n    // 移動先が相手の駒なら持ち駒を増やす\n    const d: Piece = p.pos.pos[p.dest.row][p.dest.column]\n    if (d * turn < 0) return increaseCaptures(cap, demote(d))\n\n    // 移動元が持ち駒なら減らす\n    if (p.source.row === -1 && p.source.column === -1)\n      return decreaseCaptures(cap, p.piece)\n\n    return cap.slice()\n  }\n\n  const updatedCap0: number[] = handleCaptures(p.pos.cap0, Sente)\n  const updatedCap1: number[] = handleCaptures(p.pos.cap1, Gote)\n\n  return {\n    pos: moveOnBoard(p),\n    cap0: updatedCap0,\n    cap1: updatedCap1,\n    turn: -p.pos.turn as Turn,\n    moveCount: p.pos.moveCount + 1,\n  }\n}\n\nexport function moveBoardOnly(p: MoveProps): Position {\n  return {\n    pos: moveOnBoard(p),\n    cap0: p.pos.cap0.slice(),\n    cap1: p.pos.cap1.slice(),\n    turn: -p.pos.turn as Turn,\n    moveCount: p.pos.moveCount + 1,\n  }\n}\n\nfunction moveOnBoard(p: MoveProps): number[][] {\n  return p.pos.pos.map((line, r) =>\n    line.map((piece, c) => {\n      // 移動前の位置なら空マスに\n      if (p.source.row === r && p.source.column === c) return Empty\n\n      // 移動先の位置なら更新\n      if (p.dest.row === r && p.dest.column === c) return p.piece\n\n      return piece\n    })\n  )\n}\n","// 手番\n//  1: 先手\n// -1: 後手\nexport type Turn = 1 | -1\n\nexport const Sente: Turn = 1\nexport const Gote: Turn = -1\n","import { action, observable } from 'mobx'\n\ninterface Option<T> {\n  readonly name: string\n  setValue(value: T): void\n}\n\nexport class Button implements Option<any> {\n  readonly name: string\n  constructor(name: string) {\n    this.name = name\n  }\n\n  setValue(_: any): void {}\n}\n\nexport class Check implements Option<boolean> {\n  @observable value: boolean\n  readonly name: string\n  readonly default: boolean\n  constructor(name: string, value: boolean, initial: boolean) {\n    this.name = name\n    this.value = value\n    this.default = initial\n  }\n\n  @action setValue(value: boolean): void {\n    this.value = value\n  }\n}\n\nexport class Range implements Option<string> {\n  @observable value: number\n  @observable inputValue: string\n  readonly name: string\n  readonly default: number\n  readonly min: number\n  readonly max: number\n  constructor(\n    name: string,\n    value: number,\n    initial: number,\n    min: number,\n    max: number\n  ) {\n    this.name = name\n    this.value = value\n    this.inputValue = value.toString()\n    this.default = initial\n    this.min = min\n    this.max = max\n  }\n\n  @action setValue(value: string): void {\n    this.inputValue = value\n    const n: number = Number(this.inputValue)\n    if (Number.isNaN(n) || n < this.min || n > this.max) return\n    this.value = n\n  }\n}\n\nexport class Select implements Option<string> {\n  @observable value: string\n  readonly name: string\n  readonly default: string\n  readonly vars: string[]\n  constructor(name: string, value: string, initial: string, vars: string[]) {\n    this.name = name\n    this.value = value\n    this.default = initial\n    this.vars = vars\n  }\n\n  @action setValue(value: string) {\n    this.value = value\n  }\n}\n\nexport class Text implements Option<string> {\n  @observable value: string\n  readonly name: string\n  readonly default: string\n\n  constructor(name: string, value: string, initial: string) {\n    this.name = name\n    this.value = value\n    this.default = initial\n  }\n\n  @action setValue(value: string) {\n    this.value = value\n  }\n}\n\nexport interface Options {\n  buttons: Map<string, Button>\n  checks: Map<string, Check>\n  ranges: Map<string, Range>\n  selects: Map<string, Select>\n  texts: Map<string, Text>\n}\n","import axios from 'axios'\nimport debounce from 'lodash.debounce'\nimport shortid from 'shortid'\nimport { move } from '../lib/game-handler/position'\nimport { Info } from '../model/engine/Info'\nimport {\n  Button,\n  Check,\n  Options,\n  Range,\n  Select,\n  Text,\n} from '../model/engine/Optoin'\nimport { MoveProps } from '../model/events/MoveProps'\nimport { Move } from '../model/kif/Move'\nimport { ResponseInfo } from '../model/response/ResponseInfo'\nimport { Empty } from '../model/shogi/Piece'\nimport { Position } from '../model/shogi/Position'\n\nconst DEBOUNCE_MILLIS = 1000\n\nexport class ShogiBoardClient {\n  private _engineName?: string\n  private _serverURL?: string\n\n  private readonly engineNameKey = 'key'\n\n  constructor(engineName?: string, serverURL?: string) {\n    this._engineName = engineName\n    this._serverURL = serverURL\n  }\n\n  set engineName(name: string) {\n    this._engineName = name\n  }\n\n  get engineName(): string {\n    if (!this._engineName) throw new Error('engineName is not defined.')\n    return this._engineName\n  }\n\n  set serverURL(url: string) {\n    this._serverURL = url\n  }\n\n  get serverURL(): string {\n    if (!this._serverURL) throw new Error('serverURL is not defined. serverURL')\n    return this._serverURL\n  }\n\n  async init(): Promise<string[]> {\n    const url = await this.buildUrl('init', false)\n    const res = await axios.post(url)\n    return res.data\n  }\n\n  async connect(): Promise<void> {\n    return await this.post('connect')\n  }\n\n  async close(): Promise<void> {\n    return await this.post('close')\n  }\n\n  async start(): Promise<void> {\n    return await this.post('start')\n  }\n\n  async stop(): Promise<void> {\n    return await this.post('stop')\n  }\n\n  async getOptions(): Promise<Options> {\n    // res は Options と言いつつ、中身は Map じゃなくて object\n    // TODO: データの持ち方考える\n    const res: Options = await this.get('options/get')\n    const m: Options = {\n      buttons: new Map(),\n      checks: new Map(),\n      ranges: new Map(),\n      selects: new Map(),\n      texts: new Map(),\n    }\n    Object.values(res.buttons).forEach(b =>\n      m.buttons.set(b.name, new Button(b.name))\n    )\n    Object.values(res.checks).forEach(c =>\n      m.checks.set(c.name, new Check(c.name, c.value, c.default))\n    )\n    Object.values(res.ranges).forEach(r =>\n      m.ranges.set(r.name, new Range(r.name, r.value, r.default, r.min, r.max))\n    )\n    Object.values(res.selects).forEach(s =>\n      m.selects.set(s.name, new Select(s.name, s.value, s.default, s.vars))\n    )\n    Object.values(res.texts).forEach(t =>\n      m.texts.set(t.name, new Text(t.name, t.value, t.default))\n    )\n    return m\n  }\n\n  async updateButton(btn: Button): Promise<void> {\n    return await this.post('options/update/button', btn)\n  }\n\n  async updateCheck(chk: Check): Promise<void> {\n    return await this.post('options/update/check', chk)\n  }\n\n  updateRange = debounce(async (rng: Range): Promise<void> => {\n    return await this.post('options/update/range', rng)\n  }, DEBOUNCE_MILLIS)\n\n  async updateSelect(sel: Select): Promise<void> {\n    return await this.post('options/update/select', sel)\n  }\n\n  updateText = debounce(async (txt: Text): Promise<void> => {\n    return await this.post('options/update/text', txt)\n  }, DEBOUNCE_MILLIS)\n\n  async getResult(current: Move): Promise<Info[]> {\n    const resp: { number: ResponseInfo } = await this.get('result/get')\n    let p: Position = current.pos\n\n    // レスポンスのキーでソートされた ResponseInfo を取り出し、\n    // move メソッドで局面を動かしながら Info を生成していく\n    return Object.entries(resp)\n      .sort((a, b) => {\n        if (a[0] < b[0]) return -1\n        if (a[0] > b[0]) return 1\n        return 0\n      })\n      .map(([_, info]) => {\n        let i: number = 0\n        p = current.pos\n        const moves: MoveProps[] = []\n\n        try {\n          while (i < info.moves.length) {\n            const m = info.moves[i]\n            const source = { row: m.source!.row, column: m.source!.column }\n            const dest = { row: m.dest!.row, column: m.dest!.column }\n            const piece = m.pieceId || p.pos[source.row][source.column]\n            if (piece === Empty) break\n            const mp: MoveProps = {\n              pos: p,\n              source,\n              dest,\n              piece,\n              promote: m.isPromoted,\n            }\n            moves.push(mp)\n            p = move(mp)\n            i = (i + 1) | 0\n          }\n        } catch (e) {\n          // ズレは出るのでエラーは握りつぶす\n          // console.error(i, p, e)\n        }\n\n        const values = new Map()\n        Object.entries(info.values).forEach(([k, v]) => values.set(k, v))\n\n        return {\n          id: shortid.generate(),\n          values, // 一旦捨てる\n          score: info.score * current.pos.turn, // 後手番なら -1 をかける\n          moves,\n        }\n      })\n  }\n\n  async setPosition(p: Position): Promise<void> {\n    const pos: Position = {\n      pos: p.pos.map(r => r.slice().reverse()),\n      cap0: p.cap0,\n      cap1: p.cap1,\n      turn: p.turn,\n      moveCount: p.moveCount,\n    }\n    return await this.post('position/set', pos)\n  }\n\n  private async get<T>(path: string): Promise<T> {\n    const url = await this.buildUrl(path, true)\n    const res = await axios.get(url)\n    return res.data\n  }\n\n  private async post(path: string, body?: object): Promise<void> {\n    const url = await this.buildUrl(path, true)\n    await axios.post(url, body, {\n      headers: { 'Content-Type': 'application/json' },\n    })\n  }\n\n  private async buildUrl(path: string, withName: boolean) {\n    const e = (s: string) => encodeURIComponent(s)\n    const query = withName ? `?${this.engineNameKey}=${e(this.engineName)}` : ''\n    return `${this.serverURL}/${path}${query}`\n  }\n\n  private e(s: any): string {\n    return encodeURIComponent(s)\n  }\n}\n","import { action, computed, observable } from 'mobx'\nimport { ShogiBoardClient } from '../infrastructure/ShogiBoardClient'\nimport { EngineState } from '../model/engine/EngineState'\nimport { Info } from '../model/engine/Info'\nimport { Options } from '../model/engine/Optoin'\nimport {\n  Connected,\n  Connecting,\n  NotConnected,\n  StandBy,\n  State,\n  Thinking,\n} from '../model/engine/State'\nimport { Position } from '../model/shogi/Position'\n\nexport class DefaultEngineState implements EngineState {\n  @observable names: string[] = []\n  @observable current: string | null = null\n  @observable options: Options | null = null\n  @observable state: State = NotConnected\n  @observable result: Info[] | null = null\n  @observable serverURL: string = ''\n\n  @computed get sbclient(): ShogiBoardClient {\n    return new ShogiBoardClient(this.current || '', this.serverURL)\n  }\n\n  @action async setNames(names: string[]): Promise<void> {\n    this.names = names\n  }\n\n  @action async setState(state: State): Promise<void> {\n    this.state = state\n  }\n\n  @action async connect(name: string): Promise<void> {\n    if (!this.names.includes(name))\n      throw new Error('Unknown engine name. name=' + name)\n\n    this.current = name\n    try {\n      this.setState(Connecting)\n      await this.sbclient.connect()\n      this.options = await this.sbclient.getOptions()\n      this.setState(Connected)\n    } catch (e) {\n      console.error('Failed to connect', e)\n      alert('接続に失敗しました') // TODO\n      await this.disconnect()\n    }\n  }\n\n  @action async disconnect(): Promise<void> {\n    try {\n      await this.sbclient.close()\n    } catch (e) {\n      console.error('接続解除に失敗しました', e)\n    } finally {\n      this.current = null\n      this.options = null\n      this.state = NotConnected\n    }\n  }\n\n  @action async startThinking(): Promise<void> {\n    if (!this.current)\n      throw new Error('[startThinking] current engine is not set')\n\n    await this.sbclient.start()\n    await this.setState(Thinking)\n  }\n\n  @action async stopThinking(): Promise<void> {\n    if (!this.current)\n      throw new Error('[stopThinking] current engine is not set')\n    if (this.state !== Thinking) return\n\n    await this.sbclient.stop()\n    await this.setState(StandBy)\n  }\n\n  @action async setResult(i: Info[]): Promise<void> {\n    this.result = i\n  }\n\n  async updatePosition(p: Position): Promise<void> {\n    await this.sbclient.setPosition(p)\n  }\n\n  @action async setServerURL(s: string): Promise<void> {\n    this.serverURL = s\n  }\n}\n","// 将棋エンジンの状態を表すID\nexport type State = 0 | 1 | 2 | 3 | 4\n\n// 接続前\nexport const NotConnected: State = 0\n\n// 接続中・ローディング中のComponentを表示するため\nexport const Connecting: State = 1\n\n// 接続済\nexport const Connected: State = 2\n\n// 将棋エンジン、待機中(思考中ではない)\nexport const StandBy: State = 3\n\n// 将棋エンジン思考中\nexport const Thinking: State = 4\n","import Branch from './Branch'\nimport { Move } from './Move'\n\nexport type KifComponent = Move | Branch\n\n// TODO: もうちょい持ち方考える\n// 理想は\n// {\n//   head: Move,\n//   next: History,\n//   isCurrent: boolean\n// }\n// だが、JSON互換的に苦しい感じ\nexport default interface History {\n  moves: KifComponent[]\n\n  // history のインデックス\n  // ブラウザで表示するときに現在局面がどこか探せるように\n  index: number\n}\n\nexport function isBranch(m: KifComponent): m is Branch {\n  return 'branches' in m\n}\n","import Branch from '../../model/kif/Branch'\nimport History, { isBranch, KifComponent } from '../../model/kif/History'\nimport Kif from '../../model/kif/Kif'\n\n/**\n * 現在局面を更新した新しい棋譜を返す\n * @param k Kif 更新したい棋譜\n * @param x number 現在局面にしたい手数\n * @param y number | undefined 分岐を切り替える場合のみ、分岐のインデックス\n */\nexport function changeIndex(k: Kif, x: number, y?: number): Kif {\n  return {\n    meta: k.meta,\n    history: changeHistory(k.history, x, y),\n  }\n}\n\n// TODO: Move にインデックスを入れたので、少しシンプルにできる\nfunction changeHistory(h: History, x: number, y?: number): History {\n  const lastIndex: number = h.moves.length - 1\n  const last: KifComponent = h.moves[lastIndex]\n  const init: KifComponent[] = h.moves.slice(0, lastIndex)\n\n  const xPassesIfBranch: number = x <= lastIndex ? 0 : x - lastIndex\n\n  const moves: KifComponent[] = isBranch(last)\n    ? init.concat(changeBranch(last, xPassesIfBranch, y))\n    : h.moves.slice()\n\n  const index: number = x <= lastIndex ? x : lastIndex\n\n  return { moves, index }\n}\n\nfunction changeBranch(b: Branch, x: number, y?: number): Branch {\n  const index = x === 0 && y !== undefined ? y : b.index\n\n  if (x === 0)\n    return {\n      branches: b.branches.map(h => changeHistory(h, 0)),\n      index,\n    }\n\n  const branches = b.branches.map((h: History, i: number) =>\n    i === b.index ? changeHistory(h, x, y) : h\n  )\n\n  return { branches, index }\n}\n","import {\n  Fu0,\n  Gin0,\n  Gyoku0,\n  Hisha0,\n  Kaku0,\n  Kei0,\n  Kin0,\n  Kyou0,\n  NariGin0,\n  NariKei0,\n  NariKyou0,\n  Piece,\n  Ryu0,\n  To0,\n  Uma0,\n} from '../model/shogi/Piece'\n\nconst rows = ['一', '二', '三', '四', '五', '六', '七', '八', '九']\nconst columns = ['１', '２', '３', '４', '５', '６', '７', '８', '９']\n\nexport function rowString(r: number): string {\n  return rows[r]\n}\n\nexport function columnString(c: number): string {\n  return columns[c]\n}\n\nexport function pieceString(piece: Piece): string {\n  const p = Math.abs(piece)\n\n  if (p === Fu0) return '歩'\n  if (p === Kyou0) return '香'\n  if (p === Kei0) return '桂'\n  if (p === Gin0) return '銀'\n  if (p === Kin0) return '金'\n  if (p === Kaku0) return '角'\n  if (p === Hisha0) return '飛'\n  if (p === Gyoku0) return '玉'\n  if (p === To0) return 'と'\n  if (p === NariKyou0) return '成香'\n  if (p === NariKei0) return '成桂'\n  if (p === NariGin0) return '成銀'\n  if (p === Uma0) return '馬'\n  if (p === Ryu0) return '龍'\n\n  throw new Error('Failed to ident piece name. received: ' + piece)\n}\n","import { MoveProps } from '../../model/events/MoveProps'\nimport { canPromote, demote } from '../game-handler/piece'\nimport { columnString, pieceString, rowString } from '../strings'\n\n/**\n * 棋譜の文字列を生成する\n * @param p MoveProps\n * @param checkPromotable 将棋エンジンからもらう値では、不成or無印の判定が難しいので、\n *                        ここでチェックする。\n */\nexport function genKifString(\n  { source, dest, piece, promote }: MoveProps,\n  checkPromotable?: boolean\n): string {\n  const pc: string = pieceString(promote ? demote(piece) : piece)\n  const dr: string = rowString(dest.row)\n  const dc: string = columnString(dest.column)\n\n  if (source.row === -1) return `${dc}${dr}${pc}打`\n\n  const sr: number = source.row + 1\n  const sc: number = source.column + 1\n  const promoteStr: () => string = () => {\n    if (promote === true) return '成'\n\n    // undefined は無印\n    if (promote !== false) return ''\n\n    // promote === false && チェックしない\n    // or\n    // promote === false && 成れる駒\n    // なら不成\n    if (\n      !checkPromotable ||\n      canPromote({ sourceRow: source.row, destRow: dest.row, piece: piece })\n    )\n      return '不成'\n\n    return ''\n  }\n\n  return `${dc}${dr}${pc}${promoteStr()}(${sc}${sr})`\n}\n","import Branch from '../../model/kif/Branch'\nimport History, { isBranch, KifComponent } from '../../model/kif/History'\nimport Kif from '../../model/kif/Kif'\nimport { Move } from '../../model/kif/Move'\n\n/**\n * 棋譜に新しいMoveを追加する\n * @param old Kif\n * @param m Move 追加する一手\n */\nexport default function (old: Kif, m: Move): Kif {\n  return {\n    meta: old.meta,\n    history: pushToHistory(old.history, m),\n  }\n}\n\nfunction pushToHistory(h: History, m: Move): History {\n  const lastIsCurrent: boolean = h.index === h.moves.length - 1\n  const last: KifComponent = h.moves[h.index]\n\n  if (lastIsCurrent && isBranch(last))\n    return {\n      moves: h.moves\n        .slice(0, h.moves.length - 1)\n        .concat(pushToBranch(last, m, true)),\n      index: h.index,\n    }\n\n  const nextIndex: number = h.index + 1\n\n  if (lastIsCurrent)\n    return {\n      moves: h.moves.concat(m),\n      index: nextIndex,\n    }\n\n  const next: KifComponent = h.moves[nextIndex]\n  const init: KifComponent[] = h.moves.slice(0, nextIndex)\n\n  if (isBranch(next))\n    return {\n      moves: init.concat(pushToBranch(next, m, false)),\n      index: nextIndex,\n    }\n\n  // 追加しようとしてる Move が次と一緒ならインデックスだけ更新\n  if (moveEquals(m, next))\n    return {\n      moves: h.moves.slice(),\n      index: nextIndex,\n    }\n\n  const tail: KifComponent[] = h.moves.slice(nextIndex, h.moves.length)\n  return {\n    moves: init.concat(createBranch(tail, m)),\n    index: nextIndex,\n  }\n}\n\nfunction pushToBranch(b: Branch, m: Move, recursive: boolean): Branch {\n  // 分岐の先頭は現在表示局面ではないので、再帰的に更新する\n  if (recursive)\n    return {\n      branches: b.branches.map((h: History, i: number) => {\n        if (i === b.index) return pushToHistory(h, m)\n        return h\n      }),\n      index: b.index,\n    }\n\n  const indexOfNewMove: number = b.branches.findIndex(h =>\n    moveEquals(h.moves[0] as Move, m)\n  )\n\n  // 追加しようとしてる Move がすでに分岐の先頭にある\n  if (indexOfNewMove !== -1)\n    return {\n      branches: b.branches.slice(),\n      index: indexOfNewMove,\n    }\n\n  return {\n    branches: b.branches.concat(toHistory([m])),\n    index: b.branches.length,\n  }\n}\n\nfunction createBranch(tail: KifComponent[], m: Move): Branch {\n  return {\n    branches: [toHistory(tail), toHistory([m])],\n    index: 1,\n  }\n}\n\nfunction toHistory(c: KifComponent[]): History {\n  return { moves: c, index: 0 }\n}\n\nfunction moveEquals(a: Move, b: Move): boolean {\n  return (\n    a.index === b.index &&\n    a.source.row === b.source.row &&\n    a.source.column === b.source.column &&\n    a.dest.row === b.dest.row &&\n    a.dest.column === b.dest.column &&\n    a.piece === b.piece &&\n    a.promote === b.promote\n  )\n}\n","import { Piece, Empty } from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\n\nexport default function (\n  pos: Piece[][],\n  invalidRows?: number[],\n  invalidColumns?: number[]\n): Point[] {\n  const points: Point[] = []\n\n  for (let r = 0; r < 9; r++) {\n    if (invalidRows && invalidRows.includes(r)) continue\n\n    for (let c = 0; c < 9; c++) {\n      const columnIsInvalid = invalidColumns && invalidColumns.includes(c)\n      if (columnIsInvalid || pos[r][c] !== Empty) continue\n      points.push({ row: r, column: c })\n    }\n  }\n\n  return points\n}\n","import { Piece } from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\n\nexport default function (pos: Piece[][], nexts: number[][], p: Piece): Point[] {\n  const points: Point[] = []\n\n  for (let i = 0; i < nexts.length; i++) {\n    const row = nexts[i][0]\n    const column = nexts[i][1]\n    if (\n      row >= 0 &&\n      row <= 8 &&\n      column >= 0 &&\n      column <= 8 &&\n      pos[row][column] * p <= 0\n    )\n      points.push({ row, column })\n  }\n\n  return points\n}\n","import Point from '../../../model/shogi/Point'\n\nexport function comp(a: Point, b: Point): number {\n  return a.row - b.row || a.column - b.column\n}\n\nexport function find(pts: Point[], p: Point): number {\n  let i = pts.length >> 1\n  let l = 0\n  let r = pts.length - 1\n\n  while (l <= r) {\n    if (pts[i].row === p.row && pts[i].column === p.column) return i\n    if (pts[i].row < p.row) l = i + 1\n    else if (pts[i].row > p.row) r = i - 1\n    else if (pts[i].column < p.column) l = i + 1\n    else r = i - 1\n    i = l + ((r - l) >> 1)\n  }\n\n  return -1\n}\n","import { Piece } from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\n\nexport default function (\n  pos: Piece[][],\n  row: number,\n  column: number,\n  piece: Piece,\n  points: Point[],\n  rowDiff: number,\n  columnDiff: number\n): void {\n  while (0 <= row && row <= 8 && 0 <= column && column <= 8) {\n    const target: Piece = pos[row][column]\n    if (target * piece > 0) break\n    points.push({ row, column })\n    if (target * piece < 0) break\n    row += rowDiff\n    column += columnDiff\n  }\n}\n","import { Hisha0, Hisha1 } from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\nimport { Position } from '../../../model/shogi/Position'\nimport { comp } from '../utils/algorithm'\nimport getEmpties from '../utils/getEmpties'\nimport getWithDiff from '../utils/getWithDiff'\n\nexport default function (pos: Position, p: Point): Point[] {\n  if (!p.piece || (p.piece !== Hisha0 && p.piece !== Hisha1))\n    throw new Error('Called validation for hisha, but piece id was not hisha.')\n\n  if (p.row === -1 && p.column === -1) return getEmpties(pos.pos)\n\n  const diffList = [\n    [-1, 0],\n    [0, -1],\n    [0, 1],\n    [1, 0],\n  ]\n  const points: Point[] = []\n\n  for (let i = 0; i < diffList.length; i++) {\n    getWithDiff(\n      pos.pos,\n      p.row + diffList[i][0],\n      p.column + diffList[i][1],\n      p.piece,\n      points,\n      diffList[i][0],\n      diffList[i][1]\n    )\n  }\n\n  points.sort(comp)\n  return points\n}\n","import { Kaku0, Kaku1 } from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\nimport { Position } from '../../../model/shogi/Position'\nimport { comp } from '../utils/algorithm'\nimport getEmpties from '../utils/getEmpties'\nimport getWithDiff from '../utils/getWithDiff'\n\nexport default function (pos: Position, p: Point): Point[] {\n  if (!p.piece || (p.piece !== Kaku0 && p.piece !== Kaku1))\n    throw new Error('Called validation for kaku, but piece id was not kaku.')\n\n  if (p.row === -1 && p.column === -1) return getEmpties(pos.pos)\n\n  const diffList = [\n    [-1, -1],\n    [-1, 1],\n    [1, -1],\n    [1, 1],\n  ]\n  const points: Point[] = []\n\n  for (let i = 0; i < diffList.length; i++) {\n    getWithDiff(\n      pos.pos,\n      p.row + diffList[i][0],\n      p.column + diffList[i][1],\n      p.piece,\n      points,\n      diffList[i][0],\n      diffList[i][1]\n    )\n  }\n\n  points.sort(comp)\n  return points\n}\n","import {\n  Empty,\n  Fu0,\n  Fu1,\n  Gin0,\n  Gin1,\n  Gyoku0,\n  Gyoku1,\n  Hisha0,\n  Hisha1,\n  Kaku0,\n  Kaku1,\n  Kei0,\n  Kei1,\n  Kin0,\n  Kin1,\n  Kyou0,\n  Kyou1,\n  NariGin0,\n  NariGin1,\n  NariKei0,\n  NariKei1,\n  NariKyou0,\n  NariKyou1,\n  Ryu0,\n  Ryu1,\n  To0,\n  To1,\n  Uma0,\n  Uma1,\n} from '../../model/shogi/Piece'\nimport Point from '../../model/shogi/Point'\nimport { Position } from '../../model/shogi/Position'\nimport fu from './pieces/fu'\nimport gin from './pieces/gin'\nimport gyoku from './pieces/gyoku'\nimport hisha from './pieces/hisha'\nimport kaku from './pieces/kaku'\nimport kei from './pieces/kei'\nimport kin from './pieces/kin'\nimport kyou from './pieces/kyou'\nimport ryu from './pieces/ryu'\nimport uma from './pieces/uma'\n\n/**\n * 駒を動かせる場所を取得する\n * @param pos Position 駒の配置\n * @param point Point 動ける場所を取得したい駒の位置\n */\nexport default function (pos: Position, point: Point): Point[] {\n  const piece = point.piece\n\n  if (piece === Empty)\n    throw new Error('Cannot get targets to move for empty cell.')\n  if (piece === Fu0 || piece === Fu1) return fu(pos, point)\n  if (piece === Kyou0 || piece === Kyou1) return kyou(pos, point)\n  if (piece === Kei0 || piece === Kei1) return kei(pos, point)\n  if (piece === Gin0 || piece === Gin1) return gin(pos, point)\n  if (\n    piece === Kin0 ||\n    piece === Kin1 ||\n    piece === To0 ||\n    piece === To1 ||\n    piece === NariKyou0 ||\n    piece === NariKyou1 ||\n    piece === NariKei0 ||\n    piece === NariKei1 ||\n    piece === NariGin0 ||\n    piece === NariGin1\n  )\n    return kin(pos, point)\n  if (piece === Kaku0 || piece === Kaku1) return kaku(pos, point)\n  if (piece === Hisha0 || piece === Hisha1) return hisha(pos, point)\n  if (piece === Gyoku0 || piece === Gyoku1) return gyoku(pos, point)\n  if (piece === Uma0 || piece === Uma1) return uma(pos, point)\n  if (piece === Ryu0 || piece === Ryu1) return ryu(pos, point)\n\n  throw new Error('Could not get targets to move. Got invalid piece ID')\n}\n","import { Fu0, Fu1 } from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\nimport { Position } from '../../../model/shogi/Position'\nimport getEmpties from '../utils/getEmpties'\n\nexport default function (pos: Position, p: Point): Point[] {\n  if (!p.piece || (p.piece !== Fu0 && p.piece !== Fu1))\n    throw new Error('Called validation for fu, but piece id was not fu.')\n\n  // 二歩チェックのため、すでに歩がある列を入れておく\n  const columnsOfContainingFu: number[] = []\n  for (let col = 0; col < 9; col++) {\n    for (let row = 0; row < 9; row++) {\n      if (pos.pos[row][col] === p.piece) {\n        columnsOfContainingFu.push(col)\n        break\n      }\n    }\n  }\n\n  if (p.row === -1 && p.column === -1) {\n    const invalidRow: number = p.piece > 0 ? 0 : 8\n    return getEmpties(pos.pos, [invalidRow], columnsOfContainingFu)\n  }\n\n  const nextRow: number = p.piece > 0 ? p.row - 1 : p.row + 1\n\n  // 盤外か味方の駒ならなし\n  if (nextRow < 0 || nextRow > 8 || pos.pos[nextRow][p.column] * p.piece > 0)\n    return []\n\n  // 空マスか、相手の駒ならOK\n  return [{ row: nextRow, column: p.column }]\n}\n","import { Kyou0, Kyou1 } from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\nimport { Position } from '../../../model/shogi/Position'\nimport getEmpties from '../utils/getEmpties'\nimport getWithDiff from '../utils/getWithDiff'\n\nexport default function (pos: Position, p: Point): Point[] {\n  if (!p.piece || (p.piece !== Kyou0 && p.piece !== Kyou1))\n    throw new Error('Called validation for kyou, but piece id was not kyou.')\n\n  if (p.row === -1 && p.column === -1) {\n    const invalidRow: number = p.piece > 0 ? 0 : 8\n    return getEmpties(pos.pos, [invalidRow])\n  }\n\n  const diff = p.piece > 0 ? -1 : 1\n  const points: Point[] = []\n  getWithDiff(pos.pos, p.row + diff, p.column, p.piece, points, diff, 0)\n  if (p.piece > 0) points.reverse()\n  return points\n}\n","import { Kei0, Kei1 } from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\nimport { Position } from '../../../model/shogi/Position'\nimport getEmpties from '../utils/getEmpties'\nimport getFromNexts from '../utils/getFromNexts'\n\nexport default function (pos: Position, p: Point): Point[] {\n  if (!p.piece || (p.piece !== Kei0 && p.piece !== Kei1))\n    throw new Error('Called validation for kei, but piece id was not kei.')\n\n  if (p.row === -1 && p.column === -1) {\n    const invalidRow1: number = p.piece > 0 ? 0 : 8\n    const invalidRow2: number = p.piece > 0 ? invalidRow1 + 1 : invalidRow1 - 1\n    return getEmpties(pos.pos, [invalidRow1, invalidRow2])\n  }\n\n  const nextRow: number = p.piece > 0 ? p.row - 2 : p.row + 2\n  if (nextRow < 0 || nextRow > 8) return []\n  const nexts: number[][] = [\n    [nextRow, p.column - 1],\n    [nextRow, p.column + 1],\n  ]\n  return getFromNexts(pos.pos, nexts, p.piece)\n}\n","import { Gin0, Gin1 } from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\nimport { Position } from '../../../model/shogi/Position'\nimport getEmpties from '../utils/getEmpties'\nimport getFromNexts from '../utils/getFromNexts'\n\nexport default function (pos: Position, p: Point): Point[] {\n  if (!p.piece || (p.piece !== Gin0 && p.piece !== Gin1))\n    throw new Error('Called validation for gin, but piece id was not gin.')\n\n  if (p.row === -1 && p.column === -1) return getEmpties(pos.pos)\n\n  const nexts: number[][] =\n    p.piece > 0\n      ? [\n          [p.row - 1, p.column - 1],\n          [p.row - 1, p.column],\n          [p.row - 1, p.column + 1],\n          [p.row + 1, p.column - 1],\n          [p.row + 1, p.column + 1],\n        ]\n      : [\n          [p.row - 1, p.column - 1],\n          [p.row - 1, p.column + 1],\n          [p.row + 1, p.column - 1],\n          [p.row + 1, p.column],\n          [p.row + 1, p.column + 1],\n        ]\n\n  return getFromNexts(pos.pos, nexts, p.piece)\n}\n","import {\n  Kin0,\n  Kin1,\n  NariGin0,\n  NariGin1,\n  NariKei0,\n  NariKei1,\n  NariKyou0,\n  NariKyou1,\n  To0,\n  To1,\n} from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\nimport { Position } from '../../../model/shogi/Position'\nimport getEmpties from '../utils/getEmpties'\nimport getFromNexts from '../utils/getFromNexts'\n\nexport default function (pos: Position, p: Point): Point[] {\n  if (\n    !p.piece ||\n    (p.piece !== Kin0 &&\n      p.piece !== Kin1 &&\n      p.piece !== To0 &&\n      p.piece !== To1 &&\n      p.piece !== NariKyou0 &&\n      p.piece !== NariKyou1 &&\n      p.piece !== NariKei0 &&\n      p.piece !== NariKei1 &&\n      p.piece !== NariGin0 &&\n      p.piece !== NariGin1)\n  )\n    throw new Error(\n      'Called validation for kin(or promoted piece moves as same as kin), but piece id was not as expected.'\n    )\n\n  if (p.row === -1 && p.column === -1) return getEmpties(pos.pos)\n\n  const nexts: number[][] =\n    p.piece > 0\n      ? [\n          [p.row - 1, p.column - 1],\n          [p.row - 1, p.column],\n          [p.row - 1, p.column + 1],\n          [p.row, p.column - 1],\n          [p.row, p.column + 1],\n          [p.row + 1, p.column],\n        ]\n      : [\n          [p.row - 1, p.column],\n          [p.row, p.column - 1],\n          [p.row, p.column + 1],\n          [p.row + 1, p.column - 1],\n          [p.row + 1, p.column],\n          [p.row + 1, p.column + 1],\n        ]\n\n  return getFromNexts(pos.pos, nexts, p.piece)\n}\n","import { Gyoku0, Gyoku1 } from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\nimport { Position } from '../../../model/shogi/Position'\nimport getFromNexts from '../utils/getFromNexts'\n\nexport default function (pos: Position, p: Point): Point[] {\n  if (!p.piece || (p.piece !== Gyoku0 && p.piece !== Gyoku1))\n    throw new Error('Called validation for gyoku, but piece id was not gyoku.')\n\n  if (p.row === -1 && p.column === -1)\n    throw new Error('Gyoku must not be captured')\n\n  const nexts: number[][] = [\n    [p.row - 1, p.column - 1],\n    [p.row - 1, p.column],\n    [p.row - 1, p.column + 1],\n    [p.row, p.column - 1],\n    [p.row, p.column + 1],\n    [p.row + 1, p.column - 1],\n    [p.row + 1, p.column],\n    [p.row + 1, p.column + 1],\n  ]\n\n  return getFromNexts(pos.pos, nexts, p.piece)\n}\n","import { Uma0, Uma1 } from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\nimport { Position } from '../../../model/shogi/Position'\nimport { demote } from '../../game-handler/piece'\nimport { comp } from '../utils/algorithm'\nimport getFromNexts from '../utils/getFromNexts'\nimport kaku from './kaku'\n\nexport default function (pos: Position, p: Point): Point[] {\n  if (!p.piece || (p.piece !== Uma0 && p.piece !== Uma1))\n    throw new Error('Called validation for uma, but piece id was not uma.')\n\n  if (p.row === -1 || p.column === -1)\n    throw new Error('Uma must not be captured')\n\n  const nexts = [\n    [p.row - 1, p.column],\n    [p.row, p.column - 1],\n    [p.row, p.column + 1],\n    [p.row + 1, p.column],\n  ]\n\n  const kakuPoint = { row: p.row, column: p.column, piece: demote(p.piece) }\n  const kakuTargets = kaku(pos, kakuPoint)\n  const targets = getFromNexts(pos.pos, nexts, p.piece).concat(kakuTargets)\n  targets.sort(comp)\n  return targets\n}\n","import { Ryu0, Ryu1 } from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\nimport { Position } from '../../../model/shogi/Position'\nimport { demote } from '../../game-handler/piece'\nimport { comp } from '../utils/algorithm'\nimport getFromNexts from '../utils/getFromNexts'\nimport hisha from './hisha'\n\nexport default function (pos: Position, p: Point): Point[] {\n  if (!p.piece || (p.piece !== Ryu0 && p.piece !== Ryu1))\n    throw new Error('Called validation for ryu, but piece id was not ryu.')\n\n  if (p.row === -1 || p.column === -1)\n    throw new Error('Ryu must not be captured')\n\n  const nexts = [\n    [p.row - 1, p.column - 1],\n    [p.row - 1, p.column + 1],\n    [p.row + 1, p.column - 1],\n    [p.row + 1, p.column + 1],\n  ]\n\n  const hishaPoint = { row: p.row, column: p.column, piece: demote(p.piece) }\n  const hishaTargets = hisha(pos, hishaPoint)\n  const targets = getFromNexts(pos.pos, nexts, p.piece).concat(hishaTargets)\n  targets.sort(comp)\n  return targets\n}\n","import { Gyoku0, Piece } from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\nimport { Turn } from '../../../model/shogi/Turn'\n\n/**\n * 玉の位置を探す\n * @param pos number[][] 盤上の配置\n * @param turn Turn どっちの玉を探すか。先手玉を探したいときは Sente を渡す\n * @returns 見つかった場合 Point\n *          見つからなかった場合 undefined\n */\nexport default function (pos: number[][], turn: Turn): Point | undefined {\n  for (let r = 0; r < pos.length; r++) {\n    for (let c = 0; c < pos.length; c++) {\n      const piece: Piece = pos[r][c]\n      const isGyoku: boolean = Math.abs(piece) === Gyoku0\n      const isOwnersTurn: boolean = piece * turn > 0\n      if (isGyoku && isOwnersTurn) return { row: r, column: c, piece }\n    }\n  }\n}\n","import { Gyoku0, Piece } from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\nimport { Position } from '../../../model/shogi/Position'\nimport { Turn } from '../../../model/shogi/Turn'\nimport { moveBoardOnly } from '../../game-handler/position'\nimport getTargets from '../getTargets'\nimport { find } from './algorithm'\n\n/**\n * points が attacker の駒の効きに入っているか\n * 王手放置・打ち歩詰めチェックに使用する\n * 入っている: true\n * 入っていない: false\n *\n * 例. 初期局面で先手の59玉に、後手の駒の効きがあるかを調べるとき\n * pos は初期局面\n * point は、{ row: 8, column: 4 }\n * attacker は Gote(-1)\n * を渡し、false が返る\n *\n * @param pos Position 配置\n * @param point Point 調べたい位置\n * @param attacker Turn 攻め手番\n * @param ignoreCheckLeaving boolean | undefined 王手放置チェックを無視するか\n *                           無視する(チェックしない): true\n *                           無視しない(チェックする): false | undefined\n *                           基本的に外から呼ぶ時は undefined で\n */\nexport default function isPointed(\n  pos: Position,\n  point: Point,\n  attacker: Turn,\n  ignoreCheckLeaving?: boolean\n): boolean {\n  for (let row = 0; row < pos.pos.length; row++) {\n    for (let column = 0; column < pos.pos.length; column++) {\n      const piece: Piece = pos.pos[row][column]\n      // 受け側の駒か、空マスならスキップ\n      if (piece * attacker <= 0) continue\n\n      // 攻め側の駒の targets に point が含まれていなかったらスキップ\n      const targets: Point[] = getTargets(pos, { row, column, piece })\n      const foundIndex: number = find(targets, point)\n      if (foundIndex === -1) continue\n\n      // 王手放置チェックをしないとき、\n      // 攻め側の駒が玉じゃないとき、\n      // 受け側の駒が玉の時は\n      // 次に動けるので true\n      if (\n        ignoreCheckLeaving ||\n        Math.abs(piece) !== Gyoku0 ||\n        (point.piece && Math.abs(point.piece) === Gyoku0)\n      )\n        return true\n\n      // 攻め側の駒が玉なので動かした結果、攻め側の玉が王手放置にならないか調べる\n      const moved = moveBoardOnly({\n        pos,\n        source: { row, column },\n        dest: { row: point.row, column: point.column },\n        piece,\n      })\n      if (isPointed(moved, point, -attacker as Turn, true)) continue\n      return true\n    }\n  }\n\n  return false\n}\n","import { action, computed, observable } from 'mobx'\nimport { canPromote, mustPromote, promote } from '../lib/game-handler/piece'\nimport { move } from '../lib/game-handler/position'\nimport { changeIndex } from '../lib/kif-handler/changeIndex'\nimport { genKifString } from '../lib/kif-handler/genKifString'\nimport getCurrent from '../lib/kif-handler/getCurrent'\nimport pushMove from '../lib/kif-handler/pushMove'\nimport getTargets from '../lib/validatior/getTargets'\nimport { find } from '../lib/validatior/utils/algorithm'\nimport filterTargets from '../lib/validatior/utils/filterTargets'\nimport { ClickProps } from '../model/events/ClickProps'\nimport { MoveProps } from '../model/events/MoveProps'\nimport Kif, { newKif } from '../model/kif/Kif'\nimport { Move } from '../model/kif/Move'\nimport Confirm from '../model/shogi/Confirm'\nimport { GameState } from '../model/shogi/GameState'\nimport { Piece } from '../model/shogi/Piece'\nimport Point from '../model/shogi/Point'\nimport { Position } from '../model/shogi/Position'\nimport { Turn, Gote, Sente } from '../model/shogi/Turn'\n\nexport class DefaultGameState implements GameState {\n  @observable indexes: number[] = [-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n  @observable selected: Point | null = null\n  @observable confirm: Confirm | null = null\n  @observable moveTargets: Point[] = []\n  @observable kif: Kif = newKif()\n\n  @computed get currentMove(): Move {\n    return getCurrent(this.kif)\n  }\n\n  @action reverse(): void {\n    this.indexes = this.indexes.slice().reverse()\n  }\n\n  @action clickPiece(p: ClickProps): void {\n    const sel: Point | null = this.selected\n    const turn: Turn = this.currentMove.pos.turn\n\n    // Confirm 画面なのに、成・不成以外がクリックされたらなにもしない\n    if (!!this.confirm && isPiece(p.clicked)) return\n\n    // 選択された駒をクリックしたら選択解除\n    if (!!sel && isPiece(p.clicked) && selectedAgain(sel, p)) {\n      this.selected = null\n      this.moveTargets = []\n      return\n    }\n\n    // 手番側の駒なら選択する\n    if (isPiece(p.clicked) && ownerIsTurn(p.clicked, turn)) {\n      const { row, column, clicked, i } = p\n      const point: Point = { row, column, piece: clicked, i }\n      this.selected = point\n      const targets = getTargets(this.currentMove.pos, point)\n      const filtered = filterTargets(this.currentMove.pos, point, targets)\n      this.moveTargets = filtered\n      return\n    }\n\n    // 選択された駒がない場合は、手番ではない方の駒or空白マスがクリックされた\n    // ということなので何もしない\n    // `|| sel.piece === undefined` の部分は\n    // この後のコードで TypeScript のチェックを楽にするため\n    if (!sel || !sel.piece) return\n\n    // 動けない場所がクリックされたらなにもしない\n    const foundIndex: number = find(this.moveTargets, p)\n    if (foundIndex === -1) return\n\n    const source: Point = { row: sel.row, column: sel.column }\n    const dest: Point = { row: p.row, column: p.column }\n\n    const moveAndUpdateState = (piece: Piece, promote?: boolean) => {\n      const moveProps: MoveProps = {\n        pos: this.currentMove.pos,\n        source,\n        dest,\n        piece,\n        promote,\n      }\n      const pos: Position = move(moveProps)\n      const kifStr: string = genKifString(moveProps)\n      const moveForKif: Move = {\n        index: this.currentMove.index + 1,\n        str: kifStr,\n        pos,\n        source,\n        dest,\n        piece,\n        promote,\n      }\n      this.selected = null\n      this.confirm = null\n      this.moveTargets = []\n      this.kif = pushMove(this.kif, moveForKif)\n    }\n\n    // Confirm オブジェクトがクリックされたら動かす(成 or 不成の処理)\n    if (!isPiece(p.clicked)) {\n      const piece: Piece = p.promote ? p.clicked.promoted : p.clicked.preserved\n      moveAndUpdateState(piece, p.promote === true)\n      return\n    }\n\n    // 成を選択できるか\n    const cp: boolean = canPromote({\n      sourceRow: sel.row,\n      destRow: p.row,\n      piece: sel.piece,\n    })\n\n    // 強制的に成る必要があるか\n    const mp: boolean = mustPromote(sel.piece, p.row)\n\n    // 成・不成の選択ができるように、Confirm オブジェクトをセット\n    if (cp && !mp) {\n      this.confirm = {\n        promoted: promote(sel.piece),\n        preserved: sel.piece,\n        row: p.row,\n        column: p.column,\n      }\n      return\n    }\n\n    const piece: Piece = mp ? promote(sel.piece) : sel.piece\n    moveAndUpdateState(piece, mp || undefined)\n  }\n\n  @action clickKif(moveCount: number, branchIndex?: number): void {\n    if (this.confirm) return\n    this.kif = changeIndex(this.kif, moveCount, branchIndex)\n    this.selected = null\n    this.moveTargets = []\n  }\n}\n\nfunction isPiece(pc: Piece | Confirm): pc is Piece {\n  return typeof pc === 'number'\n}\n\nfunction ownerIsTurn(p: Piece, t: Turn): boolean {\n  return (p < 0 && t === Gote) || (p > 0 && t === Sente)\n}\n\nfunction selectedAgain(sel: Point, cp: ClickProps): boolean {\n  return (\n    sel.row === cp.row &&\n    sel.column === cp.column &&\n    sel.piece === cp.clicked &&\n    sel.i === cp.i\n  )\n}\n","import { Fu0, Gyoku0, Piece } from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\nimport { Position } from '../../../model/shogi/Position'\nimport { Gote, Sente, Turn } from '../../../model/shogi/Turn'\nimport { moveBoardOnly } from '../../game-handler/position'\nimport getTargets from '../getTargets'\nimport getGyokuPoint from './getGyokuPoint'\nimport isPointed from './isPointed'\n\n/**\n * 王手放置か打ち歩詰めだったら弾く\n * @param pos Position 動かす前の配置\n * @param point Point 動かしたい駒の場所情報\n * @param targets point を getTargets で取得したリスト\n * @returns targets にフィルターをかけた結果\n */\nexport default function filter(\n  pos: Position,\n  point: Point,\n  targets: Point[]\n): Point[] {\n  if (!point.piece) throw new Error('piece id is needed')\n\n  const turn: Turn = point.piece > 0 ? Sente : Gote\n\n  // 手番側の玉がある場所。駒を動かしたとき王手放置にならないようにメモしておく\n  let gp = getGyokuPoint(pos.pos, turn)\n\n  // 王手放置・打ち歩詰めチェックを通った場所を入れていく\n  const filtered: Point[] = []\n\n  for (let i = 0; i < targets.length; i++) {\n    // 盤上だけ動かす\n    const moved: Position = moveBoardOnly({\n      pos: pos,\n      source: { row: point.row, column: point.column },\n      dest: { row: targets[i].row, column: targets[i].column },\n      piece: point.piece as Piece,\n    })\n\n    // 玉自身の動きチェックをしていたら、玉が動くので、再セット\n    if (point.piece && Math.abs(point.piece) === Gyoku0)\n      gp = getGyokuPoint(moved.pos, turn)\n\n    // 王手放置ならpushしない\n    const isOute = gp !== undefined && isPointed(moved, gp, -turn as Turn)\n    if (isOute) continue\n\n    // 打ち歩詰めチェック\n    const isFu: boolean = Math.abs(point.piece) === Fu0\n    const isFromCapture: boolean = point.row === -1\n    const enemyGyoku = getGyokuPoint(moved.pos, -turn as Turn)\n    // 打った歩による王手である\n    if (\n      isFu &&\n      isFromCapture &&\n      enemyGyoku !== undefined &&\n      isPointed(moved, enemyGyoku, turn)\n    ) {\n      // 打った歩が次に取られるか\n      const fuIsPointed = isPointed(moved, targets[i], -turn as Turn)\n\n      // 相手玉が逃げられる場所があるか\n      const enemyGyokuTargets = getTargets(moved, enemyGyoku)\n      const filteredEnemyGyokuTargets = filter(\n        moved,\n        enemyGyoku,\n        enemyGyokuTargets\n      )\n\n      // 打った歩が取られない && 逃げ場所がないとき、打ち歩詰めである\n      if (!fuIsPointed && filteredEnemyGyokuTargets.length === 0) continue\n    }\n\n    // OK\n    filtered.push(targets[i])\n  }\n\n  return filtered\n}\n","import History, { isBranch, KifComponent } from '../../model/kif/History'\nimport Kif from '../../model/kif/Kif'\nimport { Move } from '../../model/kif/Move'\n\n/**\n * 棋譜の現在表示局面のMoveを返す\n * 開始局面は0なので、3手目を表示中なら3と3手目のMoveが返る\n * @param k Kif\n */\nexport default function (k: Kif): Move {\n  let history: History = k.history\n  let moveOrBranch: KifComponent = history.moves[history.index]\n\n  while (isBranch(moveOrBranch)) {\n    history = moveOrBranch.branches[moveOrBranch.index]\n    moveOrBranch = history.moves[history.index]\n  }\n\n  return moveOrBranch\n}\n","import { Position } from '../shogi/Position'\nimport { hirate } from '../shogi/PositionInit'\nimport History from './History'\nimport Meta from './Meta'\n\nexport default interface Kif {\n  // 対局者などの対局情報\n  meta: Meta\n\n  // 棋譜\n  history: History\n}\n\nexport function newKif(): Kif {\n  const initPos: Position = hirate()\n  return {\n    meta: {\n      version: '1',\n      player: { sente: '', gote: '' },\n      handicap: '平手',\n      initPos,\n    },\n    history: {\n      // TODO: 持ち方考える\n      moves: [\n        {\n          index: 0,\n          str: '開始局面',\n          pos: initPos,\n          source: { row: 0, column: 0 },\n          dest: { row: 0, column: 0 },\n          piece: 0,\n        },\n      ],\n      index: 0,\n    },\n  }\n}\n","import {\n  Empty,\n  Fu0,\n  Fu1,\n  Gin0,\n  Gin1,\n  Gyoku0,\n  Gyoku1,\n  Hisha0,\n  Hisha1,\n  Kaku0,\n  Kaku1,\n  Kei0,\n  Kei1,\n  Kin0,\n  Kin1,\n  Kyou0,\n  Kyou1,\n} from './Piece'\nimport { Position } from './Position'\nimport { Sente } from './Turn'\n\n/**\n * 初期局を返す\n * column は reverse() されているので、\n * 飛車と角の位置が逆に見える\n * 棋譜との互換性を保つため。\n * ３三角 → pos[2][2]、\n * ３四飛 → pos[3][2]、\n * ７六歩 → pos[5][6] という感じで変換が楽\n */\nexport function hirate(): Position {\n  return {\n    // prettier-ignore\n    pos: [\n      [Kyou1, Kei1,   Gin1,  Kin1,  Gyoku1, Kin1,  Gin1,  Kei1,   Kyou1],\n      [Empty, Kaku1,  Empty, Empty, Empty,  Empty, Empty, Hisha1, Empty],\n      [Fu1,   Fu1,    Fu1,   Fu1,   Fu1,    Fu1,   Fu1,   Fu1,    Fu1  ],\n      [Empty, Empty,  Empty, Empty, Empty,  Empty, Empty, Empty,  Empty],\n      [Empty, Empty,  Empty, Empty, Empty,  Empty, Empty, Empty,  Empty],\n      [Empty, Empty,  Empty, Empty, Empty,  Empty, Empty, Empty,  Empty],\n      [Fu0,   Fu0,    Fu0,   Fu0,   Fu0,    Fu0,   Fu0,   Fu0,    Fu0  ],\n      [Empty, Hisha0, Empty, Empty, Empty,  Empty, Empty, Kaku0,  Empty],\n      [Kyou0, Kei0,   Gin0,  Kin0,  Gyoku0, Kin0,  Gin0,  Kei0,   Kyou0],\n    ],\n    cap0: [0, 0, 0, 0, 0, 0, 0],\n    cap1: [0, 0, 0, 0, 0, 0, 0],\n    turn: Sente,\n    moveCount: 0,\n  }\n}\n","import { observable, observe } from 'mobx'\nimport { createContext } from 'react'\nimport { DefaultConfig } from '../config/Config'\nimport { Config } from '../model/config/Config'\nimport { DisplayState } from '../model/display/DisplayState'\nimport { EngineState } from '../model/engine/EngineState'\nimport { Connected } from '../model/engine/State'\nimport { Move } from '../model/kif/Move'\nimport { GameState } from '../model/shogi/GameState'\nimport { Store } from '../model/store/Store'\nimport { DefaultDisplayState } from './DisplayState'\nimport { DefaultEngineState } from './EngineState'\nimport { DefaultGameState } from './GameState'\n\nexport class DefaultStore implements Store {\n  constructor() {\n    this.engineState.setServerURL(this.config.serverURL)\n\n    // gameState で現在局面に変更があったら、将棋エンジンに局面をセットする\n    observe(this.gameState, 'currentMove', change =>\n      this.updatePosition(change.newValue)\n    )\n\n    // config の serverURL に変更があったら、engineState の serverURL を更新する\n    observe(this.config, 'serverURL', change =>\n      this.engineState.setServerURL(change.newValue)\n    )\n  }\n\n  @observable gameState: GameState = new DefaultGameState()\n  @observable engineState: EngineState = new DefaultEngineState()\n  @observable displayState: DisplayState = new DefaultDisplayState()\n  @observable config: Config = new DefaultConfig()\n\n  async updatePosition(move?: Move): Promise<void> {\n    const setPositionExecutable: boolean = this.engineState.state >= Connected\n    if (!setPositionExecutable) return\n\n    const m: Move = move || this.gameState.currentMove\n    this.engineState.updatePosition(m.pos)\n  }\n}\n\nexport const StoreContext = createContext<Store>(new DefaultStore())\n","import { observer } from 'mobx-react-lite'\nimport React, { FC } from 'react'\nimport { genKifString } from '../../../lib/kif-handler/genKifString'\nimport { StoreContext } from '../../../store/Store'\nimport './Columns.scss'\n\nconst Columns: FC = () => {\n  const { result } = React.useContext(StoreContext).engineState\n  if (!result) return <div />\n\n  const columns = result.map(i => {\n    const moves = i.moves.map((m, n) => {\n      const kif = genKifString(m, true)\n      // TODO: key\n      return (\n        <div key={n} className=\"EngineInfoRowContent\">\n          {kif}\n        </div>\n      )\n    })\n\n    return (\n      <div key={i.id} className=\"EngineInfoColumn\">\n        <div className=\"EngineInfoRow EngineInfoRowContainer\">\n          <div className=\"EngineInfoRowLabel\">score</div>\n          <div className=\"EngineInfoRowContent Center\">{i.score}</div>\n        </div>\n        <div className=\"EngineInfoRow EngineInfoRowContainer\">\n          <div className=\"EngineInfoRowLabel\">読み</div>\n          {moves}\n        </div>\n      </div>\n    )\n  })\n\n  return <>{columns}</>\n}\n\nexport default observer(Columns)\n","import React, { FC } from 'react'\nimport Columns from './Columns'\nimport './SideInfo.scss'\n\nconst SideInfo: FC = () => {\n  return (\n    <div className=\"EngineSideInfo\">\n      <div className=\"EngineSideInfoContainer\">\n        <Columns />\n      </div>\n    </div>\n  )\n}\n\nexport default SideInfo\n","import React, { FC } from 'react'\nimport './Mockup.scss'\n\ninterface Props {\n  onClick: () => Promise<void>\n}\n\nconst CloseButton: FC<Props> = (props: Props) => {\n  const width = 20\n  const one = line(0, 0, width, width)\n  const two = line(width, 0, 0, width)\n\n  return (\n    <div onClick={() => props.onClick()}>\n      <svg width={width} height={width} className=\"MockupCloseButton\">\n        {one}\n        {two}\n      </svg>\n    </div>\n  )\n\n  function line(x1: number, y1: number, x2: number, y2: number) {\n    return (\n      <line x1={x1} y1={y1} x2={x2} y2={y2} stroke=\"black\" strokeWidth=\"2\" />\n    )\n  }\n}\n\nexport default CloseButton\n","import { observer } from 'mobx-react-lite'\nimport React, { FC } from 'react'\nimport './Button.scss'\n\nexport interface Props {\n  label: string\n  onClick: () => Promise<void>\n}\n\nconst Button: FC<Props> = (props: Props) => {\n  return (\n    <button className=\"FormButton\" onClick={() => props.onClick()}>\n      {props.label}\n    </button>\n  )\n}\n\nexport default observer(Button)\n","import { observer } from 'mobx-react-lite'\nimport React, { FC } from 'react'\nimport { ShogiBoardClient } from '../../../../infrastructure/ShogiBoardClient'\nimport { Button as OptionButton } from '../../../../model/engine/Optoin'\nimport Button from '../../../form/Button'\nimport './Buttons.scss'\n\nexport interface Props {\n  buttons: Map<string, OptionButton>\n  sbclient: ShogiBoardClient\n}\n\nconst Buttons: FC<Props> = (props: Props) => {\n  const buttons = Array.from(props.buttons)\n  const elms: JSX.Element[] = buttons.map(([name, option]) => {\n    const onClick = () => props.sbclient.updateButton(option)\n    return <Button key={name} label={name} onClick={onClick} />\n  })\n\n  return <div className=\"OptionButton\">{elms}</div>\n}\n\nexport default observer(Buttons)\n","import { observer } from 'mobx-react-lite'\nimport React, { FC } from 'react'\nimport './Check.scss'\n\nexport interface Props {\n  label: string\n  value: boolean\n  name: string\n  onChange: (b: boolean) => Promise<void>\n}\n\nconst Check: FC<Props> = (props: Props) => {\n  const { label, value, name } = props\n  const id = `FormCheck-${name}`\n\n  return (\n    <div className=\"FormCheck\">\n      <span>{label}</span>\n      <div className=\"FormCheckToggle\">\n        <input\n          id={id}\n          name={id}\n          type=\"checkbox\"\n          onChange={e => props.onChange(e.target.checked)}\n          checked={value}\n        />\n        <label htmlFor={id}>\n          <div\n            className=\"ToggleSwitch\"\n            data-checked=\"ON\"\n            data-unchecked=\"OFF\"\n          />\n        </label>\n      </div>\n    </div>\n  )\n}\n\nexport default observer(Check)\n","import { observer } from 'mobx-react-lite'\nimport React, { FC } from 'react'\nimport { ShogiBoardClient } from '../../../../infrastructure/ShogiBoardClient'\nimport { Check as OptionCheck } from '../../../../model/engine/Optoin'\nimport Check from '../../../form/Check'\n\nexport interface Props {\n  checks: Map<string, OptionCheck>\n  sbclient: ShogiBoardClient\n}\n\nconst Checks: FC<Props> = (props: Props) => {\n  const checks = Array.from(props.checks)\n  const elms: JSX.Element[] = checks.map(([name, option]) => {\n    const onChange = (b: boolean) => {\n      option.setValue(b)\n      return props.sbclient.updateCheck(option)\n    }\n\n    return (\n      <Check\n        key={name}\n        label={name}\n        name={name}\n        value={option.value}\n        onChange={onChange}\n      />\n    )\n  })\n\n  return <div>{elms}</div>\n}\n\nexport default observer(Checks)\n","import { observer } from 'mobx-react-lite'\nimport React, { FC } from 'react'\nimport { ShogiBoardClient } from '../../../../infrastructure/ShogiBoardClient'\nimport { Range as OptionRange } from '../../../../model/engine/Optoin'\n\nexport interface Props {\n  option: OptionRange\n  sbclient: ShogiBoardClient\n}\n\nconst Range: FC<Props> = (props: Props) => {\n  const { name, value, inputValue, min, max } = props.option\n  // inputValue が Number && inRange のとき、 val に値をセットするようにしているため\n  // val と inputValue が一致していれば正しい値\n  const isValid: boolean = value.toString() === inputValue\n  const className: string = 'FormTextInput' + (isValid ? '' : 'FormTextInvalid')\n  const labelText: string = `${name}(${min}~${max})`\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { option, sbclient } = props\n    option.setValue(e.target.value)\n    return sbclient.updateRange(option)\n  }\n\n  return (\n    <div className=\"FormText\">\n      <input\n        className={className}\n        type=\"text\"\n        value={inputValue}\n        placeholder=\" \"\n        onChange={onChange}\n        required\n        min={min}\n        max={max}\n      />\n      <label>{labelText}</label>\n    </div>\n  )\n}\n\nexport default observer(Range)\n","import { observer } from 'mobx-react-lite'\nimport React, { FC } from 'react'\nimport { ShogiBoardClient } from '../../../../infrastructure/ShogiBoardClient'\nimport { Range as OptionRange } from '../../../../model/engine/Optoin'\nimport Range from './Range'\n\nexport interface Props {\n  ranges: Map<string, OptionRange>\n  sbclient: ShogiBoardClient\n}\n\nconst Ranges: FC<Props> = (props: Props) => {\n  const { ranges, sbclient } = props\n\n  const elms: JSX.Element[] = Array.from(ranges).map(([name, option]) => (\n    <Range key={name} option={option} sbclient={sbclient} />\n  ))\n\n  return <div>{elms}</div>\n}\n\nexport default observer(Ranges)\n","import { observer } from 'mobx-react-lite'\nimport React, { ChangeEvent, FC } from 'react'\nimport './Select.scss'\n\nexport interface Props {\n  label: string\n  value: string\n  options: string[]\n  onChange: (s: string) => Promise<void>\n}\n\nconst Select: FC<Props> = (props: Props) => {\n  const { label, value, options } = props\n  const opts = options.map((value: string, i: number) => (\n    <option key={i} value={value}>\n      {value}\n    </option>\n  ))\n\n  const onChange = (e: ChangeEvent<HTMLSelectElement>) => {\n    props.onChange(e.target.value)\n  }\n\n  return (\n    <div className=\"FormSelectContainer\">\n      <label>{label}</label>\n      <div className=\"FormSelect SelectTriangle\">\n        <select onChange={onChange} value={value} required>\n          {opts}\n        </select>\n      </div>\n    </div>\n  )\n}\n\nexport default observer(Select)\n","import { observer } from 'mobx-react-lite'\nimport React, { FC } from 'react'\nimport { ShogiBoardClient } from '../../../../infrastructure/ShogiBoardClient'\nimport { Select as OptionSelect } from '../../../../model/engine/Optoin'\nimport Select from '../../../form/Select'\n\nexport interface Props {\n  selects: Map<string, OptionSelect>\n  sbclient: ShogiBoardClient\n}\n\nconst Selects: FC<Props> = (props: Props) => {\n  const selects = Array.from(props.selects)\n\n  const elms: JSX.Element[] = selects.map(([name, option]) => {\n    const onChange = (s: string) => {\n      option.setValue(s)\n      return props.sbclient.updateSelect(option)\n    }\n\n    return (\n      <Select\n        key={name}\n        label={name}\n        value={option.value}\n        options={option.vars}\n        onChange={onChange}\n      />\n    )\n  })\n\n  return <div>{elms}</div>\n}\n\nexport default observer(Selects)\n","import { observer } from 'mobx-react-lite'\nimport React, { ChangeEvent, FC } from 'react'\nimport './Text.scss'\n\nexport interface Props {\n  value: string\n  label: string\n  onChange: (s: string) => Promise<void>\n  allowEmpty?: boolean\n  placeholder?: string\n}\n\nconst Text: FC<Props> = (props: Props) => {\n  const { value, label, allowEmpty, placeholder } = props\n\n  const classes = ['FormTextInput']\n  if (!allowEmpty && value === '') classes.push('FormTextInvalid')\n  const className: string = classes.join(' ')\n\n  const onChange = (e: ChangeEvent<HTMLInputElement>) => {\n    props.onChange(e.target.value)\n  }\n\n  return (\n    <div className=\"FormText\">\n      <input\n        className={className}\n        type=\"text\"\n        value={value}\n        placeholder={placeholder || ' '}\n        onChange={onChange}\n        required\n      />\n      <label>{label}</label>\n    </div>\n  )\n}\n\nexport default observer(Text)\n","import { observer } from 'mobx-react-lite'\nimport React, { FC } from 'react'\nimport { ShogiBoardClient } from '../../../../infrastructure/ShogiBoardClient'\nimport { Text as OptionText } from '../../../../model/engine/Optoin'\nimport Text from '../../../form/Text'\n\nexport interface Props {\n  texts: Map<string, OptionText>\n  sbclient: ShogiBoardClient\n}\n\nconst Texts: FC<Props> = (props: Props) => {\n  const texts = Array.from(props.texts)\n\n  const strElms: JSX.Element[] = texts.map(([name, option]) => {\n    const onChange = (s: string) => {\n      option.setValue(s)\n      return props.sbclient.updateText(option)\n    }\n\n    return (\n      <Text key={name} label={name} value={option.value} onChange={onChange} />\n    )\n  })\n\n  return <div>{strElms}</div>\n}\n\nexport default observer(Texts)\n","import interval from 'interval-promise'\nimport { observer } from 'mobx-react-lite'\nimport React, { FC } from 'react'\nimport { EngineState } from '../../../model/engine/EngineState'\nimport { Info } from '../../../model/engine/Info'\nimport { Thinking } from '../../../model/engine/State'\nimport { Store } from '../../../model/store/Store'\nimport { StoreContext } from '../../../store/Store'\nimport './Detail.scss'\nimport Buttons from './form/Buttons'\nimport Checks from './form/Checks'\nimport Ranges from './form/Ranges'\nimport Selects from './form/Selects'\nimport Texts from './form/Texts'\n\nconst GET_RESULT_INTERVAL = 1000 // ms\n\nconst Detail: FC = () => {\n  const { gameState, displayState, engineState }: Store = React.useContext(\n    StoreContext\n  )\n  const { current, options, sbclient }: EngineState = engineState\n  if (!current || !options) return <div />\n\n  const { buttons, checks, ranges, selects, texts } = options\n\n  const disconnect = () => engineState.disconnect()\n  const start = () =>\n    engineState\n      .startThinking()\n      .then(() => displayState.closeMockup())\n      .then(fetchInterval)\n      .catch(e => console.error(e))\n\n  const disconnectBtn = (\n    <button className=\"ButtonDisconnect\" onClick={disconnect}>\n      接続解除\n    </button>\n  )\n\n  const startBtn = (\n    <button className=\"ButtonStartThinking\" onClick={start}>\n      思考開始\n    </button>\n  )\n\n  return (\n    <div className=\"DetailContainer\">\n      <h1 className=\"EngineName\">{current}</h1>\n      {disconnectBtn}\n      {startBtn}\n      <h2 className=\"EngineOption\">オプション</h2>\n      <Buttons buttons={buttons} sbclient={sbclient} />\n      <Checks checks={checks} sbclient={sbclient} />\n      <Ranges ranges={ranges} sbclient={sbclient} />\n      <Selects selects={selects} sbclient={sbclient} />\n      <Texts texts={texts} sbclient={sbclient} />\n      {disconnectBtn}\n      {startBtn}\n    </div>\n  )\n\n  function fetchInterval(): Promise<void> {\n    // 思考を開始したら、思考結果を定期的に取得する\n    return interval(async (_, stop) => {\n      const { current, state, sbclient } = engineState\n      if (!current || state !== Thinking) {\n        stop()\n        return\n      }\n\n      try {\n        const result: Info[] = await sbclient.getResult(gameState.currentMove)\n        await engineState.setResult(result)\n      } catch (e) {\n        console.error(e)\n      }\n    }, GET_RESULT_INTERVAL)\n  }\n}\n\nexport default observer(Detail)\n","import React, { FC } from 'react'\nimport './Loader.scss'\n\nconst Loader: FC = () => {\n  return (\n    <div className=\"Loader sk-fading-circle\">\n      <div className=\"sk-circle1 sk-circle\" />\n      <div className=\"sk-circle2 sk-circle\" />\n      <div className=\"sk-circle3 sk-circle\" />\n      <div className=\"sk-circle4 sk-circle\" />\n      <div className=\"sk-circle5 sk-circle\" />\n      <div className=\"sk-circle6 sk-circle\" />\n      <div className=\"sk-circle7 sk-circle\" />\n      <div className=\"sk-circle8 sk-circle\" />\n      <div className=\"sk-circle9 sk-circle\" />\n      <div className=\"sk-circle10 sk-circle\" />\n      <div className=\"sk-circle11 sk-circle\" />\n      <div className=\"sk-circle12 sk-circle\" />\n    </div>\n  )\n}\n\nexport default Loader\n","import { observer } from 'mobx-react-lite'\nimport React, { FC, useEffect, useRef } from 'react'\nimport { Connecting, NotConnected, State } from '../../../model/engine/State'\nimport { Store } from '../../../model/store/Store'\nimport { StoreContext } from '../../../store/Store'\nimport Loader from '../../util/Loader'\nimport './List.scss'\n\nconst List: FC = () => {\n  const store: Store = React.useContext(StoreContext)\n  const { engineState } = store\n  const latestEngineState = useRef(engineState)\n  const { names, current, state } = engineState\n\n  useEffect(() => {\n    const engineState = latestEngineState.current\n    engineState.sbclient\n      .init()\n      .then((list: string[]) => engineState.setNames(list))\n      .catch(err => {\n        const msg = [\n          '接続に失敗しました。以下を確認してください。',\n          '1. サーバーが起動しているか',\n          '2. サーバーのURLが正しいか',\n          '3. サーバーのログを確認し、エラー等が出ていないか',\n          '4. サーバーで将棋エンジンの実行パスを設定したか',\n          '5. 将棋エンジンが実行可能であるか',\n        ].join('\\n')\n        console.error(err)\n        engineState.disconnect()\n        alert(msg)\n      })\n  }, [])\n\n  if (names.length === 0)\n    return (\n      <div className=\"ListEngineName\">\n        <span>利用可能な将棋エンジンが設定されていません</span>\n      </div>\n    )\n\n  const engineNames = names.map((name, i) => {\n    const isCurrent: boolean = name === current\n    const loading: boolean = isCurrent && state === Connecting\n    const loader = loading ? <Loader /> : undefined\n    const onClick = () => setCurrentEngine(name, state)\n    return (\n      <div className=\"ListEngineName\" key={i} onClick={onClick}>\n        {loader}\n        <span>{name}</span>\n      </div>\n    )\n  })\n\n  return <>{engineNames}</>\n\n  async function setCurrentEngine(name: string, state: State): Promise<void> {\n    if (state !== NotConnected) return\n    await engineState.connect(name)\n    await store.updatePosition().catch(e => console.error(e))\n  }\n}\n\nexport default observer(List)\n","import { observer } from 'mobx-react-lite'\nimport React, { FC } from 'react'\nimport { MockupHidden } from '../../../model/display/MockupState'\nimport { EngineState } from '../../../model/engine/EngineState'\nimport { Connecting, NotConnected } from '../../../model/engine/State'\nimport { Store } from '../../../model/store/Store'\nimport { StoreContext } from '../../../store/Store'\nimport CloseButton from '../../util/CloseButton'\nimport Detail from './Detail'\nimport List from './List'\n\nconst Controller: FC = () => {\n  const { engineState, displayState }: Store = React.useContext(StoreContext)\n  const { state }: EngineState = engineState\n\n  // 接続前なら将棋エンジンの一覧画面を出す\n  const isList: boolean = state === NotConnected || state === Connecting\n  const child: JSX.Element = isList ? <List /> : <Detail />\n\n  const onClick = () => displayState.setMockupState(MockupHidden)\n\n  return (\n    <div className=\"Mockup\">\n      <CloseButton onClick={onClick} />\n      {child}\n    </div>\n  )\n}\n\nexport default observer(Controller)\n","import { observer } from 'mobx-react-lite'\nimport React, { FC } from 'react'\nimport { MockupHidden } from '../../model/display/MockupState'\nimport { StoreContext } from '../../store/Store'\nimport Check from '../form/Check'\nimport Text from '../form/Text'\nimport CloseButton from '../util/CloseButton'\n\nconst Setting: FC = () => {\n  const { config, displayState } = React.useContext(StoreContext)\n  const { paintTargets, serverURL, saveToLocalStorage } = config\n\n  return (\n    <div className=\"Mockup\">\n      <CloseButton onClick={() => displayState.setMockupState(MockupHidden)} />\n      <h1>設定</h1>\n      <Text\n        label=\"shogi-board-server の URL\"\n        value={serverURL}\n        allowEmpty={true}\n        onChange={s => config.setServerURL(s)}\n        placeholder=\"(例)http://localhost:8080\"\n      />\n      <Check\n        label=\"駒が移行できるマスに色を付ける\"\n        value={paintTargets}\n        name=\"PaintTargets\"\n        onChange={b => config.setPaintTargets(b)}\n      />\n      <Check\n        label=\"ブラウザに設定を保存する\"\n        value={saveToLocalStorage}\n        name=\"SaveToCookie\"\n        onChange={b => config.setSaveToLocalStorage(b)}\n      />\n    </div>\n  )\n}\n\nexport default observer(Setting)\n","import { observer } from 'mobx-react-lite'\nimport React, { FC } from 'react'\nimport { columnString, rowString } from '../../lib/strings'\nimport { find } from '../../lib/validatior/utils/algorithm'\nimport { ClickProps } from '../../model/events/ClickProps'\nimport Confirm from '../../model/shogi/Confirm'\nimport { Empty, Piece } from '../../model/shogi/Piece'\nimport Point from '../../model/shogi/Point'\nimport { Gote, Sente, Turn } from '../../model/shogi/Turn'\nimport { StoreContext } from '../../store/Store'\nimport './Cell.scss'\n\nexport interface Props {\n  row: number\n  column: number\n}\n\nconst Cell: FC<Props> = (props: Props) => {\n  const { gameState, config } = React.useContext(StoreContext)\n  const { indexes, selected, confirm, currentMove, moveTargets } = gameState\n  const { row, column } = props\n\n  const getPiece = () => {\n    const isOnBoard: boolean = inRange(row) && inRange(column)\n    if (!isOnBoard) return Empty\n    return gameState.currentMove.pos.pos[row][column]\n  }\n\n  const piece: Piece = getPiece()\n\n  const turn: Turn = currentMove.pos.turn\n  const isTurn: boolean =\n    (piece > 0 && turn === Sente) || (piece < 0 && turn === Gote)\n\n  // 着色する設定 && 駒が移動できるマスである\n  const isTargeted =\n    config.paintTargets && find(moveTargets, { row, column }) !== -1\n\n  const className: string = getClassName({\n    r: row,\n    c: column,\n    rv: indexes[0] === 9,\n    p: piece,\n    sel: selected,\n    confirm: confirm,\n    isTurn,\n    isTargeted,\n  })\n\n  return (\n    <div className={className} onClick={() => click()}>\n      {renderConfirm(confirm)}\n      {renderEdgeTextRow()}\n      {renderEdgeTextColumn()}\n    </div>\n  )\n\n  function renderConfirm(cf: Confirm | null): JSX.Element | undefined {\n    if (!cf || cf.row !== row || cf.column !== column) return\n\n    const isReversed: boolean = indexes[0] === 9\n    const isGote =\n      (isReversed && cf.preserved > 0) || (!isReversed && cf.preserved < 0)\n\n    const className = 'Piece-Confirm Piece-Confirm' + Number(isGote)\n\n    const promote = () => click(cf, true)\n    const preserve = () => click(cf)\n\n    // TODO: この方法だと画面幅によって1pxずれる\n    return (\n      <div className={className}>\n        <div className=\"Piece-Confirm-Promote\" onClick={promote} />\n        <div className=\"Piece-Confirm-Preserve\" onClick={preserve} />\n      </div>\n    )\n  }\n\n  function renderEdgeTextRow(): JSX.Element | undefined {\n    const needText = inRange(column) && row === -1\n    if (needText) return <span>{columnString(column)}</span>\n  }\n\n  function renderEdgeTextColumn(): JSX.Element | undefined {\n    const needText = inRange(row) && column === -1\n    if (needText) return <span>{rowString(row)}</span>\n  }\n\n  function click(cf?: Confirm, promote?: true) {\n    if (confirm && !cf) return\n    const clicked: Confirm | Piece = cf || getPiece()\n    const p: ClickProps = { clicked, row, column, promote }\n    gameState.clickPiece(p)\n  }\n}\n\ninterface GetClassNameProps {\n  r: number // row\n  c: number // column\n  rv: boolean // isReversed\n  p: Piece\n  sel: Point | null // selected\n  confirm: Confirm | null\n  isTurn: boolean\n  isTargeted: boolean\n}\n\n// つらい感じ\nfunction getClassName(p: GetClassNameProps): string {\n  if (\n    !!p.confirm &&\n    !!p.sel &&\n    ((p.r === p.sel.row && p.c === p.sel.column) ||\n      (p.r === p.confirm.row && p.c === p.confirm.column))\n  ) {\n    // TODO: ヒドス。あとで必ず修正すること!!\n    p.p = Empty\n  }\n\n  const rowInRange: boolean = inRange(p.r)\n  const colInRange: boolean = inRange(p.c)\n  const isLeft: boolean =\n    rowInRange && ((!p.rv && p.c === 8) || (p.rv && p.c === 0))\n  const isTop: boolean =\n    colInRange && ((!p.rv && p.r === 0) || (p.rv && p.r === 8))\n  const isStar: boolean =\n    (!p.rv &&\n      ((p.r === 2 && p.c === 6) ||\n        (p.r === 2 && p.c === 3) ||\n        (p.r === 5 && p.c === 6) ||\n        (p.r === 5 && p.c === 3))) ||\n    (p.rv &&\n      ((p.r === 6 && p.c === 2) ||\n        (p.r === 6 && p.c === 5) ||\n        (p.r === 3 && p.c === 2) ||\n        (p.r === 3 && p.c === 5)))\n  const isSelected: boolean =\n    rowInRange &&\n    colInRange &&\n    !!p.sel &&\n    p.sel.row === p.r &&\n    p.sel.column === p.c\n\n  const piece: string = rowInRange && colInRange ? 'Piece Piece-Bordered ' : ''\n  const rvp: number | undefined = p.p && p.rv ? p.p * -1 : p.p\n  const pieceImg: string = rvp ? `Piece-${rvp} ` : ''\n  const pieceTurn: string = p.isTurn ? 'Piece-Turn ' : ''\n  const pieceSelected: string = isSelected ? 'Piece-Selected ' : ''\n  const pieceTargeted: string = p.isTargeted ? 'Piece-Targeted ' : ''\n  const left: string = isLeft ? 'Piece-Left ' : ''\n  const top: string = isTop ? 'Piece-Top ' : ''\n  const edgeText: string =\n    (p.c === -1 && rowInRange) || (p.r === -1 && colInRange)\n      ? 'Cell-EdgeText '\n      : ''\n  const star: string = isStar ? 'Piece-Star' : ''\n\n  return `Cell ${piece}${pieceImg}${pieceTurn}${pieceSelected}${pieceTargeted}${left}${top}${edgeText}${star}`\n}\n\nfunction inRange(n: number): boolean {\n  return 0 <= n && n <= 8\n}\n\nexport default observer(Cell)\n","import { observer } from 'mobx-react-lite'\nimport React, { FC } from 'react'\nimport {\n  MockupEngineControl,\n  MockupServerSetting,\n  MockupSetting,\n} from '../../model/display/MockupState'\nimport { StoreContext } from '../../store/Store'\nimport Controller from '../engine/connection/Controller'\nimport Setting from '../setting/Setting'\nimport './Board.scss'\nimport Cell from './Cell'\n\nconst Board: FC = () => {\n  const { gameState, displayState } = React.useContext(StoreContext)\n  const idx = gameState.indexes\n  const rows = idx.map(r =>\n    idx\n      .slice()\n      .reverse()\n      .map(c => <Cell key={r * 10 + c} row={r} column={c} />)\n  )\n\n  return (\n    <div className=\"BoardContainer\">\n      <div className=\"ResetPseudo\">\n        <div className=\"Board\">{rows}</div>\n        {renderMockup()}\n      </div>\n    </div>\n  )\n\n  function renderMockup() {\n    const { mockup } = displayState\n    if (mockup === MockupEngineControl) return <Controller />\n    // TODO: server setting は別に分ける？\n    if (mockup === MockupSetting || mockup === MockupServerSetting)\n      return <Setting />\n  }\n}\n\nexport default observer(Board)\n","import History, { isBranch, KifComponent } from '../../model/kif/History'\nimport Kif from '../../model/kif/Kif'\n\nexport function getAsString(k: Kif): string {\n  if (k.history.moves.length < 1) return ''\n  return getRec({\n    moves: k.history.moves.slice(1),\n    index: k.history.index,\n  })\n}\n\nfunction getRec(h: History): string {\n  return h.moves\n    .map((kc: KifComponent) =>\n      isBranch(kc) ? getRec(kc.branches[kc.index]) : `${kc.index} ${kc.str}`\n    )\n    .join('\\n')\n}\n","import { observer } from 'mobx-react-lite'\nimport React, { FC } from 'react'\nimport { getAsString } from '../../lib/kif-handler/getAsString'\nimport {\n  MockupEngineControl,\n  MockupServerSetting,\n  MockupSetting,\n} from '../../model/display/MockupState'\nimport { Thinking } from '../../model/engine/State'\nimport { StoreContext } from '../../store/Store'\nimport './Buttons.scss'\n\nconst Buttons: FC = () => {\n  const { gameState, displayState, engineState, config } = React.useContext(\n    StoreContext\n  )\n  const { currentMove, kif } = gameState\n  const i: number = currentMove.index\n\n  const prevOne: number = i - 1 < 0 ? 0 : i - 1\n  const nextOne: number = i + 1\n  const prevFive: number = i - 5 < 0 ? 0 : i - 5\n  const nextFive: number = i + 5\n  const skipKif = (i: number) => gameState.clickKif(i)\n\n  const engineOnClick: () => Promise<void> = async () => {\n    const { current, state } = engineState\n    if (!current || state !== Thinking) return await connectToEngine()\n    await engineState.stopThinking()\n  }\n\n  return (\n    <div className=\"ButtonsContainer\">\n      <button className=\"PrevOne\" onClick={() => skipKif(prevOne)}>\n        ＜\n      </button>\n      <button className=\"NextOne\" onClick={() => skipKif(nextOne)}>\n        ＞\n      </button>\n      <button className=\"PrevFive\" onClick={() => skipKif(prevFive)}>\n        ＜ 5\n      </button>\n      <button className=\"NextFive\" onClick={() => skipKif(nextFive)}>\n        5 ＞\n      </button>\n      <button className=\"Reverse\" onClick={() => gameState.reverse()}>\n        盤面反転\n      </button>\n      <button className=\"Copy\" data-clipboard-text={getAsString(kif)}>\n        棋譜コピー\n      </button>\n      <button className=\"ConnectToEngine\" onClick={engineOnClick}>\n        {engineState.state === Thinking ? '思考停止' : '将棋エンジン'}\n      </button>\n      <button\n        className=\"Configuration\"\n        onClick={() => displayState.setMockupState(MockupSetting)}\n      >\n        設定\n      </button>\n    </div>\n  )\n\n  async function connectToEngine() {\n    // サーバー URL が設定されてなかったら、設定画面を出す\n    if (config.serverURL === '') {\n      console.log('here')\n      return await displayState.setMockupState(MockupServerSetting)\n    }\n\n    await displayState.setMockupState(MockupEngineControl)\n  }\n}\n\nexport default observer(Buttons)\n","import { observer } from 'mobx-react-lite'\nimport React, { FC } from 'react'\nimport {\n  Fu0,\n  Gin0,\n  Hisha0,\n  Kaku0,\n  Kei0,\n  Kin0,\n  Kyou0,\n  Piece,\n} from '../../model/shogi/Piece'\nimport { Turn } from '../../model/shogi/Turn'\nimport { StoreContext } from '../../store/Store'\nimport './Captures.scss'\n\nexport interface Props {\n  isLeftSide: boolean\n  captures: number[]\n  isTurn: boolean\n}\n\nconst Captures: FC<Props> = (props: Props) => {\n  const { gameState } = React.useContext(StoreContext)\n  const { selected, currentMove } = gameState\n\n  const { captures, isLeftSide, isTurn } = props\n  const className: string = 'Captures Captures' + Number(isLeftSide)\n\n  return (\n    <div className={className}>\n      {cells('Hisha', Hisha0, captures[6])}\n      {cells('Kaku', Kaku0, captures[5])}\n      {cells('Kin', Kin0, captures[4])}\n      {cells('Gin', Gin0, captures[3])}\n      {cells('Kei', Kei0, captures[2])}\n      {cells('Kyou', Kyou0, captures[1])}\n      {cells('Fu', Fu0, captures[0])}\n    </div>\n  )\n\n  function cells(name: string, pieceId: Piece, count: number): JSX.Element {\n    const turn: Turn = currentMove.pos.turn\n\n    const children = Array.from(Array(count).keys()).map(i => {\n      const selectedClass = isTurn ? getSelectedClass(pieceId, i) : ''\n      const isTurnClass = isTurn ? 'Piece-Turn' : ''\n      const piece = isLeftSide ? -pieceId : pieceId\n      const sideNumber = Number(isLeftSide)\n      const captureClass = `Capture-${pieceId}${sideNumber}${count}${i + 1}`\n      const className = `Piece Piece-${piece} ${isTurnClass} ${selectedClass} ${captureClass}`\n      const key = `Cap-${sideNumber}-${name}-${i}`\n\n      const onClick = () => {\n        if (!isTurn) return\n        const clicked: number = turn * pieceId\n        gameState.clickPiece({ clicked, row: -1, column: -1, i })\n      }\n      return <div key={key} className={className} onClick={onClick} />\n    })\n    const className = `Captures-Inner Captures-${name}`\n    return <div className={className}>{children}</div>\n  }\n\n  function getSelectedClass(pieceId: Piece, index: number): string {\n    return !!selected &&\n    selected.piece &&\n    selected.row === -1 &&\n    selected.column === -1 &&\n    Math.abs(selected.piece) === pieceId /* TODO: すげー嫌 */ &&\n      selected.i === index\n      ? 'Piece-Selected'\n      : ''\n  }\n}\n\nexport default observer(Captures)\n","import { observer } from 'mobx-react-lite'\nimport React, { FC } from 'react'\nimport { Gote, Sente } from '../../model/shogi/Turn'\nimport { StoreContext } from '../../store/Store'\nimport Buttons from './Buttons'\nimport Captures from './Captures'\nimport './LeftSide.scss'\n\nconst LeftSide: FC = () => {\n  const { indexes, currentMove } = React.useContext(StoreContext).gameState\n  const { turn, cap0, cap1 } = currentMove.pos\n  const caps: number[] = indexes[0] === -1 ? cap1 : cap0\n  const isTurn: boolean = indexes[0] === -1 ? turn === Gote : turn === Sente\n\n  return (\n    <div className=\"LeftSide\">\n      <Captures isLeftSide={true} captures={caps} isTurn={isTurn} />\n      <div className=\"LeftInfo\">\n        <div />\n        <Buttons />\n      </div>\n    </div>\n  )\n}\n\nexport default observer(LeftSide)\n","import { observer } from 'mobx-react-lite'\nimport React, { FC, useEffect } from 'react'\nimport { intoView } from '../../lib/dom-handler/intoView'\nimport Branch from '../../model/kif/Branch'\nimport History, { isBranch, KifComponent } from '../../model/kif/History'\nimport { Move } from '../../model/kif/Move'\nimport { StoreContext } from '../../store/Store'\nimport './Kif.scss'\n\nconst CURRENT_KIF_ELM_ID = 'Move-Current'\n\nconst Kif: FC = () => {\n  const { gameState } = React.useContext(StoreContext)\n\n  useEffect(() => {\n    // 自動スクロール\n    // TODO: スマホで使いにくいし自前実装した方がいいかも\n    //       まぁスマホサポートしてないけど\n    intoView(CURRENT_KIF_ELM_ID)\n  })\n\n  const { moves } = gameState.kif.history\n  const elms: JSX.Element[] = renderKif(moves, 0)\n  return (\n    <div className=\"KifContainer\">\n      <div className=\"Kif-Inner\">{elms}</div>\n    </div>\n  )\n\n  function renderKif(moves: KifComponent[], n: number): JSX.Element[] {\n    return moves.flatMap((kc: KifComponent, i: number) => {\n      if (isBranch(kc)) return renderBranch(kc, n + i)\n      return renderMove(kc, n + i)\n    })\n  }\n\n  function renderBranch(b: Branch, n: number): JSX.Element[] {\n    const main: History = b.branches[b.index]\n    const [head, ...rest] = main.moves // head は必ず Move\n\n    const otherHeadsDom: JSX.Element[] = []\n    for (let i = 0; i < b.branches.length; i++) {\n      if (i === b.index) continue\n      const m: Move = b.branches[i].moves[0] as Move // head は必ず Move\n      const key: string = `${n}-${i}`\n      const txt: string = `-- ${m.str}`\n      const onClick = () => gameState.clickKif(n, i)\n      otherHeadsDom.push(\n        <div key={key} className=\"Branch\" onClick={onClick}>\n          <span>{txt}</span>\n        </div>\n      )\n    }\n\n    const restDom = rest.length !== 0 ? renderKif(rest, n + 1) : []\n\n    return [renderMove(head as Move, n)].concat(otherHeadsDom).concat(restDom)\n  }\n\n  function renderMove(m: Move, n: number): JSX.Element {\n    const { currentMove } = gameState\n    const id = currentMove.index === n ? CURRENT_KIF_ELM_ID : undefined\n    const onClick = () => gameState.clickKif(n)\n\n    return (\n      <div key={n} className=\"Move\" id={id} onClick={onClick}>\n        <div className=\"Number code\">{n + '.'}</div>\n        <div className=\"MoveText\">{m.str}</div>\n      </div>\n    )\n  }\n}\n\nexport default observer(Kif)\n","// ただ scrollIntoView を呼ぶだけ\nexport function intoView(id: string): void {\n  const current: HTMLElement | null = document.getElementById(id)\n  if (!current) return\n  if (!(current as any).scrollIntoViewIfNeeded) return\n  ;(current as any).scrollIntoViewIfNeeded()\n}\n","import { observer } from 'mobx-react-lite'\nimport React, { FC } from 'react'\nimport { Gote, Sente } from '../../model/shogi/Turn'\nimport { StoreContext } from '../../store/Store'\nimport Captures from './Captures'\nimport Kif from './Kif'\nimport './RightSide.scss'\n\nconst RightSide: FC = () => {\n  const { indexes, currentMove } = React.useContext(StoreContext).gameState\n  const { turn, cap0, cap1 } = currentMove.pos\n  const caps: number[] = indexes[0] === 9 ? cap1 : cap0\n  const isTurn: boolean = indexes[0] === 9 ? turn === Gote : turn === Sente\n\n  return (\n    <div className=\"RightSide\">\n      <div className=\"RightInfo\">\n        <Kif />\n      </div>\n      <Captures isLeftSide={false} captures={caps} isTurn={isTurn} />\n    </div>\n  )\n}\n\nexport default observer(RightSide)\n","import React, { FC } from 'react'\nimport Board from './Board'\nimport './BoardArea.scss'\nimport LeftSide from './LeftSide'\nimport RightSide from './RightSide'\n\nconst BoardArea: FC = () => {\n  return (\n    <div className=\"BoardArea\">\n      <LeftSide />\n      <Board />\n      <RightSide />\n    </div>\n  )\n}\n\nexport default BoardArea\n","import { observer } from 'mobx-react-lite'\nimport React, { FC } from 'react'\nimport { Thinking } from '../model/engine/State'\nimport { StoreContext } from '../store/Store'\nimport './App.scss'\nimport SideInfo from './engine/info/SideInfo'\nimport BoardArea from './shogi/BoardArea'\n\nconst App: FC = () => {\n  const { engineState } = React.useContext(StoreContext)\n\n  const isThinking: boolean = engineState.state === Thinking\n  const className = 'App App-' + (isThinking ? 'SideInfo' : 'BoardOnly')\n\n  return (\n    <div className={className}>\n      <BoardArea />\n      {isThinking ? <SideInfo /> : null}\n    </div>\n  )\n}\n\nexport default observer(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    )\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import ClipboardJS from 'clipboard'\n// https://github.com/mobxjs/mobx-react-lite/#observer-batching\nimport 'mobx-react-lite/batchingForReactDom'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\nimport './index.scss'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\nnew ClipboardJS('.Copy')\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register()\n"],"sourceRoot":""}